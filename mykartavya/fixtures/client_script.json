[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "SVA User",
  "enabled": 1,
  "modified": "2025-07-09 11:33:50.498298",
  "module": "Mykartavya",
  "name": "Mykartavya User",
  "script": "frappe.ui.form.on('SVA User', {\n    after_workflow_action(frm) {\n        if (frm.doc.workflow_state === 'Rejected') {\n            frm.set_value(\"status\", \"Inactive\");\n            frm.save()\n        }\n    },\n    \n    validate(frm){\n        if (frm.doc.custom_phone_number){\n             frm.set_value(\"custom_phone_number_data\",frm.doc.custom_phone_number)\n        }\n    },\n    custom_phone_number(frm) {\n        const raw = frm.doc.custom_phone_number;\n        if (raw) {\n            // Sirf digits nikaalein\n            const digits = raw.replace(/\\D/g, '');\n            if (digits.length > 12) {\n                frappe.show_alert({\n                    message: `Phone Number\"${raw}\" should not exceed 10 digits.`,\n                    indicator: 'red'\n                });\n            }\n        }\n    },\n    custom_date_of_birth: function (frm) {\n        if (frm.doc.custom_date_of_birth) {\n            let dob = new Date(frm.doc.custom_date_of_birth);\n            let today = new Date();\n            let min_date = new Date();\n            min_date.setFullYear(today.getFullYear() - 18);\n\n            if (dob > today) {\n                // frappe.show_alert(__('Date of birth cannot be in the future'));\n                frappe.show_alert({\n                    message:  'Date of birth cannot be in the future',\n                    indicator: 'red'\n                });\n                frm.set_value('custom_date_of_birth', '');\n            } else if (dob > min_date) {\n                 frappe.show_alert({\n                    message: 'Date of birth must be at least 18 years ago',\n                    indicator: 'red'\n                });\n                frm.set_value('custom_date_of_birth', '');\n            }\n        }\n    },\n  \n    refresh(frm) {\n        \n        let today = new Date();\n        let min_date = new Date();\n        min_date.setFullYear(today.getFullYear() - 18);\n        \n        frm.set_df_property('custom_date_of_birth', 'max_date', frappe.datetime.str_to_obj(today));\n       \n        $(frm.fields_dict['custom_date_of_birth'].$input).datepicker({\n            maxDate: today,\n            yearRange: '-100:+0'\n        });\n        \n        \n    if (frm.doc.status !== 'Inactive'&& frm.doc.workflow_state !== 'Rejected'){\n        frm.add_custom_button('Block', function () {\n            frappe.prompt(\n                {\n                    label: \"Block Reason\",\n                    fieldname: \"rejected_reason\",\n                    fieldtype: \"Small Text\",\n                    reqd: 1\n                },\n                function (values) {\n                    frappe.confirm('Are you sure you want to block this user?', () => {\n                        frm.set_value(\"status\", \"Inactive\");\n                        let child = frm.add_child(\"custom_block_log\");\n                        child.block_date = frappe.datetime.get_today();\n                        child.block_reason = values.rejected_reason;\n    \n                        // Refresh the table UI\n                        frm.refresh_field(\"custom_block_log\");\n\n                          frm.save().then(() => {\n                            frm.reload();\n                     });\n                 });\n                },\n                \"Please provide a reason for blocking this user\"\n            );\n        });\n    }\n\n    if (frm.doc.status === 'Inactive'&& frm.doc.workflow_state !== 'Rejected') {\n            frm.add_custom_button('Unblock', function () {\n                frappe.confirm('Do you want to activate this user again?', () => {\n                    frm.set_value('status', 'Active');\n                      frm.save().then(() => {\n                             frm.reload();\n                     });\n                });\n            });\n        }\n        \n    },\n   \n})",
  "view": "Form"
 }
]