[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-03-24 17:18:22.515783",
  "module": "Mykartavya",
  "name": "Sva User",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "SVA User",
  "script": "if doc.custom_volunteer_type in [\"Employee\", \"NGO Member\"]:\n    frappe.db.set_value(\"SVA User\", doc.name, \"workflow_state\", \"Approved\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-03-24 18:22:30.017905",
  "module": "Mykartavya",
  "name": "SVA user data",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "SVA User",
  "script": "# Fetch all \"SVA User\" records where the company and role match\nincharge_users = frappe.get_all(\n    \"SVA User\",\n    filters={\"custom_company\": doc.custom_company, \"role_profile\": \"Company Admin\"},  \n    pluck=\"name\"  # Get only the names\n)\n\n# Check if the current doc is NOT \"Company Admin\"\nif doc.role_profile != \"Company Admin\":  \n    for user in incharge_users:  # Loop through each user\n        sva_user = frappe.get_doc(\"SVA User\", user)  # Get full document\n        \n        # Append to child table\n        sva_user.append(\"table_pdop\", {  \n            \"module\": \"SVA User\",\n            \"value\": doc.name,  \n        })\n        \n        sva_user.save(ignore_permissions=True)  # Save changes\n\nprint(\"Updated SVA Users =========\", incharge_users)",
  "script_type": "DocType Event"
 }
]