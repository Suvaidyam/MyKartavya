{
  "version": 3,
  "sources": ["../../../../../apps/frappe/node_modules/@vue/shared/dist/shared.cjs.js", "../../../../../apps/frappe/node_modules/@vue/shared/index.js", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/location.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/module-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/to-node-description.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/standard-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/strict-mode-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/estree.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/context.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/types.ts", "../../../../../apps/frappe/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts", "../../../../../apps/frappe/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/identifier.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/flow/scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/base.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/comments.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/whitespace.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/state.ts", "../../../../../apps/frappe/node_modules/@babel/babel-helper-string-parser/src/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/class-scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/expression-scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/production-parameter.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/util.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/node.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/flow/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/jsx/xhtml.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/jsx/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/typescript/scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/lval.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/typescript/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/placeholders.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/v8intrinsic.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugin-utils.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/options.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/expression.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/statement.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/index.ts", "../../../../../apps/frappe/node_modules/source-map-js/lib/base64.js", "../../../../../apps/frappe/node_modules/source-map-js/lib/base64-vlq.js", "../../../../../apps/frappe/node_modules/source-map-js/lib/util.js", "../../../../../apps/frappe/node_modules/source-map-js/lib/array-set.js", "../../../../../apps/frappe/node_modules/source-map-js/lib/mapping-list.js", "../../../../../apps/frappe/node_modules/source-map-js/lib/source-map-generator.js", "../../../../../apps/frappe/node_modules/source-map-js/lib/binary-search.js", "../../../../../apps/frappe/node_modules/source-map-js/lib/quick-sort.js", "../../../../../apps/frappe/node_modules/source-map-js/lib/source-map-consumer.js", "../../../../../apps/frappe/node_modules/source-map-js/lib/source-node.js", "../../../../../apps/frappe/node_modules/source-map-js/source-map.js", "../../../../../apps/frappe/node_modules/estree-walker/dist/umd/estree-walker.js", "../../../../../apps/frappe/node_modules/@vue/compiler-core/dist/compiler-core.cjs.js", "../../../../../apps/frappe/node_modules/@vue/compiler-core/index.js", "../../../../../apps/frappe/node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.js", "../../../../../apps/frappe/node_modules/@vue/compiler-dom/index.js", "../../../../../apps/frappe/node_modules/@vue/reactivity/dist/reactivity.cjs.js", "../../../../../apps/frappe/node_modules/@vue/reactivity/index.js", "../../../../../apps/frappe/node_modules/@vue/runtime-core/dist/runtime-core.cjs.js", "../../../../../apps/frappe/node_modules/@vue/runtime-core/index.js", "../../../../../apps/frappe/node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.js", "../../../../../apps/frappe/node_modules/@vue/runtime-dom/index.js", "../../../../../apps/frappe/node_modules/vue/dist/vue.cjs.js", "../../../../../apps/frappe/node_modules/vue/index.js", "../../../../../apps/mykartavya/mykartavya/public/js/Amount_saved/amount_saved.bundle.js", "../../../../../apps/frappe/node_modules/vue-demi/lib/index.mjs", "../../../../../apps/frappe/node_modules/vue/dist/vue.runtime.esm-bundler.js", "../../../../../apps/frappe/node_modules/@vue/devtools-api/lib/esm/env.js", "../../../../../apps/frappe/node_modules/@vue/devtools-api/lib/esm/const.js", "../../../../../apps/frappe/node_modules/@vue/devtools-api/lib/esm/time.js", "../../../../../apps/frappe/node_modules/@vue/devtools-api/lib/esm/proxy.js", "../../../../../apps/frappe/node_modules/@vue/devtools-api/lib/esm/index.js", "../../../../../apps/frappe/node_modules/pinia/dist/pinia.mjs", "../mykartavya/mykartavya/public/js/Amount_saved/amount_saved.vue", "../../../../../apps/mykartavya/node_modules/@kurkle/color/dist/color.esm.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.core.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.math.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.collection.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.extras.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.easing.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.color.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.animations.defaults.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.layouts.defaults.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.intl.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.ticks.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.scale.defaults.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.defaults.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.canvas.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.options.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.config.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.curve.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.dom.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.interpolation.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.rtl.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.segment.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/helpers/helpers.dataset.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.animator.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.animation.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.animations.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.datasetController.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/controllers/controller.bar.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/controllers/controller.bubble.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/controllers/controller.doughnut.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/controllers/controller.line.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/controllers/controller.polarArea.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/controllers/controller.pie.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/controllers/controller.radar.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/controllers/controller.scatter.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.adapters.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.interaction.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.layouts.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/platform/platform.base.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/platform/platform.basic.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/platform/platform.dom.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/platform/index.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.element.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.scale.autoskip.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.scale.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.typedRegistry.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.registry.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.plugins.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.config.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/core/core.controller.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/elements/element.arc.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/elements/element.line.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/elements/element.point.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/elements/element.bar.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.colors.ts", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.decimation.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.filler/filler.options.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.filler/filler.target.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.filler/index.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.legend.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.title.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.subtitle.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/plugins/plugin.tooltip.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/scales/scale.category.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/scales/scale.linearbase.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/scales/scale.linear.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/scales/scale.logarithmic.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/scales/scale.radialLinear.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/scales/scale.time.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/scales/scale.timeseries.js", "../../../../../apps/mykartavya/node_modules/chart.js/src/index.ts", "../../../../../apps/mykartavya/node_modules/chart.js/auto/auto.js", "sfc-template:/workspace/development/frappe_docker/frappe-bench/apps/mykartavya/mykartavya/public/js/Amount_saved/amount_saved.vue?type=template", "../../../../../apps/mykartavya/mykartavya/public/js/Amount_saved/amount_saved.vue"],
  "sourcesContent": ["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction makeMap(str, expectsLowerCase) {\n  const map = /* @__PURE__ */ Object.create(null);\n  const list = str.split(\",\");\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];\n}\n\nconst EMPTY_OBJ = Object.freeze({}) ;\nconst EMPTY_ARR = Object.freeze([]) ;\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst onRE = /^on[^a-z]/;\nconst isOn = (key) => onRE.test(key);\nconst isModelListener = (key) => key.startsWith(\"onUpdate:\");\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isDate = (val) => toTypeString(val) === \"[object Date]\";\nconst isRegExp = (val) => toTypeString(val) === \"[object RegExp]\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isPromise = (val) => {\n  return (isObject(val) || isFunction(val)) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize = cacheStringFunction((str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\nconst toHandlerKey = cacheStringFunction((str) => {\n  const s = str ? `on${capitalize(str)}` : ``;\n  return s;\n});\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](arg);\n  }\n};\nconst def = (obj, key, value) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    value\n  });\n};\nconst looseToNumber = (val) => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\nconst toNumber = (val) => {\n  const n = isString(val) ? Number(val) : NaN;\n  return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\n}\n\nconst PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `NEED_HYDRATION`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\n\nconst slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\n\nconst GLOBALS_ALLOWED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console\";\nconst isGloballyAllowed = /* @__PURE__ */ makeMap(GLOBALS_ALLOWED);\nconst isGloballyWhitelisted = isGloballyAllowed;\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  let lines = source.split(/(\\r?\\n)/);\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length)\n          continue;\n        const line = j + 1;\n        res.push(\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\n        );\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n        if (j === i) {\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          );\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + \"^\".repeat(length));\n          }\n          count += lineLength + newLineSeqLength;\n        }\n      }\n      break;\n    }\n  }\n  return res.join(\"\\n\");\n}\n\nfunction normalizeStyle(value) {\n  if (isArray(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString(value) || isObject(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction stringifyStyle(styles) {\n  let ret = \"\";\n  if (!styles || isString(styles)) {\n    return ret;\n  }\n  for (const key in styles) {\n    const value = styles[key];\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n    if (isString(value) || typeof value === \"number\") {\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString(value)) {\n    res = value;\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\nfunction normalizeProps(props) {\n  if (!props)\n    return null;\n  let { class: klass, style } = props;\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass);\n  }\n  if (style) {\n    props.style = normalizeStyle(style);\n  }\n  return props;\n}\n\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\n);\nfunction includeBooleanAttr(value) {\n  return !!value || value === \"\";\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name);\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n  return attrValidationCache[name] = !isUnsafe;\n}\nconst propsToAttrMap = {\n  acceptCharset: \"accept-charset\",\n  className: \"class\",\n  htmlFor: \"for\",\n  httpEquiv: \"http-equiv\"\n};\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\n);\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n);\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n  const str = \"\" + string;\n  const match = escapeRE.exec(str);\n  if (!match) {\n    return str;\n  }\n  let html = \"\";\n  let escaped;\n  let index;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escaped = \"&quot;\";\n        break;\n      case 38:\n        escaped = \"&amp;\";\n        break;\n      case 39:\n        escaped = \"&#39;\";\n        break;\n      case 60:\n        escaped = \"&lt;\";\n        break;\n      case 62:\n        escaped = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escaped;\n  }\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n  return src.replace(commentStripRE, \"\");\n}\n\nfunction looseCompareArrays(a, b) {\n  if (a.length !== b.length)\n    return false;\n  let equal = true;\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n  return equal;\n}\nfunction looseEqual(a, b) {\n  if (a === b)\n    return true;\n  let aValidType = isDate(a);\n  let bValidType = isDate(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n  aValidType = isSymbol(a);\n  bValidType = isSymbol(b);\n  if (aValidType || bValidType) {\n    return a === b;\n  }\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n  }\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n  if (aValidType || bValidType) {\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n    const aKeysCount = Object.keys(a).length;\n    const bKeysCount = Object.keys(b).length;\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key);\n      const bHasKey = b.hasOwnProperty(key);\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n  return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n  return arr.findIndex((item) => looseEqual(item, val));\n}\n\nconst toDisplayString = (val) => {\n  return isString(val) ? val : val == null ? \"\" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (val && val.__v_isRef) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val2]) => {\n        entries[`${key} =>`] = val2;\n        return entries;\n      }, {})\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()]\n    };\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\n\nexports.EMPTY_ARR = EMPTY_ARR;\nexports.EMPTY_OBJ = EMPTY_OBJ;\nexports.NO = NO;\nexports.NOOP = NOOP;\nexports.PatchFlagNames = PatchFlagNames;\nexports.camelize = camelize;\nexports.capitalize = capitalize;\nexports.def = def;\nexports.escapeHtml = escapeHtml;\nexports.escapeHtmlComment = escapeHtmlComment;\nexports.extend = extend;\nexports.genPropsAccessExp = genPropsAccessExp;\nexports.generateCodeFrame = generateCodeFrame;\nexports.getGlobalThis = getGlobalThis;\nexports.hasChanged = hasChanged;\nexports.hasOwn = hasOwn;\nexports.hyphenate = hyphenate;\nexports.includeBooleanAttr = includeBooleanAttr;\nexports.invokeArrayFns = invokeArrayFns;\nexports.isArray = isArray;\nexports.isBooleanAttr = isBooleanAttr;\nexports.isBuiltInDirective = isBuiltInDirective;\nexports.isDate = isDate;\nexports.isFunction = isFunction;\nexports.isGloballyAllowed = isGloballyAllowed;\nexports.isGloballyWhitelisted = isGloballyWhitelisted;\nexports.isHTMLTag = isHTMLTag;\nexports.isIntegerKey = isIntegerKey;\nexports.isKnownHtmlAttr = isKnownHtmlAttr;\nexports.isKnownSvgAttr = isKnownSvgAttr;\nexports.isMap = isMap;\nexports.isModelListener = isModelListener;\nexports.isObject = isObject;\nexports.isOn = isOn;\nexports.isPlainObject = isPlainObject;\nexports.isPromise = isPromise;\nexports.isRegExp = isRegExp;\nexports.isReservedProp = isReservedProp;\nexports.isSSRSafeAttrName = isSSRSafeAttrName;\nexports.isSVGTag = isSVGTag;\nexports.isSet = isSet;\nexports.isSpecialBooleanAttr = isSpecialBooleanAttr;\nexports.isString = isString;\nexports.isSymbol = isSymbol;\nexports.isVoidTag = isVoidTag;\nexports.looseEqual = looseEqual;\nexports.looseIndexOf = looseIndexOf;\nexports.looseToNumber = looseToNumber;\nexports.makeMap = makeMap;\nexports.normalizeClass = normalizeClass;\nexports.normalizeProps = normalizeProps;\nexports.normalizeStyle = normalizeStyle;\nexports.objectToString = objectToString;\nexports.parseStringStyle = parseStringStyle;\nexports.propsToAttrMap = propsToAttrMap;\nexports.remove = remove;\nexports.slotFlagsText = slotFlagsText;\nexports.stringifyStyle = stringifyStyle;\nexports.toDisplayString = toDisplayString;\nexports.toHandlerKey = toHandlerKey;\nexports.toNumber = toNumber;\nexports.toRawType = toRawType;\nexports.toTypeString = toTypeString;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/shared.cjs.prod.js')\n} else {\n  module.exports = require('./dist/shared.cjs.js')\n}\n", "export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n", "import type { ParseErrorTemplates } from \"../parse-error.ts\";\n\nconst code = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code,\n  },\n} satisfies ParseErrorTemplates;\n", "const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\n// @ts-expect-error prefix is specified only when type is UpdateExpression\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix) as \"true\" | \"false\"]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n", "import type { ParseErrorTemplates } from \"../parse-error.ts\";\nimport toNodeDescription from \"./to-node-description.ts\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ParenthesizedExpression\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitUsingNotInAsyncContext:\n    \"'await using' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"const\" | \"destructuring\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses:\n    \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport:\n    \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeferImportRequiresNamespace:\n    'Only `import defer * as x from \"./module\"` is valid.',\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  DynamicImportPhaseRequiresImportExpressions: ({ phase }: { phase: string }) =>\n    `'import.${phase}(...)' can only be parsed when using the 'createImportExpressions' option.`,\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportAttributesUseAssert:\n    \"The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedAssertSyntax: true` option in the import attributes plugin to suppress this error.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({ maxArgumentCount }: { maxArgumentCount: 1 | 2 }) =>\n    `\\`import()\\` requires exactly ${\n      maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n    }.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding:\n    'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsOptionalChaining: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid optional chaining in the left-hand side of ${toNodeDescription(\n      ancestor,\n    )}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is disallowed as a lexically bound name.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  SourcePhaseImportRequiresDefault:\n    'Only `import source x from \"./module\"` is valid.',\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration:\n    \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationHasBindingPattern:\n    \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n} satisfies ParseErrorTemplates;\n", "import type { ParseErrorTemplates } from \"../parse-error\";\n\nexport default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n} satisfies ParseErrorTemplates;\n", "import type { ParseErrorTemplates } from \"../parse-error.ts\";\nimport toNodeDescription from \"./to-node-description.ts\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> = T extends Set<infer M>\n  ? M\n  : unknown;\n\ntype UnparenthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparenthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with \u201CPipeline\u201D or \u201CPrimaryTopic\u201D\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n} satisfies ParseErrorTemplates;\n", "import { Position } from \"./util/location.ts\";\nimport type { Undone } from \"./parser/node.ts\";\nimport type { Node } from \"./types.ts\";\n\ntype SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\ntype ParseErrorCode =\n  | \"BABEL_PARSER_SYNTAX_ERROR\"\n  | \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (a: {\n  loc: Position;\n  details: ErrorDetails;\n}) => ParseError<ErrorDetails>;\n\ntype ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\ntype ParseErrorCredentials<ErrorDetails> = {\n  code: string;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nfunction defineHidden(obj: object, key: string, value: unknown) {\n  Object.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    value,\n  });\n}\n\nfunction toParseErrorConstructor<ErrorDetails extends object>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = {\n    loc: Position;\n    details: ErrorDetails;\n  };\n\n  return function constructor({ loc, details }: ConstructorArgument) {\n    const error = new SyntaxError();\n    Object.assign(error, properties, { loc, pos: loc.index });\n    if (\"missingPlugin\" in details) {\n      Object.assign(error, { missingPlugin: details.missingPlugin });\n    }\n\n    type Overrides = {\n      loc?: Position;\n      details?: ErrorDetails;\n    };\n    defineHidden(error, \"clone\", function clone(overrides: Overrides = {}) {\n      const { line, column, index } = overrides.loc ?? loc;\n      return constructor({\n        loc: new Position(line, column, index),\n        details: { ...details, ...overrides.details },\n      });\n    });\n\n    defineHidden(error, \"details\", details);\n\n    Object.defineProperty(error, \"message\", {\n      configurable: true,\n      get(this: ParseError<ErrorDetails>): string {\n        const message = `${toMessage(details)} (${loc.line}:${loc.column})`;\n        this.message = message;\n        return message;\n      },\n      set(value: string) {\n        Object.defineProperty(this, \"message\", { value, writable: true });\n      },\n    });\n\n    return error as ParseError<ErrorDetails>;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any>; code?: ParseErrorCode };\n\nexport type ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n        ? Parameters<T[K]>[0]\n        : {}\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n        ? Parameters<T[K]>[0]\n        : {}\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: \"AN_ERROR_CODE\",\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n          ? { message: template }\n          : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: \"BABEL_PARSER_SYNTAX_ERROR\",\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {\n  at: Position | Undone<Node>;\n} & ErrorDetails;\n\nimport ModuleErrors from \"./parse-error/module-errors.ts\";\nimport StandardErrors from \"./parse-error/standard-errors.ts\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors.ts\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors.ts\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors.ts\";\n", "import type { TokenType } from \"../tokenizer/types.ts\";\nimport type Parser from \"../parser/index.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\nimport type * as N from \"../types.ts\";\nimport type { Node as NodeType, NodeBase, File } from \"../types.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { BindingTypes } from \"../util/scopeflags.ts\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: typeof Parser) =>\n  class ESTreeParserMixin extends superClass implements Parser {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: BigInt | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.Node>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    // Cast a Directive to an ExpressionStatement. Mutates the input Directive.\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const expression = directive.value as any as N.EstreeLiteral;\n      delete directive.value;\n\n      expression.type = \"Literal\";\n      // @ts-expect-error N.EstreeLiteral.raw is not defined.\n      expression.raw = expression.extra.raw;\n      expression.value = expression.extra.expressionValue;\n\n      const stmt = directive as any as N.ExpressionStatement;\n      stmt.type = \"ExpressionStatement\";\n      stmt.expression = expression;\n      // @ts-expect-error N.ExpressionStatement.directive is not defined\n      stmt.directive = expression.extra.rawValue;\n\n      delete expression.extra;\n\n      return stmt;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as any as N.EstreeProperty | N.EstreeMethodDefinition)\n        .value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: boolean | undefined | null,\n      topLevel: boolean,\n      end: TokenType,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): void {\n      super.parseBlockBody(\n        node,\n        allowDirectives,\n        topLevel,\n        end,\n        afterBlockParse,\n      );\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error mutate AST types\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error mutate AST types\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node.arguments[0];\n        if (\n          this.hasPlugin(\"importAttributes\") ||\n          this.hasPlugin(\"importAssertions\")\n        ) {\n          (node as N.Node as N.EstreeImportExpression).options =\n            node.arguments[1] ?? null;\n          // compatibility with previous ESTree AST\n          (node as N.Node as N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(\n      unfinished: Undone<N.AnyExport>,\n      decorators: N.Decorator[] | null,\n    ) {\n      const exportStartLoc = this.state.lastTokStartLoc;\n      const node = super.parseExport(unfinished, decorators);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            // @ts-expect-error mutating AST types\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n        // fallthrough\n        case \"ExportDefaultDeclaration\":\n          {\n            const { declaration } = node;\n            if (\n              declaration?.type === \"ClassDeclaration\" &&\n              declaration.decorators?.length > 0 &&\n              // decorator comes before export\n              declaration.start === node.start\n            ) {\n              this.resetStartLocation(\n                node,\n                // For compatibility with ESLint's keyword-spacing rule, which assumes that an\n                // export declaration must start with export.\n                // https://github.com/babel/babel/issues/15085\n                // Here we reset export declaration's start to be the start of the export token\n                exportStartLoc,\n              );\n            }\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(base, startLoc, noCalls, state);\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    isOptionalMemberExpression(node: N.Node) {\n      if (node.type === \"ChainExpression\") {\n        return node.expression.type === \"MemberExpression\";\n      }\n      return super.isOptionalMemberExpression(node);\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    // @ts-expect-error override interfaces\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, startLoc: Position) {\n      super.resetStartLocation(node, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n", "// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n", "import { types as tc, type TokContext } from \"./context.ts\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the \u201Cargument\u201D subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = typeof tt;\n\nexport const tt = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _defer: createKeywordLike(\"defer\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _source: createKeywordLike(\"source\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _using: createKeywordLike(\"using\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  _satisfies: createKeywordLike(\"satisfies\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n} as const;\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n", "import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "import * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n", "import { ScopeFlag, BindingFlag, type BindingTypes } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport type * as N from \"../types.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlag;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlag) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inTopLevel() {\n    return (this.currentScope().flags & ScopeFlag.PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & ScopeFlag.FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & ScopeFlag.SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & ScopeFlag.DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & ScopeFlag.CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & ScopeFlag.CLASS) > 0 && (flags & ScopeFlag.FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & ScopeFlag.STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (ScopeFlag.VAR | ScopeFlag.CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & ScopeFlag.FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlag): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlag) {\n    /*:: +createScope: (flags:ScopeFlag) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit(): ScopeFlag {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (ScopeFlag.FUNCTION | ScopeFlag.STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & ScopeFlag.PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (\n      bindingType & BindingFlag.SCOPE_LEXICAL ||\n      bindingType & BindingFlag.SCOPE_FUNCTION\n    ) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BindingFlag.SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BindingFlag.SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BindingFlag.SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & ScopeFlag.VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & ScopeFlag.PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & ScopeFlag.PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BindingFlag.KIND_VALUE)) return false;\n\n    if (bindingType & BindingFlag.SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BindingFlag.SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        // Annex B.3.4\n        // https://tc39.es/ecma262/#sec-variablestatements-in-catch-blocks\n        !(\n          scope.flags & ScopeFlag.SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlag {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & ScopeFlag.VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlag {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (\n        flags & (ScopeFlag.VAR | ScopeFlag.CLASS) &&\n        !(flags & ScopeFlag.ARROW)\n      ) {\n        return flags;\n      }\n    }\n  }\n}\n", "import type { Position } from \"../../util/location.ts\";\nimport ScopeHandler, { Scope } from \"../../util/scope.ts\";\nimport {\n  BindingFlag,\n  type ScopeFlag,\n  type BindingTypes,\n} from \"../../util/scopeflags.ts\";\nimport type * as N from \"../../types.ts\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlag): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BindingFlag.FLAG_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (bindingType & BindingFlag.FLAG_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "import type { Options } from \"../options.ts\";\nimport type State from \"../tokenizer/state.ts\";\nimport type { PluginsMap } from \"./index.ts\";\nimport type ScopeHandler from \"../util/scope.ts\";\nimport type ExpressionScopeHandler from \"../util/expression-scope.ts\";\nimport type ClassScopeHandler from \"../util/class-scope.ts\";\nimport type ProductionParameterHandler from \"../util/production-parameter.ts\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"../typings.ts\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin\u2019s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption<\n    PluginName extends ParserPluginWithOptions[0],\n    OptionName extends keyof PluginOptions<PluginName>,\n  >(plugin: PluginName, name: OptionName) {\n    return (this.plugins.get(plugin) as null | PluginOptions<PluginName>)?.[\n      name\n    ];\n  }\n}\n", "/*:: declare var invariant; */\n\nimport BaseParser from \"./base.ts\";\nimport type { Comment, Node, Identifier } from \"../types.ts\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node.ts\";\n\n/**\n * A whitespace token containing comments\n */\nexport type CommentWhitespace = {\n  /**\n   * the start of the whitespace token.\n   */\n  start: number;\n  /**\n   * the end of the whitespace token.\n   */\n  end: number;\n  /**\n   * the containing comments\n   */\n  comments: Array<Comment>;\n  /**\n   * the immediately preceding AST node of the whitespace token\n   */\n  leadingNode: Node | null;\n  /**\n   * the immediately following AST node of the whitespace token\n   */\n  trailingNode: Node | null;\n  /**\n   * the innermost AST node containing the whitespace with minimal size (|end - start|)\n   */\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nexport function setInnerComments(\n  node: Undone<Node>,\n  comments?: Array<Comment>,\n) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * async /* 1 *\u200B/ function f() {}\n   * ```\n   * the comment whitespace `/* 1 *\u200B/` has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark `/* 1 *\u200B/` as\n   * inner comments. So `/* 1 *\u200B/` should be detached from the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node leading comments, assuming that `node` is a\n   * single-token node. Used in import phase modifiers parsing. We parse\n   * `module` in `import module foo from ...` as an identifier but may\n   * reinterpret it into a phase modifier later. In this case the identifier is\n   * not part of the AST and we should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * import /* 1 *\u200B/ module a from \"a\";\n   * ```\n   * the comment whitespace `/* 1 *\u200B/` has trailing node Identifier(module). When\n   * we see that `module` is not a default import binding, we mark `/* 1 *\u200B/` as\n   * inner comments of the ImportDeclaration. So `/* 1 *\u200B/` should be detached from\n   * the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousIdentifierLeadingComments(node: Identifier) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n\n    if (commentStack[length - 1].trailingNode === node) {\n      commentStack[length - 1].trailingNode = null;\n    } else if (length >= 2 && commentStack[length - 2].trailingNode === node) {\n      commentStack[length - 2].trailingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n", "import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/g;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n", "import type { Options } from \"../options.ts\";\nimport type * as N from \"../types.ts\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location.ts\";\n\nimport { types as ct, type TokContext } from \"./context.ts\";\nimport { tt, type TokenType } from \"./types.ts\";\nimport type { Errors } from \"../parse-error.ts\";\nimport type { ParseError } from \"../parse-error.ts\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n          ? true\n          : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: \"loop\" | \"switch\" | undefined | null;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // Used to track invalid escape sequences in template literals,\n  // that must be reported if the template is not tagged.\n  firstInvalidTemplateEscapePos: null | Position = null;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this) as (keyof State)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // @ts-expect-error val must conform to S[key]\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n  // These boolean properties are not initialized in createLookaheadState()\n  // instead they will only be set by the tokenizer\n  containsEsc?: boolean;\n};\n", "import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      );\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = { pos, lineStart, curLine };\n      } else {\n        out += res.ch;\n      }\n      ({ pos, lineStart, curLine } = res);\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return process.env.BABEL_8_BREAKING\n    ? { pos, str: out, firstInvalidLoc, lineStart, curLine }\n    : {\n        pos,\n        str: out,\n        firstInvalidLoc,\n        lineStart,\n        curLine,\n        containsInvalid: !!firstInvalidLoc,\n      };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/)!;\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n    /* bailOnError */ !throwOnInvalid,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n  bailOnError: boolean,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n        ? isAllowedNumericSeparatorSibling.dec\n        : radix === 8\n          ? isAllowedNumericSeparatorSibling.oct\n          : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return { n: null, pos };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        if (bailOnError) return { n: null, pos };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && bailOnError) {\n        return { n: null, pos };\n      } else if (\n        val <= 9 &&\n        errors.invalidDigit(pos, lineStart, curLine, radix)\n      ) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n", "/*:: declare var invariant; */\n\nimport type { Options } from \"../options.ts\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location.ts\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments.ts\";\nimport type * as N from \"../types.ts\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier.ts\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types.ts\";\nimport type { TokContext } from \"./context.ts\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error.ts\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n  skipWhiteSpaceInLine,\n} from \"../util/whitespace.ts\";\nimport State from \"./state.ts\";\nimport type { LookaheadState, DeferredStrictError } from \"./state.ts\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings.ts\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default abstract class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // @ts-expect-error For performance we use a simplified tokenizer state structure\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  /**\n   * Similar to nextToken, but it will stop at line break when it is seen before the next token\n   *\n   * @returns {number} position of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  nextTokenInLineStart(): number {\n    return this.nextTokenInLineStartSince(this.state.pos);\n  }\n\n  nextTokenInLineStartSince(pos: number): number {\n    skipWhiteSpaceInLine.lastIndex = pos;\n    return skipWhiteSpaceInLine.test(this.input)\n      ? skipWhiteSpaceInLine.lastIndex\n      : pos;\n  }\n\n  /**\n   * Similar to lookaheadCharCode, but it will return the char code of line break if it is\n   * seen before the next token\n   *\n   * @returns {number} char code of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  lookaheadInLineCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenInLineStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related properties.\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  // Skips a block comment, whose end is marked by commentEnd.\n  // *-/ is used by the Flow plugin, when parsing block comments nested\n  // inside Flow comments.\n  skipBlockComment(commentEnd: \"*/\" | \"*-/\"): N.CommentBlock | undefined {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | undefined {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment(\"*/\");\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (\n            ch === charCodes.dash &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (\n            ch === charCodes.lessThan &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // @ts-expect-error the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n      /* bailOnError */ false,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, firstInvalidLoc, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(\n        firstInvalidLoc.curLine,\n        firstInvalidLoc.pos - firstInvalidLoc.lineStart,\n        firstInvalidLoc.pos,\n      );\n    }\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        firstInvalidLoc ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        firstInvalidLoc ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode?: number): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode?: number): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    // @ts-expect-error: refine details typing\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | never {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        // @ts-expect-error: refine details typing\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<{}>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, {\n        at: buildPosition(pos, lineStart, curLine),\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedString, {\n        // Report the error at the string quote\n        at: buildPosition(pos - 1, lineStart, curLine),\n      });\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedTemplate, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n  };\n}\n", "import { ClassElementType } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementType> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementType,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & ClassElementType.KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & ClassElementType.FLAG_STATIC;\n        const newStatic = elementType & ClassElementType.FLAG_STATIC;\n\n        const oldKind = accessor & ClassElementType.KIND_ACCESSOR;\n        const newKind = elementType & ClassElementType.KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n", "import { Errors, type ParseErrorConstructor } from \"../parse-error.ts\";\nimport type { Position } from \"./location.ts\";\nimport type { Node } from \"../types.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n  e.g. we don't know if `async({ x })` is a call expression or an async arrow\n  function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst enum ExpressionScopeType {\n  kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3,\n}\n\nclass ExpressionScope {\n  declare type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = ExpressionScopeType.kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration ||\n      this.type === ExpressionScopeType.kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === ExpressionScopeType.kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{}>, Position]> =\n    new Map();\n  constructor(\n    type:\n      | ExpressionScopeType.kMaybeArrowParameterDeclaration\n      | ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration,\n  ) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{}>,\n    {\n      at,\n    }: {\n      at: Position;\n    },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == ExpressionScopeType.kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   */\n  recordArrowParameterBindingError(\n    error: ParseErrorConstructor<{}>,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (\n        scope.type === ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration\n      ) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(ExpressionScopeType.kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(\n    ExpressionScopeType.kMaybeArrowParameterDeclaration,\n  );\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(\n    ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration,\n  );\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n", "// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport const enum ParamKind {\n  // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  // track [In] production parameter\n  PARAM_IN = 0b1000,\n}\n\n// todo(flow->ts) - check if more granular type can be used,\n//  type below is not good because things like PARAM_AWAIT|PARAM_YIELD are not included\n// export type ParamKind =\n//   | typeof PARAM\n//   | typeof PARAM_AWAIT\n//   | typeof PARAM_IN\n//   | typeof PARAM_RETURN\n//   | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (\n    (isAsync ? ParamKind.PARAM_AWAIT : 0) |\n    (isGenerator ? ParamKind.PARAM_YIELD : 0)\n  );\n}\n", "import type { Position } from \"../util/location.ts\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types.ts\";\nimport Tokenizer from \"../tokenizer/index.ts\";\nimport type State from \"../tokenizer/state.ts\";\nimport type {\n  EstreePropertyDefinition,\n  Node,\n  ObjectProperty,\n} from \"../types.ts\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace.ts\";\nimport { isIdentifierChar } from \"../util/identifier.ts\";\nimport ClassScopeHandler from \"../util/class-scope.ts\";\nimport ExpressionScopeHandler from \"../util/expression-scope.ts\";\nimport { ScopeFlag } from \"../util/scopeflags.ts\";\nimport ProductionParameterHandler, {\n  ParamKind,\n} from \"../util/production-parameter.ts\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error.ts\";\nimport type Parser from \"./index.ts\";\n\nimport type ScopeHandler from \"../util/scope.ts\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default abstract class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  abstract getScopeHandler(): { new (...args: any): ScopeHandler };\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /**\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /**\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /**\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = ParamKind.PARAM;\n    if (this.inModule) {\n      paramFlags |= ParamKind.PARAM_AWAIT;\n    }\n    this.scope.enter(ScopeFlag.PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional parameter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n", "import type Parser from \"./index.ts\";\nimport UtilParser from \"./util.ts\";\nimport { SourceLocation, type Position } from \"../util/location.ts\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types.ts\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error __clone is not defined in Node prototype\n  NodePrototype.__clone = function (): Node {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this) as (keyof Node)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // @ts-expect-error cloning this to newNode\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport abstract class NodeUtils extends UtilParser {\n  startNode<T extends NodeType>(): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T extends NodeType>(loc: Position): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, loc.index, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType>(type: Undone<NodeType>): Undone<T> {\n    return this.startNodeAt(type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    // @ts-expect-error migrate to Babel types AST typings\n    node.type = type;\n    // @ts-expect-error migrate to Babel types AST typings\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, startLoc: Position): void {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type Parser from \"../../parser/index.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types.ts\";\nimport type * as N from \"../../types.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier.ts\";\nimport FlowScopeHandler from \"./scope.ts\";\nimport {\n  BindingFlag,\n  ScopeFlag,\n  type BindingTypes,\n} from \"../../util/scopeflags.ts\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport type { ParseStatementFlag } from \"../../parser/statement.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node.ts\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitialized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: typeof Parser) =>\n  class FlowParserMixin extends superClass implements Parser {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): {\n      new (...args: any): FlowScopeHandler;\n    } {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_VAR,\n        node.id.loc.start,\n      );\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(ScopeFlag.OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n            /* decorators */ null,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.Node;\n        }\n      }\n\n      this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(node: Undone<N.FlowDeclare>, isClass: boolean): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BindingFlag.TYPE_FUNCTION : BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (isClass) {\n        node.implements = [];\n        node.mixins = [];\n\n        if (this.eatContextual(tt._mixins)) {\n          do {\n            node.mixins.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n\n        if (this.eatContextual(tt._implements)) {\n          do {\n            node.implements.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startLoc ??= this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startLoc: Position,\n      node: Undone<N.FlowTypeAnnotation>,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n          this.unexpected();\n          return;\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode<N.FlowTypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n        return;\n      }\n\n      super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatementLike(flags: ParseStatementFlag): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatementLike(flags);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            // @ts-expect-error: refine typings\n            this.finishArrowValidation(node);\n          } else {\n            // @ts-expect-error: refine typings\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(ScopeFlag.FUNCTION | ScopeFlag.ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          this.finishOp(tt.questionDot, 2);\n        } else {\n          // allow double nullable types in Flow: ??string\n          this.finishOp(tt.question, 1);\n        }\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        this.readIterator();\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: ReadonlyArray<N.Expression | undefined | null>,\n      isParenthesizedExpr?: boolean,\n    ): ReadonlyArray<N.Expression | undefined | null> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"TypeCastExpression\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectMethod | N.ObjectProperty {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        // @ts-expect-error: refine typings\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(FlowErrors.ImportReflectionHasImportType, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    isPotentialImportPhase(isExport: boolean): boolean {\n      if (super.isPotentialImportPhase(isExport)) return true;\n      if (this.isContextual(tt._type)) {\n        if (!isExport) return true;\n        const ch = this.lookaheadCharCode();\n        return ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk;\n      }\n      return !isExport && this.isContextual(tt._typeof);\n    }\n\n    applyImportPhase(\n      node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n      isExport: boolean,\n      phase: string | null,\n      loc?: Position,\n    ): void {\n      super.applyImportPhase(node, isExport, phase, loc);\n      if (isExport) {\n        if (!phase && this.match(tt._default)) {\n          // TODO: Align with our TS AST and always add .exportKind\n          return;\n        }\n        (node as N.ExportNamedDeclaration).exportKind =\n          phase === \"type\" ? phase : \"value\";\n      } else {\n        if (phase === \"type\" && this.match(tt.star)) this.unexpected();\n        (node as N.ImportDeclaration).importKind =\n          phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n      }\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      isConstructor: boolean,\n    ): void {\n      // @ts-expect-error kind may not index node\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        // @ts-expect-error refine typings\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          // @ts-expect-error: refine tryParse typings\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n            // @ts-expect-error: refine tryParse typings\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Pattern[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n      strictModeChanged: boolean = true,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      super.checkParams(\n        node,\n        allowDuplicates,\n        isArrowFunction,\n        strictModeChanged,\n      );\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startLoc.index) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n      this.parseFunctionParams(node, false);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | undefined {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n            ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n            : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitialized(\n      node: N.Node,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitialized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Node;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\" as const, loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Array<N.Node>;\n        numberMembers: Array<N.Node>;\n        stringMembers: Array<N.Node>;\n        defaultedMembers: Array<N.Node>;\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.Node>, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: Undone<N.Node>): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n", "const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n} as const;\nexport default entities;\n", "import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml.ts\";\nimport type Parser from \"../../parser/index.ts\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types.ts\";\nimport type { TokContext } from \"../../tokenizer/context.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport type * as N from \"../../types.ts\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { isNewLine } from \"../../util/whitespace.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport type { Undone } from \"../../parser/node.ts\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXElement | null): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport interface IJSXParserMixin {\n  jsxParseOpeningElementAfterName(\n    node: N.JSXOpeningElement,\n  ): N.JSXOpeningElement;\n}\n\nexport default (superClass: typeof Parser) =>\n  class JSXParserMixin extends superClass implements Parser, IJSXParserMixin {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                this.finishToken(tt.jsxTagStart);\n              } else {\n                super.getTokenFromCode(ch);\n              }\n              return;\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            this.finishToken(tt.jsxText, out);\n            return;\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      this.finishToken(tt.jsxName, this.input.slice(start, this.state.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(this.state.lastTokEndLoc);\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_expr);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(startLoc: Position): N.JSXOpeningElement {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        // @ts-expect-error migrate to Babel types\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(startLoc: Position): N.JSXClosingElement {\n      const node = this.startNodeAt(startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(startLoc);\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        this.jsxReadToken();\n        return;\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          this.jsxReadWord();\n          return;\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          this.finishToken(tt.jsxTagEnd);\n          return;\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          this.jsxReadString(code);\n          return;\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        this.finishToken(tt.jsxTagStart);\n        return;\n      }\n\n      super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n", "import type { Position } from \"../../util/location.ts\";\nimport ScopeHandler, { Scope } from \"../../util/scope.ts\";\nimport {\n  BindingFlag,\n  ScopeFlag,\n  type BindingTypes,\n} from \"../../util/scopeflags.ts\";\nimport type * as N from \"../../types.ts\";\nimport { Errors } from \"../../parse-error.ts\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  importsStack: Set<string>[] = [];\n\n  createScope(flags: ScopeFlag): TypeScriptScope {\n    this.importsStack.push(new Set()); // Always keep the top-level scope for export checks.\n\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags: ScopeFlag): void {\n    if (flags == ScopeFlag.TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags == ScopeFlag.TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name: string, allowShadow?: boolean) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    if (bindingType & BindingFlag.FLAG_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n    if (bindingType & BindingFlag.FLAG_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BindingFlag.KIND_TYPE) {\n      if (!(bindingType & BindingFlag.KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BindingFlag.FLAG_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BindingFlag.FLAG_TS_CONST_ENUM) {\n      scope.constEnums.add(name);\n    }\n    if (bindingType & BindingFlag.FLAG_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BindingFlag.FLAG_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BindingFlag.FLAG_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BindingFlag.FLAG_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BindingFlag.KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BindingFlag.KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n\n    if (this.hasImport(name)) return;\n\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n\n    super.checkLocalExport(id);\n  }\n}\n", "import * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types.ts\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  ObjectOrClassMember,\n  ClassMember,\n  ObjectMember,\n  TsNamedTypeElementBase,\n  PrivateName,\n  ObjectExpression,\n  ObjectPattern,\n  ArrayExpression,\n  ArrayPattern,\n} from \"../types.ts\";\nimport type { Pos, Position } from \"../util/location.ts\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier.ts\";\nimport { NodeUtils, type Undone } from \"./node.ts\";\nimport { type BindingTypes, BindingFlag } from \"../util/scopeflags.ts\";\nimport type { ExpressionErrors } from \"./util.ts\";\nimport { Errors, type LValAncestor } from \"../parse-error.ts\";\nimport type Parser from \"./index.ts\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport const enum ParseBindingListFlags {\n  ALLOW_EMPTY = 1 << 0,\n  IS_FUNCTION_PARAMS = 1 << 1,\n  IS_CONSTRUCTOR_PARAMS = 1 << 2,\n}\n\nexport default abstract class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  abstract parseIdentifier(liberal?: boolean): Identifier;\n  abstract parseMaybeAssign(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseMaybeAssignAllowIn(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseObjectLike<T extends ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): T;\n  abstract parseObjPropValue(\n    prop: any,\n    startLoc: Position | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void;\n  abstract parsePropertyName(\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ): Expression | Identifier;\n  abstract parsePrivateName(): PrivateName;\n  // Forward-declaration: defined in statement.js\n  abstract parseDecorator(): Decorator;\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n   *\n   * - Parenthesized Destructuring patterns\n   * - RestElement is not the last element\n   * - Missing `=` in assignment pattern\n   *\n   * NOTE: There is a corresponding \"isAssignable\" method.\n   * When this one is updated, please check if also that one needs to be updated.\n   *\n   * @param node The expression atom\n   * @param isLHS Whether we are parsing a LeftHandSideExpression.\n   *              If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *              If isLHS is `false`, we are in an arrow function parameters list.\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParameterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (\n          parenthesized.type !== \"MemberExpression\" &&\n          !this.isOptionalMemberExpression(parenthesized)\n        ) {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return (node.properties as ObjectExpression[\"properties\"]).every(\n          (prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type !== \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          },\n        );\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return (node as ArrayExpression).elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ): ReadonlyArray<Expression | undefined | null> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          ParseBindingListFlags.ALLOW_EMPTY,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: (typeof charCodes)[keyof typeof charCodes],\n    flags: ParseBindingListFlags,\n  ): Array<Pattern | TSParameterProperty> {\n    const allowEmpty = flags & ParseBindingListFlags.ALLOW_EMPTY;\n\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(\n          this.parseAssignableListItemTypes(this.parseRestBinding(), flags),\n        );\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): ObjectMember | RestElement {\n    const prop = this.startNode<ObjectMember | RestElement>();\n    const { type, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop as Undone<RestElement>);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      (prop as Undone<ObjectMember>).key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop as Undone<ObjectMember>);\n    }\n    (prop as Undone<ObjectMember>).method = false;\n    return this.parseObjPropValue(\n      prop as Undone<ObjectMember>,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    flags: ParseBindingListFlags,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(\n    param: Pattern,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flags: ParseBindingListFlags,\n  ): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc ??= this.state.startLoc;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus its descendants must be subsequently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param type A Node `type` string\n   * @param isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingTypes,\n  ): string | boolean {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      // @ts-expect-error refine string to enum\n      type,\n    );\n  }\n\n  // Overridden by the estree plugin\n  isOptionalMemberExpression(expression: Node) {\n    return expression.type === \"OptionalMemberExpression\";\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param expression The expression in question to check.\n   * @param options A set of options described below.\n   * @param options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param options.binding\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BindingFlag.TYPE_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param options.checkClashes\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param options.strictModeChanged\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param options.hasParenthesizedAncestor\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BindingFlag.TYPE_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor;\n      binding?: BindingTypes;\n      checkClashes?: Set<string> | false;\n      strictModeChanged?: boolean;\n      hasParenthesizedAncestor?: boolean;\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    const isOptionalMemberExpression =\n      this.isOptionalMemberExpression(expression);\n\n    if (isOptionalMemberExpression || type === \"MemberExpression\") {\n      if (isOptionalMemberExpression) {\n        this.expectPlugin(\"optionalChainingAssign\", expression.loc.start);\n        if (ancestor.type !== \"AssignmentExpression\") {\n          this.raise(Errors.InvalidLhsOptionalChaining, {\n            at: expression,\n            ancestor,\n          });\n        }\n      }\n\n      if (binding !== BindingFlag.TYPE_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (type === \"Identifier\") {\n      this.checkIdentifier(\n        expression as Identifier,\n        binding,\n        strictModeChanged,\n      );\n\n      const { name } = expression as Identifier;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BindingFlag.TYPE_NONE\n          ? Errors.InvalidLhs\n          : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, { at: expression, ancestor });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      type === \"ArrayPattern\" || type === \"ObjectPattern\"\n        ? ({ type } as const)\n        : ancestor;\n\n    // @ts-expect-error key may not index expression.\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BindingFlag.TYPE_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (bindingType & BindingFlag.FLAG_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BindingFlag.TYPE_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(\n    close: (typeof charCodes)[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport type * as N from \"../../types.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { createPositionWithColumnOffset } from \"../../util/location.ts\";\nimport type Parser from \"../../parser/index.ts\";\nimport {\n  type BindingTypes,\n  ScopeFlag,\n  BindingFlag,\n} from \"../../util/scopeflags.ts\";\nimport TypeScriptScopeHandler from \"./scope.ts\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport type { ParseStatementFlag } from \"../../parser/statement.ts\";\nimport { ParamKind } from \"../../util/production-parameter.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node.ts\";\nimport type { Pattern } from \"../../types.ts\";\nimport type { Expression } from \"../../types.ts\";\nimport type { IJSXParserMixin } from \"../jsx/index.ts\";\nimport { ParseBindingListFlags } from \"../../parser/lval.ts\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | \"const\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  // TODO: Accesor -> Accessor\n  AccesorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  AccessorCannotBeOptional:\n    \"An 'accessor' property cannot be declared optional.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  // TODO: Accesor -> Accessor\n  SetAccesorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType:\n    \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(value: string): N.TsKeywordTypeType | undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\ntype ClassWithMixin<\n  T extends new (...args: any) => any,\n  M extends object,\n> = T extends new (...args: infer P) => infer I\n  ? new (...args: P) => I & M\n  : never;\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class TypeScriptParserMixin extends superClass implements Parser {\n    getScopeHandler(): {\n      new (...args: any): TypeScriptScopeHandler;\n    } {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (\n        !tokenIsIdentifier(this.state.type) &&\n        this.state.type !== tt._in &&\n        this.state.type !== tt._const\n      ) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers<N extends ModifierBase>(\n      {\n        allowedModifiers,\n        disallowedModifiers,\n        stopOnStartOfClassStaticBlock,\n        errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n      }: {\n        allowedModifiers: readonly TsModifier[];\n        disallowedModifiers?: TsModifier[];\n        stopOnStartOfClassStaticBlock?: boolean;\n        errorTemplate?: typeof TSErrors.InvalidModifierOnTypeMember;\n      },\n      modified: N,\n    ): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined | null,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined | null {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\n        \"const\",\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      // for better error recovery\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n    });\n\n    tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseTypeParameter(\n      parseModifiers: (node: Undone<N.TsTypeParameter>) => void,\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers: (node: N.TsTypeParameter) => void,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(parseModifiers: (node: N.TsTypeParameter) => void) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        // @ts-expect-error refine typings\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      const list = super.parseBindingList(\n        tt.parenR,\n        charCodes.rightParenthesis,\n        ParseBindingListFlags.IS_FUNCTION_PARAMS,\n      );\n      for (const pattern of list) {\n        const { type } = pattern;\n        if (type === \"AssignmentPattern\" || type === \"TSParameterProperty\") {\n          this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n            at: pattern,\n            type,\n          });\n        }\n      }\n      return list as Exclude<\n        (typeof list)[0],\n        N.AssignmentPattern | N.TSParameterProperty\n      >[];\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\"readonly\"],\n          disallowedModifiers: [\n            \"declare\",\n            \"abstract\",\n            \"private\",\n            \"protected\",\n            \"public\",\n            \"static\",\n            \"override\",\n          ],\n        },\n        node,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsNamedTupleMember | N.TsType {\n      // parses `...TsType[]`\n\n      const { startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n\n      let labeled: boolean;\n      let label: N.Identifier;\n      let optional: boolean;\n      let type: N.TsNamedTupleMember | N.TsType;\n\n      const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n      const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n      if (chAfterWord === charCodes.colon) {\n        labeled = true;\n        optional = false;\n        label = this.parseIdentifier(true);\n        this.expect(tt.colon);\n        type = this.tsParseType();\n      } else if (chAfterWord === charCodes.questionMark) {\n        optional = true;\n        const startLoc = this.state.startLoc;\n        const wordName = this.state.value;\n        const typeOrLabel = this.tsParseNonArrayType();\n\n        if (this.lookaheadCharCode() === charCodes.colon) {\n          labeled = true;\n          label = this.createIdentifier(\n            this.startNodeAt<N.Identifier>(startLoc),\n            wordName,\n          );\n          this.expect(tt.question);\n          this.expect(tt.colon);\n          type = this.tsParseType();\n        } else {\n          labeled = false;\n          type = typeOrLabel;\n          this.expect(tt.question);\n        }\n      } else {\n        type = this.tsParseType();\n        optional = this.eat(tt.question);\n        // In this case (labeled === true) could be only in invalid label.\n        // E.g. [x.y:type]\n        // An error is raised while processing node.\n        labeled = this.eat(tt.colon);\n      }\n\n      if (labeled) {\n        let labeledNode: Undone<N.TsNamedTupleMember>;\n        if (label) {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(label);\n          labeledNode.optional = optional;\n          labeledNode.label = label;\n          labeledNode.elementType = type;\n\n          if (this.eat(tt.question)) {\n            labeledNode.optional = true;\n            this.raise(TSErrors.TupleOptionalAfterType, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n        } else {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n          labeledNode.optional = optional;\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // @ts-expect-error This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          labeledNode.label = type;\n          labeledNode.elementType = this.tsParseType();\n        }\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        (node as Undone<N.TsConstructorType>).abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      switch (this.state.type) {\n        case tt.num:\n        case tt.bigint:\n        case tt.string:\n        case tt._true:\n        case tt._false:\n          // For compatibility to estree we cannot call parseLiteral directly here\n          // @ts-expect-error refine typings\n          node.literal = super.parseExprAtom();\n          break;\n        default:\n          this.unexpected();\n      }\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Node {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startLoc = this.state.startLoc;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startLoc.index);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                  ? \"TSNullKeyword\"\n                  : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(\n          // @ts-expect-error todo(flow->ts)\n          node,\n        );\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n          ? this.tsParseInferType()\n          : this.tsInAllowConditionalTypesContext(() =>\n              this.tsParseArrayTypeOrHigher(),\n            );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            ParseBindingListFlags.ALLOW_EMPTY,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            thisTypePredicate.asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeAnnotation();\n      }\n    }\n\n    tsTryParseType(): N.TsType | undefined {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      node.typeAnnotation = this.tsInType(() => {\n        this.next(); // \"<\"\n        return this.match(tt._const)\n          ? this.tsParseTypeReference()\n          : this.tsParseType();\n      });\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<N.TsExpressionWithTypeArguments>();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BindingFlag.TYPE_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers,\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | undefined {\n      if (this.match(token)) {\n        return this.tsNextThenParseType();\n      }\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsInType(() => {\n        this.expect(token);\n        return this.tsParseType();\n      });\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsInType(() => {\n        this.next();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BindingFlag.TYPE_TS_CONST_ENUM : BindingFlag.TYPE_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(ScopeFlag.OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(ScopeFlag.TS_MODULE);\n        this.prodParam.enter(ParamKind.PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(ScopeFlag.TS_MODULE);\n        this.prodParam.enter(ParamKind.PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      maybeDefaultIdentifier?: N.Identifier | null,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = maybeDefaultIdentifier || this.parseIdentifier();\n      this.checkIdentifier(node.id, BindingFlag.TYPE_TS_VALUE_IMPORT);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      this.sawUnambiguousESM = true;\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      }\n      this.state = state;\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let startType = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        startType = tt._var;\n        kind = \"let\";\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        switch (startType) {\n          case tt._function:\n            nany.declare = true;\n            return super.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* isHangingDeclaration */ false,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to know how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._enum:\n            return this.tsParseEnumDeclaration(nany, { declare: true });\n          case tt._global:\n            return this.tsParseAmbientExternalModuleDeclaration(nany);\n          case tt._const:\n          case tt._var:\n            if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n              nany.declare = true;\n              return this.parseVarStatement(\n                nany,\n                kind || this.state.value,\n                true,\n              );\n            }\n\n            // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n            this.expect(tt._const);\n            return this.tsParseEnumDeclaration(nany, {\n              const: true,\n              declare: true,\n            });\n          case tt._interface: {\n            const result = this.tsParseInterfaceDeclaration(nany, {\n              declare: true,\n            });\n            if (result) return result;\n          }\n          // fallthrough\n          default:\n            if (tokenIsIdentifier(startType)) {\n              return this.tsParseDeclaration(\n                nany,\n                this.state.value,\n                /* next */ true,\n                /* decorators */ null,\n              );\n            }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n        /* decorators */ null,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n          }\n          return declaration;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(ScopeFlag.TS_MODULE);\n            this.prodParam.enter(ParamKind.PARAM);\n            const mod = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(\n            node,\n            expr.name,\n            /* next */ false,\n            decorators,\n          );\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node, decorators);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined {\n      if (!this.match(tt.lt)) return;\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n          node.typeParameters = this.tsParseTypeParameters(\n            this.tsParseConstModifier,\n          );\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) return;\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) return;\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      } else if (!this.state.inType && this.curContext() === tc.brace) {\n        // rescan `>` when we are no longer in type context and JSX parsing context\n        // since it was tokenized when `inType` is `true`.\n        this.reScan_lt_gt();\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      flags: ParseBindingListFlags,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location to include modifiers in range\n      const startLoc = this.state.startLoc;\n\n      const modified: ModifierBase = {};\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        },\n        modified,\n      );\n      const accessibility = modified.accessibility;\n      const override = modified.override;\n      const readonly = modified.readonly;\n      if (\n        !(flags & ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS) &&\n        (accessibility || readonly || override)\n      ) {\n        this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left, flags);\n      const elt = this.parseMaybeDefault(left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    tsDisallowOptionalPattern(node: Undone<N.Function>) {\n      for (const param of node.params) {\n        if (\n          param.type !== \"Identifier\" &&\n          (param as any).optional &&\n          !this.state.isAmbientContext\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n      }\n    }\n\n    setArrowFunctionParameters(\n      node: Undone<N.ArrowFunctionExpression>,\n      params: N.Expression[],\n      trailingCommaLoc?: Position | null,\n    ): void {\n      super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n      this.tsDisallowOptionalPattern(node);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n            ? \"TSDeclareMethod\"\n            : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if ((node as Undone<N.FunctionDeclaration>).declare) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n      this.tsDisallowOptionalPattern(node);\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodiless function, we need to do it here.\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | undefined | null>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression =\n          this.startNodeAt<N.TsNonNullExpression>(startLoc);\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn =\n              this.tsTryParseGenericAsyncArrowFunction(startLoc);\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<\n              N.CallExpression | N.OptionalCallExpression\n            >(startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              (node as Undone<N.OptionalCallExpression>).optional =\n                isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>>>c is not (a<b>)>>c, but a<(b>>>c)\n            tokenType === tt.bitShiftR ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(startLoc);\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      let isSatisfies: boolean;\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        (this.isContextual(tt._as) ||\n          (isSatisfies = this.isContextual(tt._satisfies)))\n      ) {\n        const node = this.startNodeAt<\n          N.TsAsExpression | N.TsSatisfiesExpression\n        >(leftStartLoc);\n        node.expression = left;\n        node.typeAnnotation = this.tsInType(() => {\n          this.next(); // \"as\" or \"satisfies\"\n          if (this.match(tt._const)) {\n            if (isSatisfies) {\n              this.raise(Errors.UnexpectedKeyword, {\n                at: this.state.startLoc,\n                keyword: \"const\",\n              });\n            }\n            return this.tsParseTypeReference();\n          }\n\n          return this.tsParseType();\n        });\n        this.finishNode(\n          node,\n          isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\",\n        );\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(TSErrors.ImportReflectionHasImportType, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    isPotentialImportPhase(isExport: boolean): boolean {\n      if (super.isPotentialImportPhase(isExport)) return true;\n      if (this.isContextual(tt._type)) {\n        const ch = this.lookaheadCharCode();\n        return isExport\n          ? ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk\n          : ch !== charCodes.equalsTo;\n      }\n      return !isExport && this.isContextual(tt._typeof);\n    }\n\n    applyImportPhase(\n      node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n      isExport: boolean,\n      phase: string | null,\n      loc?: Position,\n    ): void {\n      super.applyImportPhase(node, isExport, phase, loc);\n      if (isExport) {\n        (node as N.ExportNamedDeclaration).exportKind =\n          phase === \"type\" ? \"type\" : \"value\";\n      } else {\n        (node as N.ImportDeclaration).importKind =\n          phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n      }\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      if (this.match(tt.string)) {\n        node.importKind = \"value\";\n        return super.parseImport(node as Undone<N.ImportDeclaration>);\n      }\n\n      let importNode;\n      if (\n        tokenIsIdentifier(this.state.type) &&\n        this.lookaheadCharCode() === charCodes.equalsTo\n      ) {\n        node.importKind = \"value\";\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n        );\n      } else if (this.isContextual(tt._type)) {\n        const maybeDefaultIdentifier = this.parseMaybeImportPhase(\n          node as Undone<N.ImportDeclaration>,\n          /* isExport */ false,\n        );\n        if (this.lookaheadCharCode() === charCodes.equalsTo) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n            maybeDefaultIdentifier,\n          );\n        } else {\n          importNode = super.parseImportSpecifiersAndAfter(\n            node as Undone<N.ImportDeclaration>,\n            maybeDefaultIdentifier,\n          );\n        }\n      } else {\n        importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      }\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(\n      node: Undone<N.Node>,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        let maybeDefaultIdentifier: N.Identifier | null = null;\n        if (\n          this.isContextual(tt._type) &&\n          // We pass false here, because we are parsing an `import ... =`\n          this.isPotentialImportPhase(/* isExport */ false)\n        ) {\n          maybeDefaultIdentifier = this.parseMaybeImportPhase(\n            node as Undone<N.TsImportEqualsDeclaration>,\n            /* isExport */ false,\n          );\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n          maybeDefaultIdentifier,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        this.sawUnambiguousESM = true;\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n          decorators,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          !isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      flags: ParseStatementFlag,\n      decorators?: N.Decorator[] | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(flags, decorators);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers(\n        {\n          allowedModifiers: modifiers,\n          disallowedModifiers: [\"in\", \"out\"],\n          stopOnStartOfClassStaticBlock: true,\n          errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n        },\n        member,\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          super.parseClassStaticBlock(classBody, member as N.StaticBlock);\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr, decorators)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType?: BindingTypes,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare\n          ? BindingFlag.TYPE_TS_AMBIENT\n          : BindingFlag.TYPE_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty,\n    ): void {\n      if (!node.optional) {\n        if (this.eat(tt.bang)) {\n          node.definite = true;\n        } else if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error abstract may not index node\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // @ts-expect-error accessibility may not index node\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    parseClassAccessorProperty(\n      node: N.ClassAccessorProperty,\n    ): N.ClassAccessorProperty {\n      this.parseClassPropertyAnnotation(node);\n      if (node.optional) {\n        this.raise(TSErrors.AccessorCannotBeOptional, { at: node });\n      }\n      return super.parseClassAccessorProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // @ts-expect-error declare does not exist in ClassMethod\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        // @ts-expect-error refine typings\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ) {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(\n        prop,\n\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n    }\n\n    parseFunctionParams(node: N.Function, isConstructor: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n        const expr = super.parseMaybeAssign(\n          refExpressionErrors,\n          afterLeftParse,\n        );\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.params[0].constraint &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n      sawUnary?: boolean,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      }\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(\n      param: N.Pattern,\n      flags: ParseBindingListFlags,\n    ) {\n      if (!(flags & ParseBindingListFlags.IS_FUNCTION_PARAMS)) return param;\n\n      if (this.eat(tt.question)) {\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParameterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    // @ts-expect-error plugin overrides interfaces\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSAsExpression\"\n        | \"TSSatisfiesExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BindingFlag.TYPE_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSSatisfiesExpression: (binding !== BindingFlag.TYPE_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BindingFlag.TYPE_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      if (this.state.type === tt._this) {\n        return this.parseIdentifier(/* liberal */ true);\n      }\n      return super.parseBindingAtom();\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: (typeof charCodes)[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      }\n      return super.checkCommaAfterRest(close);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          this.finishOp(tt.gt, 1);\n          return;\n        }\n        if (code === charCodes.lessThan) {\n          this.finishOp(tt.lt, 1);\n          return;\n        }\n      }\n      super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(\n            expr as N.TsTypeCastExpression,\n          );\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          // @ts-expect-error: refine typings\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        // @ts-expect-error: refine typings\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      isStatement: boolean,\n      optionalId?: boolean,\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, isStatement, optionalId);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n      decorators: N.Decorator[] | null,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.maybeTakeDecorators(\n          decorators,\n          this.parseClass<N.ClassDeclaration>(\n            node as N.ClassDeclaration,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          ),\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope?: boolean,\n    ) {\n      const method = super.parseMethod<T>(\n        node,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error todo(flow->ts) property not defined for all types in union\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: Undone<N.ExportSpecifier>,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: Undone<N.ImportSpecifier>,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n        isInTypeOnlyImport\n          ? BindingFlag.TYPE_TS_TYPE_IMPORT\n          : BindingFlag.TYPE_TS_VALUE_IMPORT,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(\n          node[rightOfAsKey],\n          hasTypeSpecifier\n            ? BindingFlag.TYPE_TS_TYPE_IMPORT\n            : BindingFlag.TYPE_TS_VALUE_IMPORT,\n        );\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\n// If a const declaration has no type annotation and is initialized to\n// a string literal, numeric literal, or enum reference, then it is\n// allowed. In an ideal world, we'd check whether init was *actually* an\n// enum reference, but we allow anything that \"could be\" a literal enum\n// in `isPossiblyLiteralEnum` since we don't have all the information\n// that the typescript compiler has.\nfunction isValidAmbientConstInitializer(\n  expression: N.Expression,\n  estree: boolean,\n): boolean {\n  const { type } = expression;\n  if (expression.extra?.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const { value } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\n\nfunction isNumber(expression: N.Expression, estree: boolean): boolean {\n  if (estree) {\n    return (\n      expression.type === \"Literal\" &&\n      (typeof expression.value === \"number\" || \"bigint\" in expression)\n    );\n  }\n  return (\n    expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\"\n  );\n}\n\nfunction isNegativeNumber(expression: N.Expression, estree: boolean): boolean {\n  if (expression.type === \"UnaryExpression\") {\n    const { operator, argument } = expression as N.UnaryExpression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\" || expression.computed) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n", "import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types.ts\";\nimport type Parser from \"../parser/index.ts\";\nimport type * as N from \"../types.ts\";\nimport { ParseErrorEnum } from \"../parse-error.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\nimport type { BindingTypes } from \"../util/scopeflags.ts\";\nimport type { Position } from \"../util/location.ts\";\n\ntype PossiblePlaceholders = {\n  Identifier: N.Identifier;\n  StringLiteral: N.StringLiteral;\n  Expression: N.Expression;\n  Statement: N.Statement;\n  Declaration: N.Declaration;\n  BlockStatement: N.BlockStatement;\n  ClassBody: N.ClassBody;\n  Pattern: N.Pattern;\n};\nexport type PlaceholderTypes = keyof PossiblePlaceholders;\n\ntype NodeOf<T extends keyof PossiblePlaceholders> = PossiblePlaceholders[T];\n// todo: when there  is proper union type for Node\n// type NodeOf<T extends PlaceholderTypes> = Extract<N.Node, { type: T }>;\n\n// todo: Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\n/* eslint-disable sort-keys */\n\nexport default (superClass: typeof Parser) =>\n  class PlaceholdersParserMixin extends superClass implements Parser {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined | null {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        // @ts-expect-error placeholder typings\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      // @ts-expect-error todo(flow->ts)\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        this.finishOp(tt.placeholder, 2);\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") ||\n        super.parseExprAtom(refExpressionErrors)\n      );\n    }\n\n    parseIdentifier(liberal?: boolean): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ) {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"Placeholder\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    chStartsBindingIdentifier(ch: number, pos: number): boolean {\n      if (super.chStartsBindingIdentifier(ch, pos)) {\n        return true;\n      }\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (expr.type !== \"Placeholder\" || expr.extra?.parenthesized) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error placeholder typings\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(\n      allowDirectives?: boolean,\n      createNewLexicalScope?: boolean,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(\n          allowDirectives,\n          createNewLexicalScope,\n          afterBlockParse,\n        )\n      );\n    }\n\n    parseFunctionId(\n      requireId?: boolean,\n    ): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node, decorators: N.Decorator[] | null): N.AnyExport {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(node, decorators);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node, decorators);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      maybeDefaultIdentifier: N.Identifier | null,\n    ): node is Undone<N.ExportNamedDeclaration> {\n      if ((node as N.ExportNamedDeclaration).specifiers?.length) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(\n        node,\n        maybeDefaultIdentifier,\n      );\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(node);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource()\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n", "import type Parser from \"../parser/index.ts\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types.ts\";\nimport type * as N from \"../types.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\n\nexport default (superClass: typeof Parser) =>\n  class V8IntrinsicMixin extends superClass implements Parser {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName();\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      return (\n        this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors)\n      );\n    }\n  };\n", "import type Parser from \"./parser/index.ts\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"./typings.ts\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (superClass: { new (...args: any): Parser }) => {\n  new (...args: any): Parser;\n};\n\n// This function\u2019s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        // @ts-expect-error key may not exist in plugin options\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption<\n  PluginName extends ParserPluginWithOptions[0],\n  OptionName extends keyof PluginOptions<PluginName>,\n>(plugins: PluginList, name: PluginName, option: OptionName) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return (plugin[1] as PluginOptions<PluginName>)[option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\n        \"'decoratorsBeforeExport' must be a boolean, if specified.\",\n      );\n    }\n\n    const allowCallParenthesized = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"allowCallParenthesized\",\n    );\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAttributes` parser plugin, or `@babel/plugin-syntax-import-attributes`.\",\n      );\n    } else {\n      if (\n        hasPlugin(plugins, \"importAssertions\") ||\n        hasPlugin(plugins, \"importAttributes\")\n      ) {\n        throw new Error(\n          \"Cannot combine importAssertions, importAttributes and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n  if (\n    hasPlugin(plugins, \"importAssertions\") &&\n    hasPlugin(plugins, \"importAttributes\")\n  ) {\n    throw new Error(\n      \"Cannot combine importAssertions and importAttributes plugins.\",\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n\n  if (\n    hasPlugin(plugins, \"optionalChainingAssign\") &&\n    getPluginOption(plugins, \"optionalChainingAssign\", \"version\") !== \"2023-07\"\n  ) {\n    throw new Error(\n      \"The 'optionalChainingAssign' plugin requires a 'version' option,\" +\n        \" representing the last proposal update. Currently, the\" +\n        \" only supported value is '2023-07'.\",\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree.ts\";\nimport flow from \"./plugins/flow/index.ts\";\nimport jsx from \"./plugins/jsx/index.ts\";\nimport typescript from \"./plugins/typescript/index.ts\";\nimport placeholders from \"./plugins/placeholders.ts\";\nimport v8intrinsic from \"./plugins/v8intrinsic.ts\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n", "import type { PluginList } from \"./plugin-utils.ts\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType;\n  sourceFilename?: string;\n  startColumn: number;\n  startLine: number;\n  allowAwaitOutsideFunction: boolean;\n  allowReturnOutsideFunction: boolean;\n  allowNewTargetOutsideFunction: boolean;\n  allowImportExportEverywhere: boolean;\n  allowSuperOutsideMethod: boolean;\n  allowUndeclaredExports: boolean;\n  plugins: PluginList;\n  strictMode: boolean | undefined | null;\n  ranges: boolean;\n  tokens: boolean;\n  createImportExpressions: boolean;\n  createParenthesizedExpressions: boolean;\n  errorRecovery: boolean;\n  attachComment: boolean;\n  annexB: boolean;\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, new.target outside a function or class is not\n  // considered an error.\n  allowNewTargetOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ImportExpression AST nodes (if false\n  // `import(foo)` will be parsed as CallExpression(Import, [Identifier(foo)])\n  createImportExpressions: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n  // When enabled, the parser will support Annex B syntax.\n  // https://tc39.es/ecma262/#sec-additional-ecmascript-features-for-web-browsers\n  annexB: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): Options {\n  if (opts == null) {\n    return { ...defaultOptions };\n  }\n  if (opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions) as (keyof Options)[]) {\n    options[key] = opts[key] ?? defaultOptions[key];\n  }\n  return options;\n}\n", "// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts \u2014 that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types.ts\";\nimport type * as N from \"../types.ts\";\nimport LValParser from \"./lval.ts\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier.ts\";\nimport {\n  type Position,\n  createPositionWithColumnOffset,\n} from \"../util/location.ts\";\nimport * as charCodes from \"charcodes\";\nimport { ScopeFlag, BindingFlag } from \"../util/scopeflags.ts\";\nimport { ExpressionErrors } from \"./util.ts\";\nimport { ParamKind, functionFlags } from \"../util/production-parameter.ts\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope.ts\";\nimport { Errors, type ParseError } from \"../parse-error.ts\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors.ts\";\nimport { setInnerComments } from \"./comments.ts\";\nimport { cloneIdentifier, type Undone } from \"./node.ts\";\nimport type Parser from \"./index.ts\";\n\nimport type { SourceType } from \"../options.ts\";\n\nexport default abstract class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  abstract parseBlock(\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement;\n  abstract parseClass(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ): N.Class;\n  abstract parseDecorators(allowExport?: boolean): void;\n  abstract parseFunction<T extends N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ): T;\n  abstract parseFunctionParams(node: N.Function, isConstructor?: boolean): void;\n  abstract parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: N.Directive[] | null | undefined,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void;\n  abstract parseProgram(\n    program: N.Program,\n    end: TokenType,\n    sourceType?: SourceType,\n  ): N.Program;\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // @ts-expect-error prop must be an ObjectProperty\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    // @ts-expect-error fixme: refine types\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        const startIndex = startLoc.index;\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startIndex\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startIndex\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startIndex\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        // @ts-expect-error TS2322: Type 'string' is not assignable to type '\"AssignmentExpression\" | \"ArrowFunctionExpression\" | \"ConditionalExpression\" | \"YieldExpression\"'.\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      // @ts-expect-error Type 'Node' is missing the following properties from type 'Undone<UpdateExpression>': prefix, operator, argument\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, {\n          at: this.state.startLoc,\n        });\n        if (this.lookaheadCharCode() === charCodes.leftParenthesis) {\n          // stop at `?.` when parsing `new a?.()`\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        // @ts-expect-error todo(flow->ts)\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  expectImportAttributesPlugin() {\n    if (!this.hasPlugin(\"importAssertions\")) {\n      this.expectPlugin(\"importAttributes\");\n    }\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectImportAttributesPlugin();\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectImportAttributesPlugin();\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAttributes\") ||\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: N.Node | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression | undefined | null> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAttributes\") &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n\n  // Parse an atomic expression \u2014 either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n    let decorators: N.Decorator[] | null = null;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import | N.ImportExpression>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (this.match(tt.parenL)) {\n          if (this.options.createImportExpressions) {\n            return this.parseImportCall(node as Undone<N.ImportExpression>);\n          } else {\n            return this.finishNode(node, \"Import\");\n          }\n        } else {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n          return this.finishNode(node, \"Import\");\n        }\n\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        decorators = this.parseDecorators();\n      // fall through\n      case tt._class:\n        return this.parseClass(\n          this.maybeTakeDecorators(decorators, this.startNode()),\n          false,\n        );\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        }\n        this.unexpected();\n        break;\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n        } else {\n          this.unexpected();\n        }\n        break;\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadInLineCharCode() === charCodes.leftCurlyBrace\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(\n                this.startNodeAtNode(id),\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that \u201Ctopic token\u201D.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the \u201Ctopic token\u201D, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token\u2019s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin\u2019s configuration matches the current token\u2019s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin\u2019s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin\u2019s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: Undone<N.Node>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin\u2019s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin\u2019s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin\u2019s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration\u2019s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(ParamKind.PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      createPositionWithColumnOffset(this.state.startLoc, 1),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(\n    this: Parser,\n    node: Undone<N.MetaProperty | N.ImportExpression>,\n  ): N.MetaProperty | N.ImportExpression {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    } else if (this.isContextual(tt._source) || this.isContextual(tt._defer)) {\n      const isSource = this.isContextual(tt._source);\n\n      // TODO: The proposal doesn't mention import.defer yet because it was\n      // pending on a decision for import.source. Wait to enable it until it's\n      // included in the proposal.\n      if (!isSource) this.unexpected();\n\n      this.expectPlugin(\n        isSource ? \"sourcePhaseImports\" : \"deferredImportEvaluation\",\n      );\n      if (!this.options.createImportExpressions) {\n        throw this.raise(Errors.DynamicImportPhaseRequiresImportExpressions, {\n          at: this.state.startLoc,\n          phase: this.state.value,\n        });\n      }\n      this.next();\n      (node as Undone<N.ImportExpression>).phase = isSource\n        ? \"source\"\n        : \"defer\";\n      return this.parseImportCall(node as Undone<N.ImportExpression>);\n    }\n\n    return this.parseMetaProperty(node as Undone<N.MetaProperty>, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartLoc = this.state.startLoc;\n    const exprList: N.Expression[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(innerStartLoc);\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(startLoc: Position, expression: N.Expression): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n\n      this.takeSurroundingComments(\n        expression,\n        startLoc.index,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression =\n      this.startNodeAt<N.ParenthesizedExpression>(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (\n        !this.scope.inNonArrowFunction &&\n        !this.scope.inClass &&\n        !this.options.allowNewTargetOutsideFunction\n      ) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call \u2014 at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    const isImport = this.match(tt._import);\n    const callee = this.parseNoCallExpr();\n    node.callee = callee;\n    if (\n      isImport &&\n      (callee.type === \"Import\" || callee.type === \"ImportExpression\")\n    ) {\n      this.raise(Errors.ImportCallNotNewExpression, { at: callee });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: Adding 1 is probably wrong.\n          at: createPositionWithColumnOffset(\n            this.state.firstInvalidTemplateEscapePos,\n            1,\n          ),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(\n            // @ts-expect-error todo(flow->ts) improve node types\n            node,\n          );\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // @ts-expect-error shorthand may not index prop\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: Undone<N.ObjectProperty>): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    this: Parser,\n    prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMethod | N.ObjectProperty {\n    const node =\n      this.parseObjectMethod(\n        prop as Undone<N.ObjectMethod>,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(\n      ScopeFlag.FUNCTION |\n        ScopeFlag.SUPER |\n        (inClassScope ? ScopeFlag.CLASS : 0) |\n        (allowDirectSuper ? ScopeFlag.DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[] | undefined | null,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(ScopeFlag.FUNCTION | ScopeFlag.ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead \u2260 {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= ParamKind.PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[],\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(\n        this.prodParam.currentFlags() | ParamKind.PARAM_RETURN,\n      );\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // @ts-expect-error kind may not index node\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error key may not index node\n                !!node.key\n                  ? // @ts-expect-error node.key has been guarded\n                    node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(\n              node.id,\n              BindingFlag.TYPE_OUTSIDE,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BindingFlag.TYPE_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n        ? isStrictBindReservedWord\n        : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(this: Parser, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``, await of []\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      (type === tt._of && !this.state.containsEsc) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportCall\n  parseImportCall(\n    this: Parser,\n    node: Undone<N.ImportExpression>,\n  ): N.ImportExpression {\n    this.next(); // eat tt.parenL\n    node.source = this.parseMaybeAssignAllowIn();\n    if (\n      this.hasPlugin(\"importAttributes\") ||\n      this.hasPlugin(\"importAssertions\")\n    ) {\n      node.options = null;\n    }\n    if (this.eat(tt.comma)) {\n      this.expectImportAttributesPlugin();\n      if (!this.match(tt.parenR)) {\n        node.options = this.parseMaybeAssignAllowIn();\n        this.eat(tt.comma);\n      }\n    }\n    this.expect(tt.parenR);\n    return this.finishNode(node, \"ImportExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr: N.Expression, startLoc: Position) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser\u2019s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = ParamKind.PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | ParamKind.PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = ParamKind.PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~ParamKind.PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    if (!this.match(tt.braceL)) {\n      this.unexpected(null, tt.braceL);\n    }\n    // start program node immediately after `{`\n    const program = this.startNodeAt<N.Program>(this.state.endLoc);\n    this.next(); // eat `{`\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n", "import type * as N from \"../types.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types.ts\";\nimport ExpressionParser from \"./expression.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier.ts\";\nimport * as charCodes from \"charcodes\";\nimport {\n  ScopeFlag,\n  ClassElementType,\n  type BindingTypes,\n  BindingFlag,\n} from \"../util/scopeflags.ts\";\nimport { ExpressionErrors } from \"./util.ts\";\nimport { ParamKind, functionFlags } from \"../util/production-parameter.ts\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope.ts\";\nimport type { SourceType } from \"../options.ts\";\nimport { Token } from \"../tokenizer/index.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport { createPositionWithColumnOffset } from \"../util/location.ts\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node.ts\";\nimport type Parser from \"./index.ts\";\nimport { ParseBindingListFlags } from \"./lval.ts\";\n\nconst loopLabel = { kind: \"loop\" } as const,\n  switchLabel = { kind: \"switch\" } as const;\n\nexport const enum ParseFunctionFlag {\n  Expression = 0b0000,\n  Declaration = 0b0001,\n  HangingDeclaration = 0b0010,\n  NullableId = 0b0100,\n  Async = 0b1000,\n}\n\nexport const enum ParseStatementFlag {\n  StatementOnly = 0b0000,\n  AllowImportExport = 0b0001,\n  AllowDeclaration = 0b0010,\n  AllowFunctionDeclaration = 0b0100,\n  AllowLabeledFunction = 0b1000,\n}\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n */\nfunction babel7CompatTokens(tokens: (Token | N.Comment)[], input: string) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default abstract class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(this: Parser, file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    let finishedProgram: N.Program;\n    if (end === tt.eof) {\n      // finish at eof for top level program\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      // finish immediately before the end token\n      finishedProgram = this.finishNodeAt(\n        program,\n        \"Program\",\n        createPositionWithColumnOffset(this.state.startLoc, -1),\n      );\n    }\n    return finishedProgram;\n  }\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n\n  chStartsBindingIdentifier(ch: number, pos: number) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identifier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === charCodes.backslash) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  chStartsBindingPattern(ch: number) {\n    return (\n      ch === charCodes.leftSquareBracket || ch === charCodes.leftCurlyBrace\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `let` and declaration is allowed, check if it\n   * starts a variable declaration so that it should be interpreted as a keyword.\n   */\n  hasFollowingBindingAtom(): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return (\n      this.chStartsBindingPattern(nextCh) ||\n      this.chStartsBindingIdentifier(nextCh, next)\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `using` and declaration is allowed, check if it\n   * starts a variable declaration in the same line so that it should be interpreted as\n   * a keyword.\n   */\n  hasInLineFollowingBindingIdentifier(): boolean {\n    const next = this.nextTokenInLineStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingIdentifier(nextCh, next);\n  }\n\n  startsUsingForOf(): boolean {\n    const { type, containsEsc } = this.lookahead();\n    if (type === tt._of && !containsEsc) {\n      // `using of` must start a for-lhs-of statement\n      return false;\n    } else if (tokenIsIdentifier(type) && !this.hasFollowingLineBreak()) {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n\n  startsAwaitUsing(): boolean {\n    let next = this.nextTokenInLineStart();\n    if (this.isUnparsedContextual(next, \"using\")) {\n      next = this.nextTokenInLineStartSince(next + 5);\n      const nextCh = this.codePointAtPos(next);\n      if (this.chStartsBindingIdentifier(nextCh, next)) {\n        this.expectPlugin(\"explicitResourceManagement\");\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleItem\n  parseModuleItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowImportExport |\n        ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        // This function is actually also used to parse StatementItems,\n        // which with Annex B enabled allows labeled functions.\n        ParseStatementFlag.AllowLabeledFunction,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-StatementListItem\n  parseStatementListItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        (!this.options.annexB || this.state.strict\n          ? 0\n          : ParseStatementFlag.AllowLabeledFunction),\n    );\n  }\n\n  parseStatementOrSloppyAnnexBFunctionDeclaration(\n    this: Parser,\n    allowLabeledFunction: boolean = false,\n  ) {\n    let flags: ParseStatementFlag = ParseStatementFlag.StatementOnly;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= ParseStatementFlag.AllowFunctionDeclaration;\n      if (allowLabeledFunction) {\n        flags |= ParseStatementFlag.AllowLabeledFunction;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  parseStatement(this: Parser) {\n    return this.parseStatementLike(ParseStatementFlag.StatementOnly);\n  }\n\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatementLike(\n    this: Parser,\n    flags: ParseStatementFlag,\n  ):\n    | N.Statement\n    | N.Declaration\n    | N.ImportDeclaration\n    | N.ExportDefaultDeclaration\n    | N.ExportNamedDeclaration\n    | N.ExportAllDeclaration {\n    let decorators: N.Decorator[] | null = null;\n\n    if (this.match(tt.at)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    flags: ParseStatementFlag,\n    decorators?: N.Decorator[] | null,\n  ): N.Statement {\n    const starttype = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & ParseStatementFlag.AllowDeclaration);\n    const allowFunctionDeclaration = !!(\n      flags & ParseStatementFlag.AllowFunctionDeclaration\n    );\n    const topLevel = flags & ParseStatementFlag.AllowImportExport;\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoWhileStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(\n            this.state.strict\n              ? Errors.StrictFunction\n              : this.options.annexB\n                ? Errors.SloppyFunctionAnnexB\n                : Errors.SloppyFunction,\n            { at: this.state.startLoc },\n          );\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !allowDeclaration && allowFunctionDeclaration,\n        );\n      case tt._class:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(\n          this.maybeTakeDecorators(\n            decorators,\n            node as Undone<N.ClassDeclaration>,\n          ),\n          true,\n        );\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._await:\n        // [+Await] await [no LineTerminator here] using [no LineTerminator here] BindingList[+Using]\n        if (!this.state.containsEsc && this.startsAwaitUsing()) {\n          if (!this.isAwaitAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, { at: node });\n          } else if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, {\n              at: node,\n            });\n          }\n          this.next(); // eat 'await'\n          return this.parseVarStatement(\n            node as Undone<N.VariableDeclaration>,\n            \"await using\",\n          );\n        }\n        break;\n      case tt._using:\n        // using [no LineTerminator here] BindingList[+Using]\n        if (\n          this.state.containsEsc ||\n          !this.hasInLineFollowingBindingIdentifier()\n        ) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, {\n            at: this.state.startLoc,\n          });\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          \"using\",\n        );\n      case tt._let: {\n        if (this.state.containsEsc) {\n          break;\n        }\n        // `let [` is an explicit negative lookahead for\n        // ExpressionStatement, so special-case it first.\n        const next = this.nextTokenStart();\n        const nextCh = this.codePointAtPos(next);\n        if (nextCh !== charCodes.leftSquareBracket) {\n          if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n          if (\n            !this.chStartsBindingIdentifier(nextCh, next) &&\n            nextCh !== charCodes.leftCurlyBrace\n          ) {\n            break;\n          }\n        }\n      }\n      // fall through\n      case tt._const: {\n        if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n      }\n      // fall through\n      case tt._var: {\n        const kind = this.state.value;\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n      }\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n            decorators,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (!allowDeclaration) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next(); // eat 'async'\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !allowDeclaration && allowFunctionDeclaration,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        // @ts-expect-error migrate to Babel types\n        expr,\n        flags,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n        decorators,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  decoratorsEnabledBeforeExport(): boolean {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return (\n      this.hasPlugin(\"decorators\") &&\n      this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false\n    );\n  }\n\n  // Attach the decorators to the given class.\n  // NOTE: This method changes the .start location of the class, and thus\n  // can affect comment attachment. Calling it before or after finalizing\n  // the class node (and thus finalizing its comments) changes how comments\n  // before the `class` keyword or before the final .start location of the\n  // class are attached.\n  maybeTakeDecorators<T extends Undone<N.Class>>(\n    maybeDecorators: N.Decorator[] | null,\n    classNode: T,\n    exportNode?: Undone<N.ExportDefaultDeclaration | N.ExportNamedDeclaration>,\n  ): T {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        // Note: decorators attachment is only attempred multiple times\n        // when the class is part of an export declaration.\n        if (\n          typeof this.getPluginOption(\n            \"decorators\",\n            \"decoratorsBeforeExport\",\n          ) !== \"boolean\"\n        ) {\n          // If `decoratorsBeforeExport` was set to `true` or `false`, we\n          // already threw an error about decorators not being in a valid\n          // position.\n          this.raise(Errors.DecoratorsBeforeAfterExport, {\n            at: classNode.decorators[0],\n          });\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): N.Decorator[] {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(tt.at));\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n\n    return decorators;\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startLoc, expr);\n\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (\n          this.getPluginOption(\"decorators\", \"allowCallParenthesized\") ===\n            false &&\n          node.expression !== expr\n        ) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc,\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startLoc);\n          node.object = expr;\n          if (this.match(tt.privateName)) {\n            this.classScope.usePrivateName(\n              this.state.value,\n              this.state.startLoc,\n            );\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  // https://tc39.es/ecma262/#prod-DoWhileStatement\n  parseDoWhileStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(ScopeFlag.OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    {\n      const startsWithAwaitUsing =\n        this.isContextual(tt._await) && this.startsAwaitUsing();\n      const starsWithUsingDeclaration =\n        startsWithAwaitUsing ||\n        (this.isContextual(tt._using) && this.startsUsingForOf());\n      const isLetOrUsing =\n        (startsWithLet && this.hasFollowingBindingAtom()) ||\n        starsWithUsingDeclaration;\n\n      if (this.match(tt._var) || this.match(tt._const) || isLetOrUsing) {\n        const initNode = this.startNode<N.VariableDeclaration>();\n        let kind;\n        if (startsWithAwaitUsing) {\n          kind = \"await using\";\n          if (!this.isAwaitAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next(); // eat 'await'\n        } else {\n          kind = this.state.value;\n        }\n        this.next();\n        this.parseVar(initNode, true, kind);\n        const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n        const isForIn = this.match(tt._in);\n        if (isForIn && starsWithUsingDeclaration) {\n          this.raise(Errors.ForInUsing, { at: init });\n        }\n        if (\n          (isForIn || this.isContextual(tt._of)) &&\n          init.declarations.length === 1\n        ) {\n          return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n        }\n        if (awaitAt !== null) {\n          this.unexpected(awaitAt);\n        }\n        return this.parseFor(node as Undone<N.ForStatement>, init);\n      }\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  // https://tc39.es/ecma262/#prod-HoistableDeclaration\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync: boolean,\n    isHangingDeclaration: boolean,\n  ): N.FunctionDeclaration {\n    this.next(); // eat 'function'\n    return this.parseFunction(\n      node,\n      ParseFunctionFlag.Declaration |\n        (isHangingDeclaration ? ParseFunctionFlag.HangingDeclaration : 0) |\n        (isAsync ? ParseFunctionFlag.Async : 0),\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-IfStatement\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    // Annex B.3.3\n    // https://tc39.es/ecma262/#sec-functiondeclarations-in-ifstatement-statement-clauses\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(tt._else)\n      ? this.parseStatementOrSloppyAnnexBFunctionDeclaration()\n      : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-SwitchStatement\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(ScopeFlag.OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    this.scope.enter(\n      this.options.annexB && param.type === \"Identifier\"\n        ? ScopeFlag.SIMPLE_CATCH\n        : 0,\n    );\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BindingFlag.TYPE_CATCH_PARAM,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(ScopeFlag.OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-VariableStatement\n  // https://tc39.es/ecma262/#prod-LexicalDeclaration\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  // https://tc39.es/ecma262/#prod-WhileStatement\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-LabelledStatement\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    flags: ParseStatementFlag,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n        ? \"switch\"\n        : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    // https://tc39.es/ecma262/#prod-LabelledItem\n    node.body =\n      flags & ParseStatementFlag.AllowLabeledFunction\n        ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true)\n        : this.parseStatement();\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    decorators: N.Decorator[] | null,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(ScopeFlag.OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = topLevel\n        ? this.parseModuleItem()\n        : this.parseStatementListItem();\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    afterBlockParse?.call(this, hasStrictModeDirective);\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        !this.options.annexB ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n  ): void {\n    const id = this.parseBindingAtom();\n    this.checkLVal(id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BindingFlag.TYPE_VAR : BindingFlag.TYPE_LEXICAL,\n    });\n    decl.id = id;\n  }\n\n  // https://tc39.es/ecma262/#prod-AsyncFunctionExpression\n  parseAsyncFunctionExpression(\n    this: Parser,\n    node: Undone<N.FunctionExpression>,\n  ): N.FunctionExpression {\n    return this.parseFunction(node, ParseFunctionFlag.Async);\n  }\n\n  // Parse a function declaration or expression (depending on the\n  // ParseFunctionFlag.Declaration flag).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    flags: ParseFunctionFlag = ParseFunctionFlag.Expression,\n  ): T {\n    const hangingDeclaration = flags & ParseFunctionFlag.HangingDeclaration;\n    const isDeclaration = !!(flags & ParseFunctionFlag.Declaration);\n    const requireId = isDeclaration && !(flags & ParseFunctionFlag.NullableId);\n    const isAsync = !!(flags & ParseFunctionFlag.Async);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star)) {\n      if (hangingDeclaration) {\n        this.raise(Errors.GeneratorInSingleStatementContext, {\n          at: this.state.startLoc,\n        });\n      }\n      this.next(); // eat *\n      node.generator = true;\n    }\n\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(ScopeFlag.FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* isConstructor */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isDeclaration && !hangingDeclaration) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    isConstructor?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      ParseBindingListFlags.IS_FUNCTION_PARAMS |\n        (isConstructor ? ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS : 0),\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BindingFlag.TYPE_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      !this.options.annexB || this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BindingFlag.TYPE_VAR\n          : BindingFlag.TYPE_LEXICAL\n        : BindingFlag.TYPE_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next(); // 'class'\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod = member as N.ClassMethod;\n    const privateMethod = member as N.ClassPrivateMethod;\n    const publicProp = member as N.ClassProperty;\n    const privateProp = member as N.ClassPrivateProperty;\n    const accessorProp = member as N.ClassAccessorProperty;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(\n      ScopeFlag.CLASS | ScopeFlag.STATIC_BLOCK | ScopeFlag.SUPER,\n    );\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(ParamKind.PARAM);\n    const body: N.Node[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      ClassElementType.OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = prop.key as N.Expression;\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        ClassElementType.OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? ClassElementType.STATIC_GETTER\n          : ClassElementType.INSTANCE_GETTER\n        : node.kind === \"set\"\n          ? node.static\n            ? ClassElementType.STATIC_SETTER\n            : ClassElementType.INSTANCE_SETTER\n          : ClassElementType.OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<\n      N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod\n    >,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(ScopeFlag.CLASS | ScopeFlag.SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(ParamKind.PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingTypes = BindingFlag.TYPE_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    decorators: N.Decorator[] | null,\n  ): N.AnyExport {\n    const maybeDefaultIdentifier = this.parseMaybeImportPhase(\n      node,\n      /* isExport */ true,\n    );\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      node,\n      maybeDefaultIdentifier,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar =\n      parseAfterDefault &&\n      this.eatExportStar(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const hasNamespace =\n      hasStar &&\n      this.maybeParseExportNamespaceSpecifier(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      this.parseExportFrom(node as Undone<N.ExportNamedDeclaration>, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, tt.braceL);\n    }\n\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, tt._from);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (node2.declaration?.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      const node2 = node as Undone<N.ExportDefaultDeclaration>;\n      // export default ...\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl as N.ClassDeclaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n      }\n\n      this.checkExport(node2, true, true);\n\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n\n    this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (maybeDefaultIdentifier || this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\", maybeDefaultIdentifier?.loc.start);\n      const id = maybeDefaultIdentifier || this.parseIdentifier(true);\n      const specifier = this.startNodeAtNode<N.ExportDefaultSpecifier>(id);\n      specifier.exported = id;\n      (node as Undone<N.ExportNamedDeclaration>).specifiers = [\n        this.finishNode(specifier, \"ExportDefaultSpecifier\"),\n      ];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenInLineStart();\n    return this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression(this: Parser): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    if (this.match(tt._function)) {\n      this.next();\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId,\n      );\n    } else if (this.isAsyncFunction()) {\n      this.next(); // eat 'async'\n      this.next(); // eat 'function'\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration |\n          ParseFunctionFlag.NullableId |\n          ParseFunctionFlag.Async,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      return this.parseClass(\n        this.maybeTakeDecorators(\n          this.parseDecorators(false),\n          this.startNode<N.ClassDeclaration>(),\n        ),\n        true,\n        true,\n      );\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    if (this.match(tt._class)) {\n      const node = this.parseClass(\n        this.startNode<N.ClassDeclaration>(),\n        true,\n        false,\n      );\n      return node;\n    }\n    return this.parseStatementListItem() as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      this.maybeParseImportAttributes(node);\n      this.checkJSONModuleImport(node);\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (\n          this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n        ) {\n          this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<N.ExportNamedDeclaration | N.ExportDefaultDeclaration>,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers?.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkImportReflection(node: Undone<N.ImportDeclaration>) {\n    const { specifiers } = node;\n    const singleBindingType =\n      specifiers.length === 1 ? specifiers[0].type : null;\n\n    if (node.phase === \"source\") {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.SourcePhaseImportRequiresDefault, {\n          at: specifiers[0].loc.start,\n        });\n      }\n    } else if (node.phase === \"defer\") {\n      if (singleBindingType !== \"ImportNamespaceSpecifier\") {\n        this.raise(Errors.DeferImportRequiresNamespace, {\n          at: specifiers[0].loc.start,\n        });\n      }\n    } else if (node.module) {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, {\n          at: specifiers[0].loc.start,\n        });\n      }\n      if (node.assertions?.length > 0) {\n        this.raise(Errors.ImportReflectionHasAssertion, {\n          at: node.specifiers[0].loc.start,\n        });\n      }\n    }\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error specifiers may not index node\n      const { specifiers } = node;\n      if (specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  isPotentialImportPhase(isExport: boolean): boolean {\n    if (isExport) return false;\n    return (\n      this.isContextual(tt._source) ||\n      this.isContextual(tt._defer) ||\n      this.isContextual(tt._module)\n    );\n  }\n\n  applyImportPhase(\n    node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n    isExport: boolean,\n    phase: string | null,\n    loc?: Position,\n  ): void {\n    if (isExport) {\n      if (!process.env.IS_PUBLISH) {\n        if (phase === \"module\" || phase === \"source\") {\n          throw new Error(\n            `Assertion failure: export declarations do not support the '${phase}' phase.`,\n          );\n        }\n      }\n      return;\n    }\n\n    if (phase === \"module\") {\n      this.expectPlugin(\"importReflection\", loc);\n      (node as N.ImportDeclaration).module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      (node as N.ImportDeclaration).module = false;\n    }\n\n    if (phase === \"source\") {\n      this.expectPlugin(\"sourcePhaseImports\", loc);\n      (node as N.ImportDeclaration).phase = \"source\";\n    } else if (phase === \"defer\") {\n      this.expectPlugin(\"deferredImportEvaluation\", loc);\n      (node as N.ImportDeclaration).phase = \"defer\";\n    } else if (this.hasPlugin(\"sourcePhaseImports\")) {\n      (node as N.ImportDeclaration).phase = null;\n    }\n  }\n\n  /*\n   * Parse `module` in `import module x from \"x\"`, disambiguating\n   * `import module from \"x\"` and `import module from from \"x\"`.\n   *\n   * This function might return an identifier representing the `module`\n   * if it eats `module` and then discovers that it was the default import\n   * binding and not the import reflection.\n   *\n   * This function is also used to parse `import type` and `import typeof`\n   * in the TS and Flow plugins.\n   *\n   * Note: the proposal has been updated to use `source` instead of `module`,\n   * but it has not been implemented yet.\n   */\n  parseMaybeImportPhase(\n    node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    isExport: boolean,\n  ): N.Identifier | null {\n    if (!this.isPotentialImportPhase(isExport)) {\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        null,\n      );\n      return null;\n    }\n\n    const phaseIdentifier = this.parseIdentifier(true);\n\n    const { type } = this.state;\n    const isImportPhase = tokenIsKeywordOrIdentifier(type)\n      ? // OK: import <phase> x from \"foo\";\n        // OK: import <phase> from from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // NO: import <phase> from 'foo';\n        // With the module declarations proposals, we will need further disambiguation\n        // for `import module from from;`.\n        type !== tt._from || this.lookaheadCharCode() === charCodes.lowercaseF\n      : // OK: import <phase> { x } from \"foo\";\n        // OK: import <phase> x from \"foo\";\n        // OK: import <phase> * as T from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // OK: import <phase> \"foo\";\n        // The last one is invalid, we will continue parsing and throw\n        // an error later\n        type !== tt.comma;\n\n    if (isImportPhase) {\n      this.resetPreviousIdentifierLeadingComments(phaseIdentifier);\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        phaseIdentifier.name,\n        phaseIdentifier.loc.start,\n      );\n      return null;\n    } else {\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        null,\n      );\n      // `<phase>` is a default binding, return it to the main import declaration parser\n      return phaseIdentifier;\n    }\n  }\n\n  isPrecedingIdImportPhase(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    phase: string,\n  ) {\n    const { type } = this.state;\n    return tokenIsIdentifier(type)\n      ? // OK: import <phase> x from \"foo\";\n        // OK: import <phase> from from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // NO: import <phase> from 'foo';\n        // With the module declarations proposals, we will need further disambiguation\n        // for `import module from from;`.\n        type !== tt._from || this.lookaheadCharCode() === charCodes.lowercaseF\n      : // OK: import <phase> { x } from \"foo\";\n        // OK: import <phase> x from \"foo\";\n        // OK: import <phase> * as T from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // OK: import <phase> \"foo\";\n        // The last one is invalid, we will continue parsing and throw\n        // an error later\n        type !== tt.comma;\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    if (this.match(tt.string)) {\n      // import '...'\n      return this.parseImportSourceAndAttributes(node);\n    }\n\n    return this.parseImportSpecifiersAndAfter(\n      node,\n      this.parseMaybeImportPhase(node, /* isExport */ false),\n    );\n  }\n\n  parseImportSpecifiersAndAfter(\n    this: Parser,\n    node: Undone<N.ImportDeclaration>,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): N.AnyImport {\n    node.specifiers = [];\n\n    // check if we have a default import like\n    // import React from \"react\";\n    const hasDefault = this.maybeParseDefaultImportSpecifier(\n      node,\n      maybeDefaultIdentifier,\n    );\n    /* we are checking if we do not have a default import, then it is obvious that we need named imports\n     * import { get } from \"axios\";\n     * but if we do have a default import\n     * we need to check if we have a comma after that and\n     * that is where this `|| this.eat` condition comes into play\n     */\n    const parseNext = !hasDefault || this.eat(tt.comma);\n    // if we do have to parse the next set of specifiers, we first check for star imports\n    // import React, * from \"react\";\n    const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n    // now we check if we need to parse the next imports\n    // but only if they are not importing * (everything)\n    if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n    this.expectContextual(tt._from);\n\n    return this.parseImportSourceAndAttributes(node);\n  }\n\n  parseImportSourceAndAttributes(\n    this: Parser,\n    node: Undone<N.ImportDeclaration>,\n  ): N.AnyImport {\n    node.specifiers ??= [];\n    node.source = this.parseImportSource();\n    this.maybeParseImportAttributes(node);\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    specifier: Undone<T>,\n    type: T[\"type\"],\n    bindingType: BindingTypes = BindingFlag.TYPE_LEXICAL,\n  ) {\n    this.checkLVal(specifier.local, {\n      in: { type },\n      binding: bindingType,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-attributes/#prod-WithEntries WithEntries}\n   */\n  parseImportAttributes(): N.ImportAttribute[] {\n    this.expect(tt.braceL);\n\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    this.expect(tt.braceR);\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   */\n  parseModuleAttributes() {\n    const attrs: N.ImportAttribute[] = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode<N.ImportAttribute>();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAttributes(\n    node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n  ) {\n    let attributes: N.ImportAttribute[];\n    let useWith = false;\n\n    // https://tc39.es/proposal-import-attributes/#prod-WithClause\n    if (this.match(tt._with)) {\n      if (\n        this.hasPrecedingLineBreak() &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      ) {\n        // This will be parsed as a with statement, and we will throw a\n        // better error about it not being supported in strict mode.\n        return;\n      }\n\n      this.next(); // eat `with`\n\n      if (!process.env.BABEL_8_BREAKING) {\n        if (this.hasPlugin(\"moduleAttributes\")) {\n          attributes = this.parseModuleAttributes();\n        } else {\n          this.expectImportAttributesPlugin();\n          attributes = this.parseImportAttributes();\n        }\n      } else {\n        this.expectImportAttributesPlugin();\n        attributes = this.parseImportAttributes();\n      }\n      useWith = true;\n    } else if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      if (this.hasPlugin(\"importAttributes\")) {\n        if (\n          this.getPluginOption(\"importAttributes\", \"deprecatedAssertSyntax\") !==\n          true\n        ) {\n          this.raise(Errors.ImportAttributesUseAssert, {\n            at: this.state.startLoc,\n          });\n        }\n        this.addExtra(node, \"deprecatedAssertSyntax\", true);\n      } else {\n        this.expectOnePlugin([\"importAttributes\", \"importAssertions\"]);\n      }\n      this.next(); // eat `assert`\n      attributes = this.parseImportAttributes();\n    } else if (\n      this.hasPlugin(\"importAttributes\") ||\n      this.hasPlugin(\"importAssertions\")\n    ) {\n      attributes = [];\n    } else if (!process.env.BABEL_8_BREAKING) {\n      if (this.hasPlugin(\"moduleAttributes\")) {\n        attributes = [];\n      } else return;\n    } else return;\n\n    if (!useWith && this.hasPlugin(\"importAssertions\")) {\n      node.assertions = attributes;\n    } else {\n      node.attributes = attributes;\n    }\n  }\n\n  maybeParseDefaultImportSpecifier(\n    node: Undone<N.ImportDeclaration>,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): boolean {\n    // import defaultObj, { x, y as z } from '...'\n    if (maybeDefaultIdentifier) {\n      const specifier = this.startNodeAtNode<N.ImportDefaultSpecifier>(\n        maybeDefaultIdentifier,\n      );\n      specifier.local = maybeDefaultIdentifier;\n      node.specifiers.push(\n        this.finishImportSpecifier(specifier, \"ImportDefaultSpecifier\"),\n      );\n      return true;\n    } else if (\n      // We allow keywords, and parseImportSpecifierLocal will report a recoverable error\n      tokenIsKeywordOrIdentifier(this.state.type)\n    ) {\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n        undefined,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    bindingType: BindingTypes | undefined,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(\n      specifier,\n      \"ImportSpecifier\",\n      bindingType,\n    );\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n", "import type { Options } from \"../options.ts\";\nimport type * as N from \"../types.ts\";\nimport type { PluginList } from \"../plugin-utils.ts\";\nimport { getOptions } from \"../options.ts\";\nimport StatementParser from \"./statement.ts\";\nimport ScopeHandler from \"../util/scope.ts\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(options: Options | undefined | null, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): {\n    new (...args: any): ScopeHandler;\n  } {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode() as N.File;\n    const program = this.startNode() as N.Program;\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n", "import type { Options } from \"./options.ts\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils.ts\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings.ts\";\nimport Parser from \"./parser/index.ts\";\n\nimport type { ExportedTokenType } from \"./tokenizer/types.ts\";\nimport {\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types.ts\";\n\nimport type { Expression, File } from \"./types.ts\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(\n    internalTokenTypes,\n  ) as (keyof InternalTokenTypes)[]) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: { new (...args: any): Parser } } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): {\n  new (...args: any): Parser;\n} {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      // @ts-expect-error todo(flow->ts)\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\nfunction SortTemplate(comparator) {\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot, false) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n  return doQuickSort;\n}\n\nfunction cloneSort(comparator) {\n  let template = SortTemplate.toString();\n  let templateFn = new Function(`return ${template}`)();\n  return templateFn(comparator);\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\n\nlet sortCache = new WeakMap();\nexports.quickSort = function (ary, comparator, start = 0) {\n  let doQuickSort = sortCache.get(comparator);\n  if (doQuickSort === void 0) {\n    doQuickSort = cloneSort(comparator);\n    sortCache.set(comparator, doQuickSort);\n  }\n  doQuickSort(ary, comparator, start, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    var boundCallback = aCallback.bind(context);\n    var names = this._names;\n    var sources = this._sources;\n    var sourceMapURL = this._sourceMapURL;\n\n    for (var i = 0, n = mappings.length; i < n; i++) {\n      var mapping = mappings[i];\n      var source = mapping.source === null ? null : sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, sourceMapURL);\n      boundCallback({\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : names.at(mapping.name)\n      });\n    }\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\n\nconst compareGenerated = util.compareByGeneratedPositionsDeflatedNoLine;\nfunction sortGenerated(array, start) {\n  let l = array.length;\n  let n = array.length - start;\n  if (n <= 1) {\n    return;\n  } else if (n == 2) {\n    let a = array[start];\n    let b = array[start + 1];\n    if (compareGenerated(a, b) > 0) {\n      array[start] = b;\n      array[start + 1] = a;\n    }\n  } else if (n < 20) {\n    for (let i = start; i < l; i++) {\n      for (let j = i; j > start; j--) {\n        let a = array[j - 1];\n        let b = array[j];\n        if (compareGenerated(a, b) <= 0) {\n          break;\n        }\n        array[j - 1] = b;\n        array[j] = a;\n      }\n    }\n  } else {\n    quickSort(array, compareGenerated, start);\n  }\n}\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    let subarrayStart = 0;\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n\n        sortGenerated(generatedMappings, subarrayStart);\n        subarrayStart = generatedMappings.length;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = [];\n        while (index < end) {\n          base64VLQ.decode(aStr, index, temp);\n          value = temp.value;\n          index = temp.rest;\n          segment.push(value);\n        }\n\n        if (segment.length === 2) {\n          throw new Error('Found a source, but no line and column');\n        }\n\n        if (segment.length === 3) {\n          throw new Error('Found a source and line, but no column');\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          let currentSource = mapping.source;\n          while (originalMappings.length <= currentSource) {\n            originalMappings.push(null);\n          }\n          if (originalMappings[currentSource] === null) {\n            originalMappings[currentSource] = [];\n          }\n          originalMappings[currentSource].push(mapping);\n        }\n      }\n    }\n\n    sortGenerated(generatedMappings, subarrayStart);\n    this.__generatedMappings = generatedMappings;\n\n    for (var i = 0; i < originalMappings.length; i++) {\n      if (originalMappings[i] != null) {\n        quickSort(originalMappings[i], util.compareByOriginalPositionsNoSource);\n      }\n    }\n    this.__originalMappings = [].concat(...originalMappings);\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.estreeWalker = {}));\n}(this, (function (exports) { 'use strict';\n\n\t// @ts-check\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\n\t/** @typedef {{\n\t\tskip: () => void;\n\t\tremove: () => void;\n\t\treplace: (node: BaseNode) => void;\n\t}} WalkerContext */\n\n\tclass WalkerBase {\n\t\tconstructor() {\n\t\t\t/** @type {boolean} */\n\t\t\tthis.should_skip = false;\n\n\t\t\t/** @type {boolean} */\n\t\t\tthis.should_remove = false;\n\n\t\t\t/** @type {BaseNode | null} */\n\t\t\tthis.replacement = null;\n\n\t\t\t/** @type {WalkerContext} */\n\t\t\tthis.context = {\n\t\t\t\tskip: () => (this.should_skip = true),\n\t\t\t\tremove: () => (this.should_remove = true),\n\t\t\t\treplace: (node) => (this.replacement = node)\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {any} parent\n\t\t * @param {string} prop\n\t\t * @param {number} index\n\t\t * @param {BaseNode} node\n\t\t */\n\t\treplace(parent, prop, index, node) {\n\t\t\tif (parent) {\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tparent[prop][index] = node;\n\t\t\t\t} else {\n\t\t\t\t\tparent[prop] = node;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {any} parent\n\t\t * @param {string} prop\n\t\t * @param {number} index\n\t\t */\n\t\tremove(parent, prop, index) {\n\t\t\tif (parent) {\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t\t} else {\n\t\t\t\t\tdelete parent[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n\t/** @typedef {(\n\t *    this: WalkerContext,\n\t *    node: BaseNode,\n\t *    parent: BaseNode,\n\t *    key: string,\n\t *    index: number\n\t * ) => void} SyncHandler */\n\n\tclass SyncWalker extends WalkerBase {\n\t\t/**\n\t\t *\n\t\t * @param {SyncHandler} enter\n\t\t * @param {SyncHandler} leave\n\t\t */\n\t\tconstructor(enter, leave) {\n\t\t\tsuper();\n\n\t\t\t/** @type {SyncHandler} */\n\t\t\tthis.enter = enter;\n\n\t\t\t/** @type {SyncHandler} */\n\t\t\tthis.leave = leave;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {BaseNode} node\n\t\t * @param {BaseNode} parent\n\t\t * @param {string} [prop]\n\t\t * @param {number} [index]\n\t\t * @returns {BaseNode}\n\t\t */\n\t\tvisit(node, parent, prop, index) {\n\t\t\tif (node) {\n\t\t\t\tif (this.enter) {\n\t\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tthis.should_skip = false;\n\t\t\t\t\tthis.should_remove = false;\n\t\t\t\t\tthis.replacement = null;\n\n\t\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\t\tif (skipped) return node;\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\n\t\t\t\tfor (const key in node) {\n\t\t\t\t\tconst value = node[key];\n\n\t\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.leave) {\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tthis.replacement = null;\n\t\t\t\t\tthis.should_remove = false;\n\n\t\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.replacement = _replacement;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./walker').WalkerContext} WalkerContext */\n\n\t/** @typedef {(\n\t *    this: WalkerContext,\n\t *    node: BaseNode,\n\t *    parent: BaseNode,\n\t *    key: string,\n\t *    index: number\n\t * ) => Promise<void>} AsyncHandler */\n\n\tclass AsyncWalker extends WalkerBase {\n\t\t/**\n\t\t *\n\t\t * @param {AsyncHandler} enter\n\t\t * @param {AsyncHandler} leave\n\t\t */\n\t\tconstructor(enter, leave) {\n\t\t\tsuper();\n\n\t\t\t/** @type {AsyncHandler} */\n\t\t\tthis.enter = enter;\n\n\t\t\t/** @type {AsyncHandler} */\n\t\t\tthis.leave = leave;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {BaseNode} node\n\t\t * @param {BaseNode} parent\n\t\t * @param {string} [prop]\n\t\t * @param {number} [index]\n\t\t * @returns {Promise<BaseNode>}\n\t\t */\n\t\tasync visit(node, parent, prop, index) {\n\t\t\tif (node) {\n\t\t\t\tif (this.enter) {\n\t\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tthis.should_skip = false;\n\t\t\t\t\tthis.should_remove = false;\n\t\t\t\t\tthis.replacement = null;\n\n\t\t\t\t\tawait this.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\t\tif (skipped) return node;\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\n\t\t\t\tfor (const key in node) {\n\t\t\t\t\tconst value = node[key];\n\n\t\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\t\tif (!(await this.visit(value[i], node, key, i))) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\t\tawait this.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.leave) {\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tthis.replacement = null;\n\t\t\t\t\tthis.should_remove = false;\n\n\t\t\t\t\tawait this.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.replacement = _replacement;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n\t/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n\t/**\n\t *\n\t * @param {BaseNode} ast\n\t * @param {{\n\t *   enter?: SyncHandler\n\t *   leave?: SyncHandler\n\t * }} walker\n\t * @returns {BaseNode}\n\t */\n\tfunction walk(ast, { enter, leave }) {\n\t\tconst instance = new SyncWalker(enter, leave);\n\t\treturn instance.visit(ast, null);\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} ast\n\t * @param {{\n\t *   enter?: AsyncHandler\n\t *   leave?: AsyncHandler\n\t * }} walker\n\t * @returns {Promise<BaseNode>}\n\t */\n\tasync function asyncWalk(ast, { enter, leave }) {\n\t\tconst instance = new AsyncWalker(enter, leave);\n\t\treturn await instance.visit(ast, null);\n\t}\n\n\texports.asyncWalk = asyncWalk;\n\texports.walk = walk;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\nvar parser = require('@babel/parser');\nvar sourceMapJs = require('source-map-js');\nvar estreeWalker = require('estree-walker');\n\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n  console.warn(`[Vue warn] ${msg.message}`);\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = (messages || errorMessages)[code] + (additionalMessage || ``) ;\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst errorMessages = {\n  // parse errors\n  [0]: \"Illegal comment.\",\n  [1]: \"CDATA section is allowed only in XML context.\",\n  [2]: \"Duplicate attribute.\",\n  [3]: \"End tag cannot have attributes.\",\n  [4]: \"Illegal '/' in tags.\",\n  [5]: \"Unexpected EOF in tag.\",\n  [6]: \"Unexpected EOF in CDATA section.\",\n  [7]: \"Unexpected EOF in comment.\",\n  [8]: \"Unexpected EOF in script.\",\n  [9]: \"Unexpected EOF in tag.\",\n  [10]: \"Incorrectly closed comment.\",\n  [11]: \"Incorrectly opened comment.\",\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13]: \"Attribute value was expected.\",\n  [14]: \"End tag name was expected.\",\n  [15]: \"Whitespace was expected.\",\n  [16]: \"Unexpected '<!--' in comment.\",\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\n  [19]: \"Attribute name cannot start with '='.\",\n  [21]: \"'<?' is allowed only in XML context.\",\n  [20]: `Unexpected null character.`,\n  [22]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23]: \"Invalid end tag.\",\n  [24]: \"Element is missing end tag.\",\n  [25]: \"Interpolation end sign was not found.\",\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\n  [26]: \"Legal directive name was expected.\",\n  // transform errors\n  [28]: `v-if/v-else-if is missing expression.`,\n  [29]: `v-if/else branches must use unique keys.`,\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31]: `v-for is missing expression.`,\n  [32]: `v-for has invalid expression.`,\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\n  [34]: `v-bind is missing expression.`,\n  [35]: `v-on is missing expression.`,\n  [36]: `Unexpected custom directive on <slot> outlet.`,\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\n  [38]: `Duplicate slot names found. `,\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\n  [40]: `v-slot can only be used on components or <template> tags.`,\n  [41]: `v-model is missing expression.`,\n  [42]: `v-model value must be a valid JavaScript member expression.`,\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45]: `Error parsing JavaScript expression: `,\n  [46]: `<KeepAlive> expects exactly one child component.`,\n  // generic errors\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48]: `ES module mode is not supported in this build of compiler.`,\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50]: `\"scopeId\" option is only supported in module mode.`,\n  // deprecations\n  [51]: `@vnode-* hooks in templates are deprecated. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support will be removed in 3.4.`,\n  [52]: `v-is=\"component-name\" has been deprecated. Use is=\"vue:component-name\" instead. v-is support will be removed in 3.4.`,\n  // just to fulfill types\n  [53]: ``\n};\n\nconst FRAGMENT = Symbol(`Fragment` );\nconst TELEPORT = Symbol(`Teleport` );\nconst SUSPENSE = Symbol(`Suspense` );\nconst KEEP_ALIVE = Symbol(`KeepAlive` );\nconst BASE_TRANSITION = Symbol(`BaseTransition` );\nconst OPEN_BLOCK = Symbol(`openBlock` );\nconst CREATE_BLOCK = Symbol(`createBlock` );\nconst CREATE_ELEMENT_BLOCK = Symbol(`createElementBlock` );\nconst CREATE_VNODE = Symbol(`createVNode` );\nconst CREATE_ELEMENT_VNODE = Symbol(`createElementVNode` );\nconst CREATE_COMMENT = Symbol(`createCommentVNode` );\nconst CREATE_TEXT = Symbol(`createTextVNode` );\nconst CREATE_STATIC = Symbol(`createStaticVNode` );\nconst RESOLVE_COMPONENT = Symbol(`resolveComponent` );\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  `resolveDynamicComponent` \n);\nconst RESOLVE_DIRECTIVE = Symbol(`resolveDirective` );\nconst RESOLVE_FILTER = Symbol(`resolveFilter` );\nconst WITH_DIRECTIVES = Symbol(`withDirectives` );\nconst RENDER_LIST = Symbol(`renderList` );\nconst RENDER_SLOT = Symbol(`renderSlot` );\nconst CREATE_SLOTS = Symbol(`createSlots` );\nconst TO_DISPLAY_STRING = Symbol(`toDisplayString` );\nconst MERGE_PROPS = Symbol(`mergeProps` );\nconst NORMALIZE_CLASS = Symbol(`normalizeClass` );\nconst NORMALIZE_STYLE = Symbol(`normalizeStyle` );\nconst NORMALIZE_PROPS = Symbol(`normalizeProps` );\nconst GUARD_REACTIVE_PROPS = Symbol(`guardReactiveProps` );\nconst TO_HANDLERS = Symbol(`toHandlers` );\nconst CAMELIZE = Symbol(`camelize` );\nconst CAPITALIZE = Symbol(`capitalize` );\nconst TO_HANDLER_KEY = Symbol(`toHandlerKey` );\nconst SET_BLOCK_TRACKING = Symbol(`setBlockTracking` );\nconst PUSH_SCOPE_ID = Symbol(`pushScopeId` );\nconst POP_SCOPE_ID = Symbol(`popScopeId` );\nconst WITH_CTX = Symbol(`withCtx` );\nconst UNREF = Symbol(`unref` );\nconst IS_REF = Symbol(`isRef` );\nconst WITH_MEMO = Symbol(`withMemo` );\nconst IS_MEMO_SAME = Symbol(`isMemoSame` );\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\n    helperNameMap[s] = helpers[s];\n  });\n}\n\nconst locStub = {\n  source: \"\",\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 }\n};\nfunction createRoot(children, loc = locStub) {\n  return {\n    type: 0,\n    children,\n    helpers: /* @__PURE__ */ new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: 0,\n    temps: 0,\n    codegenNode: void 0,\n    loc\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16,\n    loc: locStub,\n    key: shared.isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\n  return {\n    type: 4,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5,\n    loc,\n    content: shared.isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, isVNode = false) {\n  return {\n    type: 20,\n    index,\n    value,\n    isVNode,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26,\n    returns,\n    loc: locStub\n  };\n}\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\n\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\nconst isBuiltInType = (tag, expected) => tag === expected || tag === shared.hyphenate(expected);\nfunction isCoreComponent(tag) {\n  if (isBuiltInType(tag, \"Teleport\")) {\n    return TELEPORT;\n  } else if (isBuiltInType(tag, \"Suspense\")) {\n    return SUSPENSE;\n  } else if (isBuiltInType(tag, \"KeepAlive\")) {\n    return KEEP_ALIVE;\n  } else if (isBuiltInType(tag, \"BaseTransition\")) {\n    return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\nconst isMemberExpressionBrowser = (path) => {\n  path = path.trim().replace(whitespaceRE, (s) => s.trim());\n  let state = 0 /* inMemberExp */;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0 /* inMemberExp */:\n        if (char === \"[\") {\n          stateStack.push(state);\n          state = 1 /* inBrackets */;\n          currentOpenBracketCount++;\n        } else if (char === \"(\") {\n          stateStack.push(state);\n          state = 2 /* inParens */;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1 /* inBrackets */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2 /* inParens */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3 /* inString */:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = (path, context) => {\n  try {\n    let ret = parser.parseExpression(path, {\n      plugins: context.expressionPlugins\n    });\n    if (ret.type === \"TSAsExpression\" || ret.type === \"TSTypeAssertion\") {\n      ret = ret.expression;\n    }\n    return ret.type === \"MemberExpression\" || ret.type === \"OptionalMemberExpression\" || ret.type === \"Identifier\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isMemberExpression = isMemberExpressionNode;\nfunction getInnerRange(loc, offset, length) {\n  const source = loc.source.slice(offset, offset + length);\n  const newLoc = {\n    source,\n    start: advancePositionWithClone(loc.start, loc.source, offset),\n    end: loc.end\n  };\n  if (length != null) {\n    newLoc.end = advancePositionWithClone(\n      loc.start,\n      loc.source,\n      offset + length\n    );\n  }\n  return newLoc;\n}\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(\n    shared.extend({}, pos),\n    source,\n    numberOfCharacters\n  );\n}\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 && (allowEmpty || p.exp) && (shared.isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (dynamicOnly)\n        continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(\n    (p) => p.type === 7 && p.name === \"bind\" && (!p.arg || // v-bind=\"obj\"\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\n    !p.arg.isStatic)\n    // v-bind:[foo]\n  );\n}\nfunction isText$1(node) {\n  return node.type === 5 || node.type === 2;\n}\nfunction isVSlot(p) {\n  return p.type === 7 && p.name === \"slot\";\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 && node.tagType === 3;\n}\nfunction isSlotOutlet(node) {\n  return node.type === 1 && node.tagType === 2;\n}\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !shared.isString(props) && props.type === 14) {\n    const callee = props.callee;\n    if (!shared.isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0],\n        callPath.concat(props)\n      );\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  let props = node.type === 13 ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !shared.isString(props) && props.type === 14) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || shared.isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14) {\n    const first = props.arguments[0];\n    if (!shared.isString(first) && first.type === 15) {\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props\n        ]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ]);\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(\n      (p) => p.key.type === 4 && p.key.content === propKeyName\n    );\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 11:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 9:\n      return node.branches.some((b) => hasScopeRef(b, ids));\n    case 10:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 4:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8:\n      return node.children.some((c) => shared.isObject(c) && hasScopeRef(c, ids));\n    case 5:\n    case 12:\n      return hasScopeRef(node.content, ids);\n    case 2:\n    case 3:\n      return false;\n    default:\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"]: {\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_PROP\"]: {\n    message: `.prop modifier for v-bind has been removed and no longer necessary. Vue 3 will automatically set a binding as DOM property when appropriate.`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTER\"]: {\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, context) {\n  const config = context.options ? context.options.compatConfig : context.compatConfig;\n  const value = config && config[key];\n  if (key === \"MODE\") {\n    return value || 3;\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue(\"MODE\", context);\n  const value = getCompatValue(key, context);\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  if (enabled) {\n    warnDeprecation(key, context, loc, ...args);\n  }\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === \"suppress-warning\") {\n    return;\n  }\n  const { message, link } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc)\n    err.loc = loc;\n  context.onWarn(err);\n}\n\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\nconst decodeMap = {\n  gt: \">\",\n  lt: \"<\",\n  amp: \"&\",\n  apos: \"'\",\n  quot: '\"'\n};\nconst defaultParserOptions = {\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0,\n  getTextMode: () => 0,\n  isVoidTag: shared.NO,\n  isPreTag: shared.NO,\n  isCustomElement: shared.NO,\n  decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: true\n};\nfunction baseParse(content, options = {}) {\n  const context = createParserContext(content, options);\n  const start = getCursor(context);\n  return createRoot(\n    parseChildren(context, 0, []),\n    getSelection(context, start)\n  );\n}\nfunction createParserContext(content, rawOptions) {\n  const options = shared.extend({}, defaultParserOptions);\n  let key;\n  for (key in rawOptions) {\n    options[key] = rawOptions[key] === void 0 ? defaultParserOptions[key] : rawOptions[key];\n  }\n  return {\n    options,\n    column: 1,\n    line: 1,\n    offset: 0,\n    originalSource: content,\n    source: content,\n    inPre: false,\n    inVPre: false,\n    onWarn: options.onWarn\n  };\n}\nfunction parseChildren(context, mode, ancestors) {\n  const parent = last(ancestors);\n  const ns = parent ? parent.ns : 0;\n  const nodes = [];\n  while (!isEnd(context, mode, ancestors)) {\n    const s = context.source;\n    let node = void 0;\n    if (mode === 0 || mode === 1) {\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\n        node = parseInterpolation(context, mode);\n      } else if (mode === 0 && s[0] === \"<\") {\n        if (s.length === 1) {\n          emitError(context, 5, 1);\n        } else if (s[1] === \"!\") {\n          if (startsWith(s, \"<!--\")) {\n            node = parseComment(context);\n          } else if (startsWith(s, \"<!DOCTYPE\")) {\n            node = parseBogusComment(context);\n          } else if (startsWith(s, \"<![CDATA[\")) {\n            if (ns !== 0) {\n              node = parseCDATA(context, ancestors);\n            } else {\n              emitError(context, 1);\n              node = parseBogusComment(context);\n            }\n          } else {\n            emitError(context, 11);\n            node = parseBogusComment(context);\n          }\n        } else if (s[1] === \"/\") {\n          if (s.length === 2) {\n            emitError(context, 5, 2);\n          } else if (s[2] === \">\") {\n            emitError(context, 14, 2);\n            advanceBy(context, 3);\n            continue;\n          } else if (/[a-z]/i.test(s[2])) {\n            emitError(context, 23);\n            parseTag(context, 1 /* End */, parent);\n            continue;\n          } else {\n            emitError(\n              context,\n              12,\n              2\n            );\n            node = parseBogusComment(context);\n          }\n        } else if (/[a-z]/i.test(s[1])) {\n          node = parseElement(context, ancestors);\n          if (isCompatEnabled(\n            \"COMPILER_NATIVE_TEMPLATE\",\n            context\n          ) && node && node.tag === \"template\" && !node.props.some(\n            (p) => p.type === 7 && isSpecialTemplateDirective(p.name)\n          )) {\n            warnDeprecation(\n              \"COMPILER_NATIVE_TEMPLATE\",\n              context,\n              node.loc\n            );\n            node = node.children;\n          }\n        } else if (s[1] === \"?\") {\n          emitError(\n            context,\n            21,\n            1\n          );\n          node = parseBogusComment(context);\n        } else {\n          emitError(context, 12, 1);\n        }\n      }\n    }\n    if (!node) {\n      node = parseText(context, mode);\n    }\n    if (shared.isArray(node)) {\n      for (let i = 0; i < node.length; i++) {\n        pushNode(nodes, node[i]);\n      }\n    } else {\n      pushNode(nodes, node);\n    }\n  }\n  let removedWhitespace = false;\n  if (mode !== 2 && mode !== 1) {\n    const shouldCondense = context.options.whitespace !== \"preserve\";\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if (node.type === 2) {\n        if (!context.inPre) {\n          if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n            const prev = nodes[i - 1];\n            const next = nodes[i + 1];\n            if (!prev || !next || shouldCondense && (prev.type === 3 && next.type === 3 || prev.type === 3 && next.type === 1 || prev.type === 1 && next.type === 3 || prev.type === 1 && next.type === 1 && /[\\r\\n]/.test(node.content))) {\n              removedWhitespace = true;\n              nodes[i] = null;\n            } else {\n              node.content = \" \";\n            }\n          } else if (shouldCondense) {\n            node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, \" \");\n          }\n        } else {\n          node.content = node.content.replace(/\\r\\n/g, \"\\n\");\n        }\n      } else if (node.type === 3 && !context.options.comments) {\n        removedWhitespace = true;\n        nodes[i] = null;\n      }\n    }\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\n      const first = nodes[0];\n      if (first && first.type === 2) {\n        first.content = first.content.replace(/^\\r?\\n/, \"\");\n      }\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction pushNode(nodes, node) {\n  if (node.type === 2) {\n    const prev = last(nodes);\n    if (prev && prev.type === 2 && prev.loc.end.offset === node.loc.start.offset) {\n      prev.content += node.content;\n      prev.loc.end = node.loc.end;\n      prev.loc.source += node.loc.source;\n      return;\n    }\n  }\n  nodes.push(node);\n}\nfunction parseCDATA(context, ancestors) {\n  advanceBy(context, 9);\n  const nodes = parseChildren(context, 3, ancestors);\n  if (context.source.length === 0) {\n    emitError(context, 6);\n  } else {\n    advanceBy(context, 3);\n  }\n  return nodes;\n}\nfunction parseComment(context) {\n  const start = getCursor(context);\n  let content;\n  const match = /--(\\!)?>/.exec(context.source);\n  if (!match) {\n    content = context.source.slice(4);\n    advanceBy(context, context.source.length);\n    emitError(context, 7);\n  } else {\n    if (match.index <= 3) {\n      emitError(context, 0);\n    }\n    if (match[1]) {\n      emitError(context, 10);\n    }\n    content = context.source.slice(4, match.index);\n    const s = context.source.slice(0, match.index);\n    let prevIndex = 1, nestedIndex = 0;\n    while ((nestedIndex = s.indexOf(\"<!--\", prevIndex)) !== -1) {\n      advanceBy(context, nestedIndex - prevIndex + 1);\n      if (nestedIndex + 4 < s.length) {\n        emitError(context, 16);\n      }\n      prevIndex = nestedIndex + 1;\n    }\n    advanceBy(context, match.index + match[0].length - prevIndex + 1);\n  }\n  return {\n    type: 3,\n    content,\n    loc: getSelection(context, start)\n  };\n}\nfunction parseBogusComment(context) {\n  const start = getCursor(context);\n  const contentStart = context.source[1] === \"?\" ? 1 : 2;\n  let content;\n  const closeIndex = context.source.indexOf(\">\");\n  if (closeIndex === -1) {\n    content = context.source.slice(contentStart);\n    advanceBy(context, context.source.length);\n  } else {\n    content = context.source.slice(contentStart, closeIndex);\n    advanceBy(context, closeIndex + 1);\n  }\n  return {\n    type: 3,\n    content,\n    loc: getSelection(context, start)\n  };\n}\nfunction parseElement(context, ancestors) {\n  const wasInPre = context.inPre;\n  const wasInVPre = context.inVPre;\n  const parent = last(ancestors);\n  const element = parseTag(context, 0 /* Start */, parent);\n  const isPreBoundary = context.inPre && !wasInPre;\n  const isVPreBoundary = context.inVPre && !wasInVPre;\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\n    if (isPreBoundary) {\n      context.inPre = false;\n    }\n    if (isVPreBoundary) {\n      context.inVPre = false;\n    }\n    return element;\n  }\n  ancestors.push(element);\n  const mode = context.options.getTextMode(element, parent);\n  const children = parseChildren(context, mode, ancestors);\n  ancestors.pop();\n  {\n    const inlineTemplateProp = element.props.find(\n      (p) => p.type === 6 && p.name === \"inline-template\"\n    );\n    if (inlineTemplateProp && checkCompatEnabled(\n      \"COMPILER_INLINE_TEMPLATE\",\n      context,\n      inlineTemplateProp.loc\n    )) {\n      const loc = getSelection(context, element.loc.end);\n      inlineTemplateProp.value = {\n        type: 2,\n        content: loc.source,\n        loc\n      };\n    }\n  }\n  element.children = children;\n  if (startsWithEndTagOpen(context.source, element.tag)) {\n    parseTag(context, 1 /* End */, parent);\n  } else {\n    emitError(context, 24, 0, element.loc.start);\n    if (context.source.length === 0 && element.tag.toLowerCase() === \"script\") {\n      const first = children[0];\n      if (first && startsWith(first.loc.source, \"<!--\")) {\n        emitError(context, 8);\n      }\n    }\n  }\n  element.loc = getSelection(context, element.loc.start);\n  if (isPreBoundary) {\n    context.inPre = false;\n  }\n  if (isVPreBoundary) {\n    context.inVPre = false;\n  }\n  return element;\n}\nconst isSpecialTemplateDirective = /* @__PURE__ */ shared.makeMap(\n  `if,else,else-if,for,slot`\n);\nfunction parseTag(context, type, parent) {\n  const start = getCursor(context);\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\n  const tag = match[1];\n  const ns = context.options.getNamespace(tag, parent);\n  advanceBy(context, match[0].length);\n  advanceSpaces(context);\n  const cursor = getCursor(context);\n  const currentSource = context.source;\n  if (context.options.isPreTag(tag)) {\n    context.inPre = true;\n  }\n  let props = parseAttributes(context, type);\n  if (type === 0 /* Start */ && !context.inVPre && props.some((p) => p.type === 7 && p.name === \"pre\")) {\n    context.inVPre = true;\n    shared.extend(context, cursor);\n    context.source = currentSource;\n    props = parseAttributes(context, type).filter((p) => p.name !== \"v-pre\");\n  }\n  let isSelfClosing = false;\n  if (context.source.length === 0) {\n    emitError(context, 9);\n  } else {\n    isSelfClosing = startsWith(context.source, \"/>\");\n    if (type === 1 /* End */ && isSelfClosing) {\n      emitError(context, 4);\n    }\n    advanceBy(context, isSelfClosing ? 2 : 1);\n  }\n  if (type === 1 /* End */) {\n    return;\n  }\n  if (isCompatEnabled(\n    \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n    context\n  )) {\n    let hasIf = false;\n    let hasFor = false;\n    for (let i = 0; i < props.length; i++) {\n      const p = props[i];\n      if (p.type === 7) {\n        if (p.name === \"if\") {\n          hasIf = true;\n        } else if (p.name === \"for\") {\n          hasFor = true;\n        }\n      }\n      if (hasIf && hasFor) {\n        warnDeprecation(\n          \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n          context,\n          getSelection(context, start)\n        );\n        break;\n      }\n    }\n  }\n  let tagType = 0;\n  if (!context.inVPre) {\n    if (tag === \"slot\") {\n      tagType = 2;\n    } else if (tag === \"template\") {\n      if (props.some(\n        (p) => p.type === 7 && isSpecialTemplateDirective(p.name)\n      )) {\n        tagType = 3;\n      }\n    } else if (isComponent(tag, props, context)) {\n      tagType = 1;\n    }\n  }\n  return {\n    type: 1,\n    ns,\n    tag,\n    tagType,\n    props,\n    isSelfClosing,\n    children: [],\n    loc: getSelection(context, start),\n    codegenNode: void 0\n    // to be created during transform phase\n  };\n}\nfunction isComponent(tag, props, context) {\n  const options = context.options;\n  if (options.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === \"component\" || /^[A-Z]/.test(tag) || isCoreComponent(tag) || options.isBuiltInComponent && options.isBuiltInComponent(tag) || options.isNativeTag && !options.isNativeTag(tag)) {\n    return true;\n  }\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6) {\n      if (p.name === \"is\" && p.value) {\n        if (p.value.content.startsWith(\"vue:\")) {\n          return true;\n        } else if (checkCompatEnabled(\n          \"COMPILER_IS_ON_ELEMENT\",\n          context,\n          p.loc\n        )) {\n          return true;\n        }\n      }\n    } else {\n      if (p.name === \"is\") {\n        return true;\n      } else if (\n        // :is on plain element - only treat as component in compat mode\n        p.name === \"bind\" && isStaticArgOf(p.arg, \"is\") && true && checkCompatEnabled(\n          \"COMPILER_IS_ON_ELEMENT\",\n          context,\n          p.loc\n        )\n      ) {\n        return true;\n      }\n    }\n  }\n}\nfunction parseAttributes(context, type) {\n  const props = [];\n  const attributeNames = /* @__PURE__ */ new Set();\n  while (context.source.length > 0 && !startsWith(context.source, \">\") && !startsWith(context.source, \"/>\")) {\n    if (startsWith(context.source, \"/\")) {\n      emitError(context, 22);\n      advanceBy(context, 1);\n      advanceSpaces(context);\n      continue;\n    }\n    if (type === 1 /* End */) {\n      emitError(context, 3);\n    }\n    const attr = parseAttribute(context, attributeNames);\n    if (attr.type === 6 && attr.value && attr.name === \"class\") {\n      attr.value.content = attr.value.content.replace(/\\s+/g, \" \").trim();\n    }\n    if (type === 0 /* Start */) {\n      props.push(attr);\n    }\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\n      emitError(context, 15);\n    }\n    advanceSpaces(context);\n  }\n  return props;\n}\nfunction parseAttribute(context, nameSet) {\n  var _a;\n  const start = getCursor(context);\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\n  const name = match[0];\n  if (nameSet.has(name)) {\n    emitError(context, 2);\n  }\n  nameSet.add(name);\n  if (name[0] === \"=\") {\n    emitError(context, 19);\n  }\n  {\n    const pattern = /[\"'<]/g;\n    let m;\n    while (m = pattern.exec(name)) {\n      emitError(\n        context,\n        17,\n        m.index\n      );\n    }\n  }\n  advanceBy(context, name.length);\n  let value = void 0;\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n    advanceSpaces(context);\n    advanceBy(context, 1);\n    advanceSpaces(context);\n    value = parseAttributeValue(context);\n    if (!value) {\n      emitError(context, 13);\n    }\n  }\n  const loc = getSelection(context, start);\n  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\n    const match2 = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(\n      name\n    );\n    let isPropShorthand = startsWith(name, \".\");\n    let dirName = match2[1] || (isPropShorthand || startsWith(name, \":\") ? \"bind\" : startsWith(name, \"@\") ? \"on\" : \"slot\");\n    let arg;\n    if (match2[2]) {\n      const isSlot = dirName === \"slot\";\n      const startOffset = name.lastIndexOf(\n        match2[2],\n        name.length - (((_a = match2[3]) == null ? void 0 : _a.length) || 0)\n      );\n      const loc2 = getSelection(\n        context,\n        getNewPosition(context, start, startOffset),\n        getNewPosition(\n          context,\n          start,\n          startOffset + match2[2].length + (isSlot && match2[3] || \"\").length\n        )\n      );\n      let content = match2[2];\n      let isStatic = true;\n      if (content.startsWith(\"[\")) {\n        isStatic = false;\n        if (!content.endsWith(\"]\")) {\n          emitError(\n            context,\n            27\n          );\n          content = content.slice(1);\n        } else {\n          content = content.slice(1, content.length - 1);\n        }\n      } else if (isSlot) {\n        content += match2[3] || \"\";\n      }\n      arg = {\n        type: 4,\n        content,\n        isStatic,\n        constType: isStatic ? 3 : 0,\n        loc: loc2\n      };\n    }\n    if (value && value.isQuoted) {\n      const valueLoc = value.loc;\n      valueLoc.start.offset++;\n      valueLoc.start.column++;\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\n      valueLoc.source = valueLoc.source.slice(1, -1);\n    }\n    const modifiers = match2[3] ? match2[3].slice(1).split(\".\") : [];\n    if (isPropShorthand)\n      modifiers.push(\"prop\");\n    if (dirName === \"bind\" && arg) {\n      if (modifiers.includes(\"sync\") && checkCompatEnabled(\n        \"COMPILER_V_BIND_SYNC\",\n        context,\n        loc,\n        arg.loc.source\n      )) {\n        dirName = \"model\";\n        modifiers.splice(modifiers.indexOf(\"sync\"), 1);\n      }\n      if (modifiers.includes(\"prop\")) {\n        checkCompatEnabled(\n          \"COMPILER_V_BIND_PROP\",\n          context,\n          loc\n        );\n      }\n    }\n    return {\n      type: 7,\n      name: dirName,\n      exp: value && {\n        type: 4,\n        content: value.content,\n        isStatic: false,\n        // Treat as non-constant by default. This can be potentially set to\n        // other values by `transformExpression` to make it eligible for hoisting.\n        constType: 0,\n        loc: value.loc\n      },\n      arg,\n      modifiers,\n      loc\n    };\n  }\n  if (!context.inVPre && startsWith(name, \"v-\")) {\n    emitError(context, 26);\n  }\n  return {\n    type: 6,\n    name,\n    value: value && {\n      type: 2,\n      content: value.content,\n      loc: value.loc\n    },\n    loc\n  };\n}\nfunction parseAttributeValue(context) {\n  const start = getCursor(context);\n  let content;\n  const quote = context.source[0];\n  const isQuoted = quote === `\"` || quote === `'`;\n  if (isQuoted) {\n    advanceBy(context, 1);\n    const endIndex = context.source.indexOf(quote);\n    if (endIndex === -1) {\n      content = parseTextData(\n        context,\n        context.source.length,\n        4\n      );\n    } else {\n      content = parseTextData(context, endIndex, 4);\n      advanceBy(context, 1);\n    }\n  } else {\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\n    if (!match) {\n      return void 0;\n    }\n    const unexpectedChars = /[\"'<=`]/g;\n    let m;\n    while (m = unexpectedChars.exec(match[0])) {\n      emitError(\n        context,\n        18,\n        m.index\n      );\n    }\n    content = parseTextData(context, match[0].length, 4);\n  }\n  return { content, isQuoted, loc: getSelection(context, start) };\n}\nfunction parseInterpolation(context, mode) {\n  const [open, close] = context.options.delimiters;\n  const closeIndex = context.source.indexOf(close, open.length);\n  if (closeIndex === -1) {\n    emitError(context, 25);\n    return void 0;\n  }\n  const start = getCursor(context);\n  advanceBy(context, open.length);\n  const innerStart = getCursor(context);\n  const innerEnd = getCursor(context);\n  const rawContentLength = closeIndex - open.length;\n  const rawContent = context.source.slice(0, rawContentLength);\n  const preTrimContent = parseTextData(context, rawContentLength, mode);\n  const content = preTrimContent.trim();\n  const startOffset = preTrimContent.indexOf(content);\n  if (startOffset > 0) {\n    advancePositionWithMutation(innerStart, rawContent, startOffset);\n  }\n  const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\n  advancePositionWithMutation(innerEnd, rawContent, endOffset);\n  advanceBy(context, close.length);\n  return {\n    type: 5,\n    content: {\n      type: 4,\n      isStatic: false,\n      // Set `isConstant` to false by default and will decide in transformExpression\n      constType: 0,\n      content,\n      loc: getSelection(context, innerStart, innerEnd)\n    },\n    loc: getSelection(context, start)\n  };\n}\nfunction parseText(context, mode) {\n  const endTokens = mode === 3 ? [\"]]>\"] : [\"<\", context.options.delimiters[0]];\n  let endIndex = context.source.length;\n  for (let i = 0; i < endTokens.length; i++) {\n    const index = context.source.indexOf(endTokens[i], 1);\n    if (index !== -1 && endIndex > index) {\n      endIndex = index;\n    }\n  }\n  const start = getCursor(context);\n  const content = parseTextData(context, endIndex, mode);\n  return {\n    type: 2,\n    content,\n    loc: getSelection(context, start)\n  };\n}\nfunction parseTextData(context, length, mode) {\n  const rawText = context.source.slice(0, length);\n  advanceBy(context, length);\n  if (mode === 2 || mode === 3 || !rawText.includes(\"&\")) {\n    return rawText;\n  } else {\n    return context.options.decodeEntities(\n      rawText,\n      mode === 4\n    );\n  }\n}\nfunction getCursor(context) {\n  const { column, line, offset } = context;\n  return { column, line, offset };\n}\nfunction getSelection(context, start, end) {\n  end = end || getCursor(context);\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset)\n  };\n}\nfunction last(xs) {\n  return xs[xs.length - 1];\n}\nfunction startsWith(source, searchString) {\n  return source.startsWith(searchString);\n}\nfunction advanceBy(context, numberOfCharacters) {\n  const { source } = context;\n  advancePositionWithMutation(context, source, numberOfCharacters);\n  context.source = source.slice(numberOfCharacters);\n}\nfunction advanceSpaces(context) {\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\n  if (match) {\n    advanceBy(context, match[0].length);\n  }\n}\nfunction getNewPosition(context, start, numberOfCharacters) {\n  return advancePositionWithClone(\n    start,\n    context.originalSource.slice(start.offset, numberOfCharacters),\n    numberOfCharacters\n  );\n}\nfunction emitError(context, code, offset, loc = getCursor(context)) {\n  if (offset) {\n    loc.offset += offset;\n    loc.column += offset;\n  }\n  context.options.onError(\n    createCompilerError(code, {\n      start: loc,\n      end: loc,\n      source: \"\"\n    })\n  );\n}\nfunction isEnd(context, mode, ancestors) {\n  const s = context.source;\n  switch (mode) {\n    case 0:\n      if (startsWith(s, \"</\")) {\n        for (let i = ancestors.length - 1; i >= 0; --i) {\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\n            return true;\n          }\n        }\n      }\n      break;\n    case 1:\n    case 2: {\n      const parent = last(ancestors);\n      if (parent && startsWithEndTagOpen(s, parent.tag)) {\n        return true;\n      }\n      break;\n    }\n    case 3:\n      if (startsWith(s, \"]]>\")) {\n        return true;\n      }\n      break;\n  }\n  return !s;\n}\nfunction startsWithEndTagOpen(source, tag) {\n  return startsWith(source, \"</\") && source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() && /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || \">\");\n}\n\nfunction hoistStatic(root, context) {\n  walk(\n    root,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0])\n  );\n}\nfunction isSingleElementRoot(root, child) {\n  const { children } = root;\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\n}\nfunction walk(node, context, doNotHoistNode = false) {\n  const { children } = node;\n  const originalCount = children.length;\n  let hoistedCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.type === 1 && child.tagType === 0) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType > 0) {\n        if (constantType >= 2) {\n          child.codegenNode.patchFlag = -1 + (` /* HOISTED */` );\n          child.codegenNode = context.hoist(child.codegenNode);\n          hoistedCount++;\n          continue;\n        }\n      } else {\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13) {\n          const flag = getPatchFlag(codegenNode);\n          if ((!flag || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    }\n    if (child.type === 1) {\n      const isComponent = child.tagType === 1;\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n      walk(child, context);\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11) {\n      walk(child, context, child.children.length === 1);\n    } else if (child.type === 9) {\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\n        walk(\n          child.branches[i2],\n          context,\n          child.branches[i2].children.length === 1\n        );\n      }\n    }\n  }\n  if (hoistedCount && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1 && node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && shared.isArray(node.codegenNode.children)) {\n    const hoisted = context.hoist(\n      createArrayExpression(node.codegenNode.children)\n    );\n    if (context.hmr) {\n      hoisted.content = `[...${hoisted.content}]`;\n    }\n    node.codegenNode.children = hoisted;\n  }\n}\nfunction getConstantType(node, context) {\n  const { constantCache } = context;\n  switch (node.type) {\n    case 1:\n      if (node.tagType !== 0) {\n        return 0;\n      }\n      const cached = constantCache.get(node);\n      if (cached !== void 0) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13) {\n        return 0;\n      }\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\") {\n        return 0;\n      }\n      const flag = getPatchFlag(codegenNode);\n      if (!flag) {\n        let returnType2 = 3;\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0) {\n          constantCache.set(node, 0);\n          return 0;\n        }\n        if (generatedPropsType < returnType2) {\n          returnType2 = generatedPropsType;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0) {\n            constantCache.set(node, 0);\n            return 0;\n          }\n          if (childType < returnType2) {\n            returnType2 = childType;\n          }\n        }\n        if (returnType2 > 1) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0) {\n                constantCache.set(node, 0);\n                return 0;\n              }\n              if (expType < returnType2) {\n                returnType2 = expType;\n              }\n            }\n          }\n        }\n        if (codegenNode.isBlock) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7) {\n              constantCache.set(node, 0);\n              return 0;\n            }\n          }\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\n          );\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType2);\n        return returnType2;\n      } else {\n        constantCache.set(node, 0);\n        return 0;\n      }\n    case 2:\n    case 3:\n      return 3;\n    case 9:\n    case 11:\n    case 10:\n      return 0;\n    case 5:\n    case 12:\n      return getConstantType(node.content, context);\n    case 4:\n      return node.constType;\n    case 8:\n      let returnType = 3;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (shared.isString(child) || shared.isSymbol(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0) {\n          return 0;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    default:\n      return 0;\n  }\n}\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 && !shared.isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14) {\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3;\n  const props = getNodeProps(node);\n  if (props && props.type === 15) {\n    const { properties } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14) {\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0;\n      }\n      if (valueType === 0) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13) {\n    return codegenNode.props;\n  }\n}\nfunction getPatchFlag(node) {\n  const flag = node.patchFlag;\n  return flag ? parseInt(flag, 10) : void 0;\n}\n\nfunction createTransformContext(root, {\n  filename = \"\",\n  prefixIdentifiers = false,\n  hoistStatic: hoistStatic2 = false,\n  hmr = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = shared.NOOP,\n  isCustomElement = shared.NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = shared.EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic: hoistStatic2,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: /* @__PURE__ */ new Map(),\n    components: /* @__PURE__ */ new Set(),\n    directives: /* @__PURE__ */ new Set(),\n    hoists: [],\n    imports: [],\n    constantCache: /* @__PURE__ */ new WeakMap(),\n    temps: 0,\n    cached: 0,\n    identifiers: /* @__PURE__ */ Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      {\n        if (!context.currentNode) {\n          throw new Error(`Node being replaced is already removed.`);\n        }\n        if (!context.parent) {\n          throw new Error(`Cannot replace root node.`);\n        }\n      }\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      if (!context.parent) {\n        throw new Error(`Cannot remove root node.`);\n      }\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      if (removalIndex < 0) {\n        throw new Error(`node being removed is not a child of current parent`);\n      }\n      if (!node || node === context.currentNode) {\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: () => {\n    },\n    addIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          addId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId);\n        } else if (exp.type === 4) {\n          addId(exp.content);\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          removeId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId);\n        } else if (exp.type === 4) {\n          removeId(exp.content);\n        }\n      }\n    },\n    hoist(exp) {\n      if (shared.isString(exp))\n        exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        2\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      return createCacheExpression(context.cached++, exp, isVNode);\n    }\n  };\n  {\n    context.filters = /* @__PURE__ */ new Set();\n  }\n  function addId(id) {\n    const { identifiers } = context;\n    if (identifiers[id] === void 0) {\n      identifiers[id] = 0;\n    }\n    identifiers[id]++;\n  }\n  function removeId(id) {\n    context.identifiers[id]--;\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    hoistStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  {\n    root.filters = [...context.filters];\n  }\n}\nfunction createRootCodegen(root, context) {\n  const { helper } = context;\n  const { children } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13) {\n        convertToBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    let patchFlag = 64;\n    let patchFlagText = shared.PatchFlagNames[64];\n    if (children.filter((c) => c.type !== 3).length === 1) {\n      patchFlag |= 2048;\n      patchFlagText += `, ${shared.PatchFlagNames[2048]}`;\n    }\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      void 0,\n      root.children,\n      patchFlag + (` /* ${patchFlagText} */` ),\n      void 0,\n      void 0,\n      true,\n      void 0,\n      false\n      /* isComponent */\n    );\n  } else ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (shared.isString(child))\n      continue;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  const { nodeTransforms } = context;\n  const exitFns = [];\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\n    const onExit = nodeTransforms[i2](node, context);\n    if (onExit) {\n      if (shared.isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      return;\n    } else {\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3:\n      if (!context.ssr) {\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5:\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    case 9:\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\n        traverseNode(node.branches[i2], context);\n      }\n      break;\n    case 10:\n    case 11:\n    case 1:\n    case 0:\n      traverseChildren(node, context);\n      break;\n  }\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = shared.isString(name) ? (n) => n === name : (n) => name.test(n);\n  return (node, context) => {\n    if (node.type === 1) {\n      const { props } = node;\n      if (node.tagType === 3 && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 && matches(prop.name)) {\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit)\n            exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = \"function\",\n  prefixIdentifiers = mode === \"module\",\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = \"vue/server-renderer\",\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.loc.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: void 0,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, node) {\n      context.code += code;\n      if (context.map) {\n        if (node) {\n          let name;\n          if (node.type === 4 && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, \"\");\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content;\n            }\n          }\n          addMapping(node.loc.start, name);\n        }\n        advancePositionWithMutation(context, code);\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end);\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push(\"\\n\" + `  `.repeat(n));\n  }\n  function addMapping(loc, name) {\n    context.map.addMapping({\n      name,\n      source: context.filename,\n      original: {\n        line: loc.line,\n        column: loc.column - 1\n        // source-map column is 0 based\n      },\n      generated: {\n        line: context.line,\n        column: context.column - 1\n      }\n    });\n  }\n  if (sourceMap) {\n    context.map = new sourceMapJs.SourceMapGenerator();\n    context.map.setSourceContent(filename, context.source);\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated)\n    options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\n  const genScopeId = scopeId != null && mode === \"module\";\n  const isSetupInlined = !!options.inline;\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\n  if (mode === \"module\") {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\n  } else {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\n  if (options.bindingMetadata && !options.inline) {\n    args.push(\"$props\", \"$setup\", \"$data\", \"$options\");\n  }\n  const signature = options.isTS ? args.map((arg) => `${arg}: any`).join(\",\") : args.join(\", \");\n  if (isSetupInlined) {\n    push(`(${signature}) => {`);\n  } else {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    if (hasHelpers) {\n      push(`const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue`);\n      push(`\n`);\n      newline();\n    }\n  }\n  if (ast.components.length) {\n    genAssets(ast.components, \"component\", context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, \"directive\", context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, \"filter\", context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\n`);\n    newline();\n  }\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    // SourceMapGenerator does have toJSON() method but it's not in the types\n    map: context.map ? context.map.toJSON() : void 0\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    if (prefixIdentifiers) {\n      push(`const { ${helpers.map(aliasHelper).join(\", \")} } = ${VueBinding}\n`);\n    } else {\n      push(`const _Vue = ${VueBinding}\n`);\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\", \");\n        push(`const { ${staticHelpers} } = _Vue\n`);\n      }\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `const { ${ast.ssrHelpers.map(aliasHelper).join(\", \")} } = require(\"${ssrRuntimeModuleName}\")\n`\n    );\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genModulePreamble(ast, context, genScopeId, inline) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName\n  } = context;\n  if (genScopeId && ast.hoists.length) {\n    ast.helpers.add(PUSH_SCOPE_ID);\n    ast.helpers.add(POP_SCOPE_ID);\n  }\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers);\n    if (optimizeImports) {\n      push(\n        `import { ${helpers.map((s) => helperNameMap[s]).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`\n      );\n      push(\n        `\n// Binding optimization for webpack code-split\nconst ${helpers.map((s) => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\", \")}\n`\n      );\n    } else {\n      push(\n        `import { ${helpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`\n      );\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `import { ${ast.ssrHelpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from \"${ssrRuntimeModuleName}\"\n`\n    );\n  }\n  if (ast.imports.length) {\n    genImports(ast.imports, context);\n    newline();\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  if (!inline) {\n    push(`export `);\n  }\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n  const resolver = helper(\n    type === \"filter\" ? RESOLVE_FILTER : type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\n  );\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    const maybeSelfReference = id.endsWith(\"__self\");\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\n    );\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const { push, newline, helper, scopeId, mode } = context;\n  const genScopeId = scopeId != null && mode !== \"function\";\n  newline();\n  if (genScopeId) {\n    push(\n      `const _withScopeId = n => (${helper(\n        PUSH_SCOPE_ID\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`\n    );\n    newline();\n  }\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      const needScopeIdWrapper = genScopeId && exp.type === 13;\n      push(\n        `const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`\n      );\n      genNode(exp, context);\n      if (needScopeIdWrapper) {\n        push(`)`);\n      }\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction genImports(importsOptions, context) {\n  if (!importsOptions.length) {\n    return;\n  }\n  importsOptions.forEach((imports) => {\n    context.push(`import `);\n    genNode(imports.exp, context);\n    context.push(` from '${imports.path}'`);\n    context.newline();\n  });\n}\nfunction isText(n) {\n  return shared.isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\n}\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || nodes.some((n) => shared.isArray(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const { push, newline } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (shared.isString(node)) {\n      push(node);\n    } else if (shared.isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(\",\");\n        newline();\n      } else {\n        comma && push(\", \");\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (shared.isString(node)) {\n    context.push(node);\n    return;\n  }\n  if (shared.isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1:\n    case 9:\n    case 11:\n      assert(\n        node.codegenNode != null,\n        `Codegen node is missing for element/if/for node. Apply appropriate transforms first.`\n      );\n      genNode(node.codegenNode, context);\n      break;\n    case 2:\n      genText(node, context);\n      break;\n    case 4:\n      genExpression(node, context);\n      break;\n    case 5:\n      genInterpolation(node, context);\n      break;\n    case 12:\n      genNode(node.codegenNode, context);\n      break;\n    case 8:\n      genCompoundExpression(node, context);\n      break;\n    case 3:\n      genComment(node, context);\n      break;\n    case 13:\n      genVNodeCall(node, context);\n      break;\n    case 14:\n      genCallExpression(node, context);\n      break;\n    case 15:\n      genObjectExpression(node, context);\n      break;\n    case 17:\n      genArrayExpression(node, context);\n      break;\n    case 18:\n      genFunctionExpression(node, context);\n      break;\n    case 19:\n      genConditionalExpression(node, context);\n      break;\n    case 20:\n      genCacheExpression(node, context);\n      break;\n    case 21:\n      genNodeList(node.body, context, true, false);\n      break;\n    case 22:\n      genTemplateLiteral(node, context);\n      break;\n    case 23:\n      genIfStatement(node, context);\n      break;\n    case 24:\n      genAssignmentExpression(node, context);\n      break;\n    case 25:\n      genSequenceExpression(node, context);\n      break;\n    case 26:\n      genReturnStatement(node, context);\n      break;\n    case 10:\n      break;\n    default:\n      {\n        assert(false, `unhandled codegen node type: ${node.type}`);\n        const exhaustiveCheck = node;\n        return exhaustiveCheck;\n      }\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), node);\n}\nfunction genExpression(node, context) {\n  const { content, isStatic } = node;\n  context.push(isStatic ? JSON.stringify(content) : content, node);\n}\nfunction genInterpolation(node, context) {\n  const { push, helper, pure } = context;\n  if (pure)\n    push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (shared.isString(child)) {\n      context.push(child);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const { push } = context;\n  if (node.type === 8) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, node);\n  } else {\n    push(`[${node.content}]`, node);\n  }\n}\nfunction genComment(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\n}\nfunction genVNodeCall(node, context) {\n  const { push, helper, pure } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, node);\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\n    context\n  );\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null)\n      break;\n  }\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\n}\nfunction genCallExpression(node, context) {\n  const { push, helper, pure } = context;\n  const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const { push, indent, deindent, newline } = context;\n  const { properties } = node;\n  if (!properties.length) {\n    push(`{}`, node);\n    return;\n  }\n  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i];\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const { push, indent, deindent } = context;\n  const { params, returns, body, newline, isSlot } = node;\n  if (isSlot) {\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, node);\n  if (shared.isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (shared.isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const { test, consequent, alternate, newline: needNewline } = node;\n  const { push, indent, deindent, newline } = context;\n  if (test.type === 4) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(\n    true\n    /* without newline */\n  );\n}\nfunction genCacheExpression(node, context) {\n  const { push, helper, indent, deindent, newline } = context;\n  push(`_cache[${node.index}] || (`);\n  if (node.isVNode) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (node.isVNode) {\n    push(`,`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n}\nfunction genTemplateLiteral(node, context) {\n  const { push, indent, deindent } = context;\n  push(\"`\");\n  const l = node.elements.length;\n  const multilines = l > 3;\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i];\n    if (shared.isString(e)) {\n      push(e.replace(/(`|\\$|\\\\)/g, \"\\\\$1\"));\n    } else {\n      push(\"${\");\n      if (multilines)\n        indent();\n      genNode(e, context);\n      if (multilines)\n        deindent();\n      push(\"}\");\n    }\n  }\n  push(\"`\");\n}\nfunction genIfStatement(node, context) {\n  const { push, indent, deindent } = context;\n  const { test, consequent, alternate } = node;\n  push(`if (`);\n  genNode(test, context);\n  push(`) {`);\n  indent();\n  genNode(consequent, context);\n  deindent();\n  push(`}`);\n  if (alternate) {\n    push(` else `);\n    if (alternate.type === 23) {\n      genIfStatement(alternate, context);\n    } else {\n      push(`{`);\n      indent();\n      genNode(alternate, context);\n      deindent();\n      push(`}`);\n    }\n  }\n}\nfunction genAssignmentExpression(node, context) {\n  genNode(node.left, context);\n  context.push(` = `);\n  genNode(node.right, context);\n}\nfunction genSequenceExpression(node, context) {\n  context.push(`(`);\n  genNodeList(node.expressions, context);\n  context.push(`)`);\n}\nfunction genReturnStatement({ returns }, context) {\n  context.push(`return `);\n  if (shared.isArray(returns)) {\n    genNodeListAsArray(returns, context);\n  } else {\n    genNode(returns, context);\n  }\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\n  const rootExp = root.type === \"Program\" && root.body[0].type === \"ExpressionStatement\" && root.body[0].expression;\n  estreeWalker.walk(root, {\n    enter(node, parent) {\n      parent && parentStack.push(parent);\n      if (parent && parent.type.startsWith(\"TS\") && !TS_NODE_TYPES.includes(parent.type)) {\n        return this.skip();\n      }\n      if (node.type === \"Identifier\") {\n        const isLocal = !!knownIds[node.name];\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\n        if (includeAll || isRefed && !isLocal) {\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\n        }\n      } else if (node.type === \"ObjectProperty\" && parent.type === \"ObjectPattern\") {\n        node.inPattern = true;\n      } else if (isFunctionType(node)) {\n        walkFunctionParams(node, (id) => markScopeIdentifier(node, id, knownIds));\n      } else if (node.type === \"BlockStatement\") {\n        walkBlockDeclarations(\n          node,\n          (id) => markScopeIdentifier(node, id, knownIds)\n        );\n      }\n    },\n    leave(node, parent) {\n      parent && parentStack.pop();\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--;\n          if (knownIds[id] === 0) {\n            delete knownIds[id];\n          }\n        }\n      }\n    }\n  });\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  if (!parent) {\n    return true;\n  }\n  if (id.name === \"arguments\") {\n    return false;\n  }\n  if (isReferenced(id, parent)) {\n    return true;\n  }\n  switch (parent.type) {\n    case \"AssignmentExpression\":\n    case \"AssignmentPattern\":\n      return true;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return isInDestructureAssignment(parent, parentStack);\n  }\n  return false;\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === \"AssignmentExpression\") {\n        return true;\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === \"VariableDeclaration\") {\n      if (stmt.declare)\n        continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n      if (stmt.declare || !stmt.id)\n        continue;\n      onIdent(stmt.id);\n    } else if (stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\" || stmt.type === \"ForStatement\") {\n      const variable = stmt.type === \"ForStatement\" ? stmt.init : stmt.left;\n      if (variable && variable.type === \"VariableDeclaration\") {\n        for (const decl of variable.declarations) {\n          for (const id of extractIdentifiers(decl.id)) {\n            onIdent(id);\n          }\n        }\n      }\n    }\n  }\n}\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case \"Identifier\":\n      nodes.push(param);\n      break;\n    case \"MemberExpression\":\n      let object = param;\n      while (object.type === \"MemberExpression\") {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case \"ObjectPattern\":\n      for (const prop of param.properties) {\n        if (prop.type === \"RestElement\") {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      param.elements.forEach((element) => {\n        if (element)\n          extractIdentifiers(element, nodes);\n      });\n      break;\n    case \"RestElement\":\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case \"AssignmentPattern\":\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nfunction markScopeIdentifier(node, child, knownIds) {\n  const { name } = child;\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return;\n  }\n  if (name in knownIds) {\n    knownIds[name]++;\n  } else {\n    knownIds[name] = 1;\n  }\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */ new Set())).add(name);\n}\nconst isFunctionType = (node) => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n    case \"PrivateName\":\n      return false;\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n    case \"ClassProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n    case \"AssignmentPattern\":\n      return parent.right === node;\n    case \"LabeledStatement\":\n      return false;\n    case \"CatchClause\":\n      return false;\n    case \"RestElement\":\n      return false;\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n    case \"ExportSpecifier\":\n      if (grandparent == null ? void 0 : grandparent.source) {\n        return false;\n      }\n      return parent.local === node;\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n    case \"ImportAttribute\":\n      return false;\n    case \"JSXAttribute\":\n      return false;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n    case \"MetaProperty\":\n      return false;\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n    case \"TSEnumMember\":\n      return parent.id !== node;\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n  }\n  return true;\n}\nconst TS_NODE_TYPES = [\n  \"TSAsExpression\",\n  // foo as number\n  \"TSTypeAssertion\",\n  // (<number>foo)\n  \"TSNonNullExpression\",\n  // foo!\n  \"TSInstantiationExpression\",\n  // foo<string>\n  \"TSSatisfiesExpression\"\n  // foo satisfies T\n];\n\nconst isLiteralWhitelisted = /* @__PURE__ */ shared.makeMap(\"true,false,null,this\");\nconst constantBailRE = /\\w\\s*\\(|\\.[^\\d]/;\nconst transformExpression = (node, context) => {\n  if (node.type === 5) {\n    node.content = processExpression(\n      node.content,\n      context\n    );\n  } else if (node.type === 1) {\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      if (dir.type === 7 && dir.name !== \"for\") {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === \"slot\"\n          );\n        }\n        if (arg && arg.type === 4 && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node;\n  }\n  const { inline, bindingMetadata } = context;\n  const rewriteIdentifier = (raw, parent, id) => {\n    const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\n    if (inline) {\n      const isAssignmentLVal = parent && parent.type === \"AssignmentExpression\" && parent.left === id;\n      const isUpdateArg = parent && parent.type === \"UpdateExpression\" && parent.argument === id;\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\n      if (isConst(type) || type === \"setup-reactive-const\" || localVars[raw]) {\n        return raw;\n      } else if (type === \"setup-ref\") {\n        return `${raw}.value`;\n      } else if (type === \"setup-maybe-ref\") {\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : `${context.helperString(UNREF)}(${raw})`;\n      } else if (type === \"setup-let\") {\n        if (isAssignmentLVal) {\n          const { right: rVal, operator } = parent;\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\n          const rExpString = stringifyExpression(\n            processExpression(\n              createSimpleExpression(rExp, false),\n              context,\n              false,\n              false,\n              knownIds\n            )\n          );\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\n        } else if (isUpdateArg) {\n          id.start = parent.start;\n          id.end = parent.end;\n          const { prefix: isPrefix, operator } = parent;\n          const prefix = isPrefix ? operator : ``;\n          const postfix = isPrefix ? `` : operator;\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\n        } else if (isDestructureAssignment) {\n          return raw;\n        } else {\n          return `${context.helperString(UNREF)}(${raw})`;\n        }\n      } else if (type === \"props\") {\n        return shared.genPropsAccessExp(raw);\n      } else if (type === \"props-aliased\") {\n        return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\n      }\n    } else {\n      if (type && type.startsWith(\"setup\") || type === \"literal-const\") {\n        return `$setup.${raw}`;\n      } else if (type === \"props-aliased\") {\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\n      } else if (type) {\n        return `$${type}.${raw}`;\n      }\n    }\n    return `_ctx.${raw}`;\n  };\n  const rawExp = node.content;\n  const bailConstant = constantBailRE.test(rawExp);\n  if (isSimpleIdentifier(rawExp)) {\n    const isScopeVarReference = context.identifiers[rawExp];\n    const isAllowedGlobal = shared.isGloballyAllowed(rawExp);\n    const isLiteral = isLiteralWhitelisted(rawExp);\n    if (!asParams && !isScopeVarReference && !isLiteral && (!isAllowedGlobal || bindingMetadata[rawExp])) {\n      if (isConst(bindingMetadata[rawExp])) {\n        node.constType = 1;\n      }\n      node.content = rewriteIdentifier(rawExp);\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = 3;\n      } else {\n        node.constType = 2;\n      }\n    }\n    return node;\n  }\n  let ast;\n  const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\n  try {\n    ast = parser.parse(source, {\n      plugins: context.expressionPlugins\n    }).program;\n  } catch (e) {\n    context.onError(\n      createCompilerError(\n        45,\n        node.loc,\n        void 0,\n        e.message\n      )\n    );\n    return node;\n  }\n  const ids = [];\n  const parentStack = [];\n  const knownIds = Object.create(context.identifiers);\n  walkIdentifiers(\n    ast,\n    (node2, parent, _, isReferenced, isLocal) => {\n      if (isStaticPropertyKey(node2, parent)) {\n        return;\n      }\n      if (node2.name.startsWith(\"_filter_\")) {\n        return;\n      }\n      const needPrefix = isReferenced && canPrefix(node2);\n      if (needPrefix && !isLocal) {\n        if (isStaticProperty(parent) && parent.shorthand) {\n          node2.prefix = `${node2.name}: `;\n        }\n        node2.name = rewriteIdentifier(node2.name, parent, node2);\n        ids.push(node2);\n      } else {\n        if (!(needPrefix && isLocal) && !bailConstant) {\n          node2.isConstant = true;\n        }\n        ids.push(node2);\n      }\n    },\n    true,\n    // invoke on ALL identifiers\n    parentStack,\n    knownIds\n  );\n  const children = [];\n  ids.sort((a, b) => a.start - b.start);\n  ids.forEach((id, i) => {\n    const start = id.start - 1;\n    const end = id.end - 1;\n    const last = ids[i - 1];\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``));\n    }\n    const source2 = rawExp.slice(start, end);\n    children.push(\n      createSimpleExpression(\n        id.name,\n        false,\n        {\n          source: source2,\n          start: advancePositionWithClone(node.loc.start, source2, start),\n          end: advancePositionWithClone(node.loc.start, source2, end)\n        },\n        id.isConstant ? 3 : 0\n      )\n    );\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end));\n    }\n  });\n  let ret;\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc);\n  } else {\n    ret = node;\n    ret.constType = bailConstant ? 0 : 3;\n  }\n  ret.identifiers = Object.keys(knownIds);\n  return ret;\n}\nfunction canPrefix(id) {\n  if (shared.isGloballyAllowed(id.name)) {\n    return false;\n  }\n  if (id.name === \"require\") {\n    return false;\n  }\n  return true;\n}\nfunction stringifyExpression(exp) {\n  if (shared.isString(exp)) {\n    return exp;\n  } else if (exp.type === 4) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join(\"\");\n  }\n}\nfunction isConst(type) {\n  return type === \"setup-const\" || type === \"literal-const\";\n}\n\nconst transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      const siblings = context.parent.children;\n      let i = siblings.indexOf(ifNode);\n      let key = 0;\n      while (i-- >= 0) {\n        const sibling = siblings[i];\n        if (sibling && sibling.type === 9) {\n          key += sibling.branches.length;\n        }\n      }\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context\n          );\n        } else {\n          const parentCondition = getParentCondition(ifNode.codegenNode);\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context\n          );\n        }\n      };\n    });\n  }\n);\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(\n      createCompilerError(28, dir.loc)\n    );\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (context.prefixIdentifiers && dir.exp) {\n    dir.exp = processExpression(dir.exp, context);\n  }\n  if (dir.name === \"if\") {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    const siblings = context.parent.children;\n    const comments = [];\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3) {\n        context.removeNode(sibling);\n        comments.unshift(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9) {\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\n          context.onError(\n            createCompilerError(30, node.loc)\n          );\n        }\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        if (comments.length && // #3619 ignore comments if the v-if is direct child of <transition>\n        !(context.parent && context.parent.type === 1 && isBuiltInType(context.parent.tag, \"transition\"))) {\n          branch.children = [...comments, ...branch.children];\n        }\n        {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    29,\n                    branch.userKey.loc\n                  )\n                );\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        traverseNode(branch, context);\n        if (onExit)\n          onExit();\n        context.currentNode = null;\n      } else {\n        context.onError(\n          createCompilerError(30, node.loc)\n        );\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3;\n  return {\n    type: 10,\n    loc: node.loc,\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        '\"v-if\"' ,\n        \"true\"\n      ])\n    );\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const { helper } = context;\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      2\n    )\n  );\n  const { children } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11) {\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64;\n      let patchFlagText = shared.PatchFlagNames[64];\n      if (!branch.isTemplateIf && children.filter((c) => c.type !== 3).length === 1) {\n        patchFlag |= 2048;\n        patchFlagText += `, ${shared.PatchFlagNames[2048]}`;\n      }\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag + (` /* ${patchFlagText} */` ),\n        void 0,\n        void 0,\n        true,\n        false,\n        false,\n        branch.loc\n      );\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    if (vnodeCall.type === 13) {\n      convertToBlock(vnodeCall, context);\n    }\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19) {\n      if (node.alternate.type === 19) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20) {\n      node = node.value;\n    }\n  }\n}\n\nconst transformFor = createStructuralDirectiveTransform(\n  \"for\",\n  (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, (forNode) => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source\n      ]);\n      const isTemplate = isTemplateNode(node);\n      const memo = findDir(node, \"memo\");\n      const keyProp = findProp(node, `key`);\n      const keyExp = keyProp && (keyProp.type === 6 ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n      if (isTemplate) {\n        if (memo) {\n          memo.exp = processExpression(\n            memo.exp,\n            context\n          );\n        }\n        if (keyProperty && keyProp.type !== 6) {\n          keyProperty.value = processExpression(\n            keyProperty.value,\n            context\n          );\n        }\n      }\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        void 0,\n        renderExp,\n        fragmentFlag + (` /* ${shared.PatchFlagNames[fragmentFlag]} */` ),\n        void 0,\n        void 0,\n        true,\n        !isStableFragment,\n        false,\n        node.loc\n      );\n      return () => {\n        let childBlock;\n        const { children } = forNode;\n        if (isTemplate) {\n          node.children.some((c) => {\n            if (c.type === 1) {\n              const key = findProp(c, \"key\");\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    33,\n                    key.loc\n                  )\n                );\n                return true;\n              }\n            }\n          });\n        }\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\n        if (slotOutlet) {\n          childBlock = slotOutlet.codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n        } else if (needFragmentWrapper) {\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\n            node.children,\n            64 + (` /* ${shared.PatchFlagNames[64]} */` ),\n            void 0,\n            void 0,\n            true,\n            void 0,\n            false\n            /* isComponent */\n          );\n        } else {\n          childBlock = children[0].codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              removeHelper(OPEN_BLOCK);\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\n              );\n            } else {\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\n              );\n            }\n          }\n          childBlock.isBlock = !isStableFragment;\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK);\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`)\n            ])\n          );\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\n              ` && ${context.helperString(\n                IS_MEMO_SAME\n              )}(_cached, _memo)) return _cached`\n            ]),\n            createCompoundExpression([`const _item = `, childBlock]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`)\n          ]);\n          renderExp.arguments.push(\n            loop,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached++))\n          );\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true\n              /* force newline */\n            )\n          );\n        }\n      };\n    });\n  }\n);\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(31, dir.loc)\n    );\n    return;\n  }\n  const parseResult = parseForExpression(\n    // can only be simple expression because vFor transform is applied\n    // before expression transform.\n    dir.exp,\n    context\n  );\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(32, dir.loc)\n    );\n    return;\n  }\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\n  const { source, value, key, index } = parseResult;\n  const forNode = {\n    type: 11,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  scopes.vFor++;\n  if (context.prefixIdentifiers) {\n    value && addIdentifiers(value);\n    key && addIdentifiers(key);\n    index && addIdentifiers(index);\n  }\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (context.prefixIdentifiers) {\n      value && removeIdentifiers(value);\n      key && removeIdentifiers(key);\n      index && removeIdentifiers(index);\n    }\n    if (onExit)\n      onExit();\n  };\n}\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input, context) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch)\n    return;\n  const [, LHS, RHS] = inMatch;\n  const result = {\n    source: createAliasExpression(\n      loc,\n      RHS.trim(),\n      exp.indexOf(RHS, LHS.length)\n    ),\n    value: void 0,\n    key: void 0,\n    index: void 0\n  };\n  if (context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source,\n      context\n    );\n  }\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(loc, keyContent, keyOffset);\n      if (context.prefixIdentifiers) {\n        result.key = processExpression(result.key, context, true);\n      }\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(\n          loc,\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\n          )\n        );\n        if (context.prefixIdentifiers) {\n          result.index = processExpression(result.index, context, true);\n        }\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset);\n    if (context.prefixIdentifiers) {\n      result.value = processExpression(result.value, context, true);\n    }\n  }\n  return result;\n}\nfunction createAliasExpression(range, content, offset) {\n  return createSimpleExpression(\n    content,\n    false,\n    getInnerRange(range, offset, content.length)\n  );\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i])\n      break;\n  }\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\n    const vSlot = findDir(node, \"slot\");\n    if (vSlot) {\n      const slotProps = vSlot.exp;\n      if (context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps);\n      }\n      context.scopes.vSlot++;\n      return () => {\n        if (context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps);\n        }\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\n    const result = vFor.parseResult = parseForExpression(\n      vFor.exp,\n      context\n    );\n    if (result) {\n      const { value, key, index } = result;\n      const { addIdentifiers, removeIdentifiers } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(\n  props,\n  children,\n  false,\n  true,\n  children.length ? children[0].loc : loc\n);\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const { children, loc } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  if (!context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\n  }\n  const onComponentSlot = findDir(node, \"slot\", true);\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression(\"default\", true),\n        buildSlotFn(exp, void 0, children, loc)\n      )\n    );\n  }\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = /* @__PURE__ */ new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\n      if (slotElement.type !== 3) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      context.onError(\n        createCompilerError(37, slotDir.loc)\n      );\n      break;\n    }\n    hasTemplateSlots = true;\n    const { children: slotChildren, loc: slotLoc } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const vFor = findDir(slotElement, \"for\");\n    const slotFunction = buildSlotFn(\n      slotProps,\n      vFor == null ? void 0 : vFor.exp,\n      slotChildren,\n      slotLoc\n    );\n    let vIf;\n    let vElse;\n    if (vIf = findDir(slotElement, \"if\")) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback\n        )\n      );\n    } else if (vElse = findDir(\n      slotElement,\n      /^else(-if)?$/,\n      true\n      /* allowEmpty */\n    )) {\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, \"if\")) {\n        children.splice(i, 1);\n        i--;\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(\n          vElse.exp,\n          buildDynamicSlot(\n            slotName,\n            slotFunction,\n            conditionalBranchIndex++\n          ),\n          defaultFallback\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(\n          createCompilerError(30, vElse.loc)\n        );\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.parseResult || parseForExpression(vFor.exp, context);\n      if (parseResult) {\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true\n              /* force newline */\n            )\n          ])\n        );\n      } else {\n        context.onError(\n          createCompilerError(32, vFor.loc)\n        );\n      }\n    } else {\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              38,\n              dirLoc\n            )\n          );\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === \"default\") {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children2) => {\n      const fn = buildSlotFn(props, void 0, children2, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            39,\n            implicitDefaultChildren[0].loc\n          )\n        );\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\n        );\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + (` /* ${shared.slotFlagsText[slotFlag]} */` ),\n          false\n        )\n      )\n    ),\n    loc\n  );\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ];\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\n    );\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9:\n        if (hasForwardedSlots(child.branches))\n          return true;\n        break;\n      case 10:\n      case 11:\n        if (hasForwardedSlots(child.children))\n          return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 && node.type !== 12)\n    return true;\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\n\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\nconst transformElement = (node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\n      return;\n    }\n    const { tag, props } = node;\n    const isComponent = node.tagType === 1;\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let vnodePatchFlag;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = (\n      // dynamic component may resolve to plain elements\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && // <svg> and <foreignObject> must be forced into blocks so that block\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\n      // This is technically web-specific, but splitting the logic out of core\n      // leads to too much unnecessary complexity.\n      (tag === \"svg\" || tag === \"foreignObject\")\n    );\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        void 0,\n        isComponent,\n        isDynamicComponent\n      );\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\n        directives.map((dir) => buildDirectiveArgs(dir, context))\n      ) : void 0;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        shouldUseBlock = true;\n        patchFlag |= 1024;\n        if (node.children.length > 1) {\n          context.onError(\n            createCompilerError(46, {\n              start: node.children[0].loc.start,\n              end: node.children[node.children.length - 1].loc.end,\n              source: \"\"\n            })\n          );\n        }\n      }\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        const hasDynamicTextChild = type === 5 || type === 8;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\n          patchFlag |= 1;\n        }\n        if (hasDynamicTextChild || type === 2) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    if (patchFlag !== 0) {\n      {\n        if (patchFlag < 0) {\n          vnodePatchFlag = patchFlag + ` /* ${shared.PatchFlagNames[patchFlag]} */`;\n        } else {\n          const flagNames = Object.keys(shared.PatchFlagNames).map(Number).filter((n) => n > 0 && patchFlag & n).map((n) => shared.PatchFlagNames[n]).join(`, `);\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\n        }\n      }\n      if (dynamicPropNames && dynamicPropNames.length) {\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n      }\n    }\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      vnodePatchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false,\n      isComponent,\n      node.loc\n    );\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let { tag } = node;\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(node, \"is\");\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      context\n    )) {\n      const exp = isProp.type === 6 ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp\n        ]);\n      }\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  const isDir = !isExplicitDynamic && findDir(node, \"is\");\n  if (isDir && isDir.exp) {\n    {\n      context.onWarn(\n        createCompilerError(52, isDir.loc)\n      );\n    }\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n      isDir.exp\n    ]);\n  }\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    if (!ssr)\n      context.helper(builtIn);\n    return builtIn;\n  }\n  {\n    const fromSetup = resolveSetupReference(tag, context);\n    if (fromSetup) {\n      return fromSetup;\n    }\n    const dotIndex = tag.indexOf(\".\");\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\n      if (ns) {\n        return ns + tag.slice(dotIndex);\n      }\n    }\n  }\n  if (context.selfName && shared.capitalize(shared.camelize(tag)) === context.selfName) {\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag + `__self`);\n    return toValidAssetId(tag, `component`);\n  }\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction resolveSetupReference(name, context) {\n  const bindings = context.bindingMetadata;\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return;\n  }\n  const camelName = shared.camelize(name);\n  const PascalName = shared.capitalize(camelName);\n  const checkType = (type) => {\n    if (bindings[name] === type) {\n      return name;\n    }\n    if (bindings[camelName] === type) {\n      return camelName;\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName;\n    }\n  };\n  const fromConst = checkType(\"setup-const\") || checkType(\"setup-reactive-const\") || checkType(\"literal-const\");\n  if (fromConst) {\n    return context.inline ? (\n      // in inline mode, const setup bindings (e.g. imports) can be used as-is\n      fromConst\n    ) : `$setup[${JSON.stringify(fromConst)}]`;\n  }\n  const fromMaybeRef = checkType(\"setup-let\") || checkType(\"setup-ref\") || checkType(\"setup-maybe-ref\");\n  if (fromMaybeRef) {\n    return context.inline ? (\n      // setup scope bindings that may be refs need to be unrefed\n      `${context.helperString(UNREF)}(${fromMaybeRef})`\n    ) : `$setup[${JSON.stringify(fromMaybeRef)}]`;\n  }\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n  const { tag, loc: elementLoc, children } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = (arg) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      );\n      properties = [];\n    }\n    if (arg)\n      mergeArgs.push(arg);\n  };\n  const analyzePatchFlag = ({ key, value }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = shared.isOn(name);\n      if (isEventHandler && (!isComponent || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== \"onclick\" && // omit v-model handlers\n      name !== \"onUpdate:modelValue\" && // omit onVnodeXXX hooks\n      !shared.isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && shared.isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\n        return;\n      }\n      if (name === \"ref\") {\n        hasRef = true;\n      } else if (name === \"class\") {\n        hasClassBinding = true;\n      } else if (name === \"style\") {\n        hasStyleBinding = true;\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      if (isComponent && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (prop.type === 6) {\n      const { loc, name, value } = prop;\n      let isStatic = true;\n      if (name === \"ref\") {\n        hasRef = true;\n        if (context.scopes.vFor > 0) {\n          properties.push(\n            createObjectProperty(\n              createSimpleExpression(\"ref_for\", true),\n              createSimpleExpression(\"true\")\n            )\n          );\n        }\n        if (value && context.inline) {\n          const binding = context.bindingMetadata[value.content];\n          if (binding === \"setup-let\" || binding === \"setup-ref\" || binding === \"setup-maybe-ref\") {\n            isStatic = false;\n            properties.push(\n              createObjectProperty(\n                createSimpleExpression(\"ref_key\", true),\n                createSimpleExpression(value.content, true, value.loc)\n              )\n            );\n          }\n        }\n      }\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(\n            name,\n            true,\n            getInnerRange(loc, 0, name.length)\n          ),\n          createSimpleExpression(\n            value ? value.content : \"\",\n            isStatic,\n            value ? value.loc : loc\n          )\n        )\n      );\n    } else {\n      const { name, arg, exp, loc, modifiers } = prop;\n      const isVBind = name === \"bind\";\n      const isVOn = name === \"on\";\n      if (name === \"slot\") {\n        if (!isComponent) {\n          context.onError(\n            createCompilerError(40, loc)\n          );\n        }\n        continue;\n      }\n      if (name === \"once\" || name === \"memo\") {\n        continue;\n      }\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        isVBind && isStaticArgOf(arg, \"key\") || // inline before-update hooks need to force block so that it is invoked\n        // before children\n        isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")\n      ) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, \"ref\") && context.scopes.vFor > 0) {\n        properties.push(\n          createObjectProperty(\n            createSimpleExpression(\"ref_for\", true),\n            createSimpleExpression(\"true\")\n          )\n        );\n      }\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            pushMergeArg();\n            {\n              {\n                const hasOverridableKeys = mergeArgs.some((arg2) => {\n                  if (arg2.type === 15) {\n                    return arg2.properties.some(({ key }) => {\n                      if (key.type !== 4 || !key.isStatic) {\n                        return true;\n                      }\n                      return key.content !== \"class\" && key.content !== \"style\" && !shared.isOn(key.content);\n                    });\n                  } else {\n                    return true;\n                  }\n                });\n                if (hasOverridableKeys) {\n                  checkCompatEnabled(\n                    \"COMPILER_V_BIND_OBJECT_ORDER\",\n                    context,\n                    loc\n                  );\n                }\n              }\n              if (isCompatEnabled(\n                \"COMPILER_V_BIND_OBJECT_ORDER\",\n                context\n              )) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            pushMergeArg({\n              type: 14,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind ? 34 : 35,\n              loc\n            )\n          );\n        }\n        continue;\n      }\n      if (isVBind && modifiers.includes(\"prop\")) {\n        patchFlag |= 32;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\n        !ssr && props2.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props2, elementLoc));\n        } else {\n          properties.push(...props2);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (shared.isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!shared.isBuiltInDirective(name)) {\n        runtimeDirectives.push(prop);\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = void 0;\n  if (mergeArgs.length) {\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      );\n    } else {\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    );\n  }\n  if (hasDynamicKeys) {\n    patchFlag |= 16;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2;\n    }\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4;\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= 8;\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32;\n    }\n  }\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512;\n  }\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15:\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === \"class\") {\n              classKeyIndex = i;\n            } else if (key.content === \"style\") {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value]\n            );\n          }\n          if (styleProp && // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17)) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value]\n            );\n          }\n        } else {\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression]\n          );\n        }\n        break;\n      case 14:\n        break;\n      default:\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression\n            ])\n          ]\n        );\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\nfunction dedupeProperties(properties) {\n  const knownProps = /* @__PURE__ */ new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    if (prop.key.type === 8 || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === \"style\" || name === \"class\" || shared.isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    );\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    const fromSetup = resolveSetupReference(\"v-\" + dir.name, context);\n    if (fromSetup) {\n      dirArgs.push(fromSetup);\n    } else {\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const { loc } = dir;\n  if (dir.exp)\n    dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(\n          (modifier) => createObjectProperty(modifier, trueExpression)\n        ),\n        loc\n      )\n    );\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1)\n      propsNamesString += \", \";\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === \"component\" || tag === \"Component\";\n}\n\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node;\n    const { slotName, slotProps } = processSlotOutlet(node, context);\n    const slotArgs = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      \"{}\",\n      \"undefined\",\n      \"true\"\n    ];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen);\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    );\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = void 0;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (p.value) {\n        if (p.name === \"name\") {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = shared.camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\n        if (p.exp)\n          slotName = p.exp;\n      } else {\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = shared.camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false\n    );\n    slotProps = props;\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          36,\n          directives[0].loc\n        )\n      );\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst transformOn = (dir, node, context, augmentor) => {\n  const { loc, modifiers, arg } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35, loc));\n  }\n  let eventName;\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      if (rawName.startsWith(\"vnode\")) {\n        context.onWarn(\n          createCompilerError(51, arg.loc)\n        );\n      }\n      if (rawName.startsWith(\"vue:\")) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ? (\n        // for non-element and vnode lifecycle event listeners, auto convert\n        // it to camelCase. See issue #2249\n        shared.toHandlerKey(shared.camelize(rawName))\n      ) : (\n        // preserve case for plain element listeners that have uppercase\n        // letters, as these may be custom elements' custom events\n        `on:${rawName}`\n      );\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`\n      ]);\n    }\n  } else {\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = void 0;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp.content, context);\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`);\n      exp = dir.exp = processExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements\n      );\n      isInlineStatement && context.removeIdentifiers(`$event`);\n      shouldCache = context.cacheHandlers && // unnecessary to cache inside v-once\n      !context.inVOnce && // runtime constants don't need to be cached\n      // (this is analyzed by compileScript in SFC <script setup>)\n      !(exp.type === 4 && exp.constType > 0) && // #1541 bail if this is a member exp handler passed to a component -\n      // we need to use the original function to preserve arity,\n      // e.g. <transition> relies on checking cb.length to determine\n      // transition end handling. Inline function is ok since its arity\n      // is preserved even when cached.\n      !(isMemberExp && node.tagType === 1) && // bail if the function references closure variables (v-for, v-slot)\n      // it must be passed fresh to avoid stale values.\n      !hasScopeRef(exp, context.identifiers);\n      if (shouldCache && isMemberExp) {\n        if (exp.type === 4) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\n        }\n      }\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      exp = createCompoundExpression([\n        `${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\n//@ts-ignore\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`\n      ]);\n    }\n  }\n  let ret = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ]\n  };\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\n  return ret;\n};\n\nconst transformBind = (dir, _node, context) => {\n  const { exp, modifiers, loc } = dir;\n  const arg = dir.arg;\n  if (arg.type !== 4) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  if (modifiers.includes(\"camel\")) {\n    if (arg.type === 4) {\n      if (arg.isStatic) {\n        arg.content = shared.camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.includes(\"prop\")) {\n      injectPrefix(arg, \".\");\n    }\n    if (modifiers.includes(\"attr\")) {\n      injectPrefix(arg, \"^\");\n    }\n  }\n  if (!exp || exp.type === 4 && !exp.content.trim()) {\n    context.onError(createCompilerError(34, loc));\n    return {\n      props: [createObjectProperty(arg, createSimpleExpression(\"\", true, loc))]\n    };\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\n\nconst transformText = (node, context) => {\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\n    return () => {\n      const children = node.children;\n      let currentContainer = void 0;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                );\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = void 0;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\n      ) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === \"template\"))) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8) {\n          const callArgs = [];\n          if (child.type !== 2 || child.content !== \" \") {\n            callArgs.push(child);\n          }\n          if (!context.ssr && getConstantType(child, context) === 0) {\n            callArgs.push(\n              1 + (` /* ${shared.PatchFlagNames[1]} */` )\n            );\n          }\n          children[i] = {\n            type: 12,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          };\n        }\n      }\n    };\n  }\n};\n\nconst seen$1 = /* @__PURE__ */ new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 && findDir(node, \"once\", true)) {\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(\n          cur.codegenNode,\n          true\n          /* isVNode */\n        );\n      }\n    };\n  }\n};\n\nconst transformModel = (dir, node, context) => {\n  const { exp, arg } = dir;\n  if (!exp) {\n    context.onError(\n      createCompilerError(41, dir.loc)\n    );\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4 ? exp.content : rawExp;\n  const bindingType = context.bindingMetadata[rawExp];\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\n    context.onError(createCompilerError(44, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = context.inline && (bindingType === \"setup-let\" || bindingType === \"setup-ref\" || bindingType === \"setup-maybe-ref\");\n  if (!expString.trim() || !isMemberExpression(expString, context) && !maybeRef) {\n    context.onError(\n      createCompilerError(42, exp.loc)\n    );\n    return createTransformProps();\n  }\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\n    context.onError(\n      createCompilerError(43, exp.loc)\n    );\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${shared.camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  if (maybeRef) {\n    if (bindingType === \"setup-ref\") {\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => ((`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event)`\n      ]);\n    } else {\n      const altAssignment = bindingType === \"setup-let\" ? `${rawExp} = $event` : `null`;\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event : ${altAssignment})`\n      ]);\n    }\n  } else {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`\n    ]);\n  }\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp)\n  ];\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\n    props[1].value = context.cache(props[1].value);\n  }\n  if (dir.modifiers.length && node.tagType === 1) {\n    const modifiers = dir.modifiers.map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          2\n        )\n      )\n    );\n  }\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return { props };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTER\", context)) {\n    return;\n  }\n  if (node.type === 5) {\n    rewriteFilter(node.content, context);\n  }\n  if (node.type === 1) {\n    node.props.forEach((prop) => {\n      if (prop.type === 7 && prop.name !== \"for\" && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== \"object\")\n        continue;\n      if (child.type === 4) {\n        parseFilter(child, context);\n      } else if (child.type === 8) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c, prev, i, expression, filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 39 && prev !== 92)\n        inSingle = false;\n    } else if (inDouble) {\n      if (c === 34 && prev !== 92)\n        inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 96 && prev !== 92)\n        inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 47 && prev !== 92)\n        inRegex = false;\n    } else if (c === 124 && // pipe\n    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {\n      if (expression === void 0) {\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 34:\n          inDouble = true;\n          break;\n        case 39:\n          inSingle = true;\n          break;\n        case 96:\n          inTemplateString = true;\n          break;\n        case 40:\n          paren++;\n          break;\n        case 41:\n          paren--;\n          break;\n        case 91:\n          square++;\n          break;\n        case 93:\n          square--;\n          break;\n        case 123:\n          curly++;\n          break;\n        case 125:\n          curly--;\n          break;\n      }\n      if (c === 47) {\n        let j = i - 1;\n        let p;\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== \" \")\n            break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === void 0) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    warnDeprecation(\n      \"COMPILER_FILTER\",\n      context,\n      node.loc\n    );\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf(\"(\");\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, \"filter\")}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, \"filter\")}(${exp}${args !== \")\" ? \",\" + args : args}`;\n  }\n}\n\nconst seen = /* @__PURE__ */ new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1) {\n    const dir = findDir(node, \"memo\");\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13) {\n        if (node.tagType !== 1) {\n          convertToBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp,\n          createFunctionExpression(void 0, codegenNode),\n          `_cache`,\n          String(context.cached++)\n        ]);\n      }\n    };\n  }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...[transformFilter] ,\n      ...prefixIdentifiers ? [\n        // order is important\n        trackVForSlotScopes,\n        transformExpression\n      ] : [],\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText\n    ],\n    {\n      on: transformOn,\n      bind: transformBind,\n      model: transformModel\n    }\n  ];\n}\nfunction baseCompile(template, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === \"module\";\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(49));\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50));\n  }\n  const ast = shared.isString(template) ? baseParse(template, options) : template;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\n  if (options.isTS) {\n    const { expressionPlugins } = options;\n    if (!expressionPlugins || !expressionPlugins.includes(\"typescript\")) {\n      options.expressionPlugins = [...expressionPlugins || [], \"typescript\"];\n    }\n  }\n  transform(\n    ast,\n    shared.extend({}, options, {\n      prefixIdentifiers,\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...options.nodeTransforms || []\n        // user transforms\n      ],\n      directiveTransforms: shared.extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {}\n        // user transforms\n      )\n    })\n  );\n  return generate(\n    ast,\n    shared.extend({}, options, {\n      prefixIdentifiers\n    })\n  );\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexports.generateCodeFrame = shared.generateCodeFrame;\nexports.BASE_TRANSITION = BASE_TRANSITION;\nexports.CAMELIZE = CAMELIZE;\nexports.CAPITALIZE = CAPITALIZE;\nexports.CREATE_BLOCK = CREATE_BLOCK;\nexports.CREATE_COMMENT = CREATE_COMMENT;\nexports.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\nexports.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\nexports.CREATE_SLOTS = CREATE_SLOTS;\nexports.CREATE_STATIC = CREATE_STATIC;\nexports.CREATE_TEXT = CREATE_TEXT;\nexports.CREATE_VNODE = CREATE_VNODE;\nexports.FRAGMENT = FRAGMENT;\nexports.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\nexports.IS_MEMO_SAME = IS_MEMO_SAME;\nexports.IS_REF = IS_REF;\nexports.KEEP_ALIVE = KEEP_ALIVE;\nexports.MERGE_PROPS = MERGE_PROPS;\nexports.NORMALIZE_CLASS = NORMALIZE_CLASS;\nexports.NORMALIZE_PROPS = NORMALIZE_PROPS;\nexports.NORMALIZE_STYLE = NORMALIZE_STYLE;\nexports.OPEN_BLOCK = OPEN_BLOCK;\nexports.POP_SCOPE_ID = POP_SCOPE_ID;\nexports.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\nexports.RENDER_LIST = RENDER_LIST;\nexports.RENDER_SLOT = RENDER_SLOT;\nexports.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\nexports.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\nexports.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\nexports.RESOLVE_FILTER = RESOLVE_FILTER;\nexports.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\nexports.SUSPENSE = SUSPENSE;\nexports.TELEPORT = TELEPORT;\nexports.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\nexports.TO_HANDLERS = TO_HANDLERS;\nexports.TO_HANDLER_KEY = TO_HANDLER_KEY;\nexports.TS_NODE_TYPES = TS_NODE_TYPES;\nexports.UNREF = UNREF;\nexports.WITH_CTX = WITH_CTX;\nexports.WITH_DIRECTIVES = WITH_DIRECTIVES;\nexports.WITH_MEMO = WITH_MEMO;\nexports.advancePositionWithClone = advancePositionWithClone;\nexports.advancePositionWithMutation = advancePositionWithMutation;\nexports.assert = assert;\nexports.baseCompile = baseCompile;\nexports.baseParse = baseParse;\nexports.buildDirectiveArgs = buildDirectiveArgs;\nexports.buildProps = buildProps;\nexports.buildSlots = buildSlots;\nexports.checkCompatEnabled = checkCompatEnabled;\nexports.convertToBlock = convertToBlock;\nexports.createArrayExpression = createArrayExpression;\nexports.createAssignmentExpression = createAssignmentExpression;\nexports.createBlockStatement = createBlockStatement;\nexports.createCacheExpression = createCacheExpression;\nexports.createCallExpression = createCallExpression;\nexports.createCompilerError = createCompilerError;\nexports.createCompoundExpression = createCompoundExpression;\nexports.createConditionalExpression = createConditionalExpression;\nexports.createForLoopParams = createForLoopParams;\nexports.createFunctionExpression = createFunctionExpression;\nexports.createIfStatement = createIfStatement;\nexports.createInterpolation = createInterpolation;\nexports.createObjectExpression = createObjectExpression;\nexports.createObjectProperty = createObjectProperty;\nexports.createReturnStatement = createReturnStatement;\nexports.createRoot = createRoot;\nexports.createSequenceExpression = createSequenceExpression;\nexports.createSimpleExpression = createSimpleExpression;\nexports.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\nexports.createTemplateLiteral = createTemplateLiteral;\nexports.createTransformContext = createTransformContext;\nexports.createVNodeCall = createVNodeCall;\nexports.extractIdentifiers = extractIdentifiers;\nexports.findDir = findDir;\nexports.findProp = findProp;\nexports.forAliasRE = forAliasRE;\nexports.generate = generate;\nexports.getBaseTransformPreset = getBaseTransformPreset;\nexports.getConstantType = getConstantType;\nexports.getInnerRange = getInnerRange;\nexports.getMemoedVNodeCall = getMemoedVNodeCall;\nexports.getVNodeBlockHelper = getVNodeBlockHelper;\nexports.getVNodeHelper = getVNodeHelper;\nexports.hasDynamicKeyVBind = hasDynamicKeyVBind;\nexports.hasScopeRef = hasScopeRef;\nexports.helperNameMap = helperNameMap;\nexports.injectProp = injectProp;\nexports.isBuiltInType = isBuiltInType;\nexports.isCoreComponent = isCoreComponent;\nexports.isFunctionType = isFunctionType;\nexports.isInDestructureAssignment = isInDestructureAssignment;\nexports.isMemberExpression = isMemberExpression;\nexports.isMemberExpressionBrowser = isMemberExpressionBrowser;\nexports.isMemberExpressionNode = isMemberExpressionNode;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isSimpleIdentifier = isSimpleIdentifier;\nexports.isSlotOutlet = isSlotOutlet;\nexports.isStaticArgOf = isStaticArgOf;\nexports.isStaticExp = isStaticExp;\nexports.isStaticProperty = isStaticProperty;\nexports.isStaticPropertyKey = isStaticPropertyKey;\nexports.isTemplateNode = isTemplateNode;\nexports.isText = isText$1;\nexports.isVSlot = isVSlot;\nexports.locStub = locStub;\nexports.noopDirectiveTransform = noopDirectiveTransform;\nexports.processExpression = processExpression;\nexports.processFor = processFor;\nexports.processIf = processIf;\nexports.processSlotOutlet = processSlotOutlet;\nexports.registerRuntimeHelpers = registerRuntimeHelpers;\nexports.resolveComponentType = resolveComponentType;\nexports.stringifyExpression = stringifyExpression;\nexports.toValidAssetId = toValidAssetId;\nexports.trackSlotScopes = trackSlotScopes;\nexports.trackVForSlotScopes = trackVForSlotScopes;\nexports.transform = transform;\nexports.transformBind = transformBind;\nexports.transformElement = transformElement;\nexports.transformExpression = transformExpression;\nexports.transformModel = transformModel;\nexports.transformOn = transformOn;\nexports.traverseNode = traverseNode;\nexports.walkBlockDeclarations = walkBlockDeclarations;\nexports.walkFunctionParams = walkFunctionParams;\nexports.walkIdentifiers = walkIdentifiers;\nexports.warnDeprecation = warnDeprecation;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/compiler-core.cjs.prod.js')\n} else {\n  module.exports = require('./dist/compiler-core.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerCore = require('@vue/compiler-core');\nvar shared = require('@vue/shared');\n\nconst V_MODEL_RADIO = Symbol(`vModelRadio` );\nconst V_MODEL_CHECKBOX = Symbol(`vModelCheckbox` );\nconst V_MODEL_TEXT = Symbol(`vModelText` );\nconst V_MODEL_SELECT = Symbol(`vModelSelect` );\nconst V_MODEL_DYNAMIC = Symbol(`vModelDynamic` );\nconst V_ON_WITH_MODIFIERS = Symbol(`vOnModifiersGuard` );\nconst V_ON_WITH_KEYS = Symbol(`vOnKeysGuard` );\nconst V_SHOW = Symbol(`vShow` );\nconst TRANSITION = Symbol(`Transition` );\nconst TRANSITION_GROUP = Symbol(`TransitionGroup` );\ncompilerCore.registerRuntimeHelpers({\n  [V_MODEL_RADIO]: `vModelRadio`,\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\n  [V_MODEL_TEXT]: `vModelText`,\n  [V_MODEL_SELECT]: `vModelSelect`,\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\n  [V_ON_WITH_KEYS]: `withKeys`,\n  [V_SHOW]: `vShow`,\n  [TRANSITION]: `Transition`,\n  [TRANSITION_GROUP]: `TransitionGroup`\n});\n\nvar namedCharacterReferences = {\n\tGT: \">\",\n\tgt: \">\",\n\tLT: \"<\",\n\tlt: \"<\",\n\t\"ac;\": \"\u223E\",\n\t\"af;\": \"\u2061\",\n\tAMP: \"&\",\n\tamp: \"&\",\n\t\"ap;\": \"\u2248\",\n\t\"DD;\": \"\u2145\",\n\t\"dd;\": \"\u2146\",\n\tdeg: \"\u00B0\",\n\t\"ee;\": \"\u2147\",\n\t\"eg;\": \"\u2A9A\",\n\t\"el;\": \"\u2A99\",\n\tETH: \"\u00D0\",\n\teth: \"\u00F0\",\n\t\"gE;\": \"\u2267\",\n\t\"ge;\": \"\u2265\",\n\t\"Gg;\": \"\u22D9\",\n\t\"gg;\": \"\u226B\",\n\t\"gl;\": \"\u2277\",\n\t\"GT;\": \">\",\n\t\"Gt;\": \"\u226B\",\n\t\"gt;\": \">\",\n\t\"ic;\": \"\u2063\",\n\t\"ii;\": \"\u2148\",\n\t\"Im;\": \"\u2111\",\n\t\"in;\": \"\u2208\",\n\t\"it;\": \"\u2062\",\n\t\"lE;\": \"\u2266\",\n\t\"le;\": \"\u2264\",\n\t\"lg;\": \"\u2276\",\n\t\"Ll;\": \"\u22D8\",\n\t\"ll;\": \"\u226A\",\n\t\"LT;\": \"<\",\n\t\"Lt;\": \"\u226A\",\n\t\"lt;\": \"<\",\n\t\"mp;\": \"\u2213\",\n\t\"Mu;\": \"\u039C\",\n\t\"mu;\": \"\u03BC\",\n\t\"ne;\": \"\u2260\",\n\t\"ni;\": \"\u220B\",\n\tnot: \"\u00AC\",\n\t\"Nu;\": \"\u039D\",\n\t\"nu;\": \"\u03BD\",\n\t\"Or;\": \"\u2A54\",\n\t\"or;\": \"\u2228\",\n\t\"oS;\": \"\u24C8\",\n\t\"Pi;\": \"\u03A0\",\n\t\"pi;\": \"\u03C0\",\n\t\"pm;\": \"\u00B1\",\n\t\"Pr;\": \"\u2ABB\",\n\t\"pr;\": \"\u227A\",\n\t\"Re;\": \"\u211C\",\n\tREG: \"\u00AE\",\n\treg: \"\u00AE\",\n\t\"rx;\": \"\u211E\",\n\t\"Sc;\": \"\u2ABC\",\n\t\"sc;\": \"\u227B\",\n\tshy: \"\u00AD\",\n\tuml: \"\u00A8\",\n\t\"wp;\": \"\u2118\",\n\t\"wr;\": \"\u2240\",\n\t\"Xi;\": \"\u039E\",\n\t\"xi;\": \"\u03BE\",\n\tyen: \"\u00A5\",\n\t\"acd;\": \"\u223F\",\n\t\"acE;\": \"\u223E\u0333\",\n\t\"Acy;\": \"\u0410\",\n\t\"acy;\": \"\u0430\",\n\t\"Afr;\": \"\uD835\uDD04\",\n\t\"afr;\": \"\uD835\uDD1E\",\n\t\"AMP;\": \"&\",\n\t\"amp;\": \"&\",\n\t\"And;\": \"\u2A53\",\n\t\"and;\": \"\u2227\",\n\t\"ang;\": \"\u2220\",\n\t\"apE;\": \"\u2A70\",\n\t\"ape;\": \"\u224A\",\n\t\"ast;\": \"*\",\n\tAuml: \"\u00C4\",\n\tauml: \"\u00E4\",\n\t\"Bcy;\": \"\u0411\",\n\t\"bcy;\": \"\u0431\",\n\t\"Bfr;\": \"\uD835\uDD05\",\n\t\"bfr;\": \"\uD835\uDD1F\",\n\t\"bne;\": \"=\u20E5\",\n\t\"bot;\": \"\u22A5\",\n\t\"Cap;\": \"\u22D2\",\n\t\"cap;\": \"\u2229\",\n\tcent: \"\u00A2\",\n\t\"Cfr;\": \"\u212D\",\n\t\"cfr;\": \"\uD835\uDD20\",\n\t\"Chi;\": \"\u03A7\",\n\t\"chi;\": \"\u03C7\",\n\t\"cir;\": \"\u25CB\",\n\tCOPY: \"\u00A9\",\n\tcopy: \"\u00A9\",\n\t\"Cup;\": \"\u22D3\",\n\t\"cup;\": \"\u222A\",\n\t\"Dcy;\": \"\u0414\",\n\t\"dcy;\": \"\u0434\",\n\t\"deg;\": \"\u00B0\",\n\t\"Del;\": \"\u2207\",\n\t\"Dfr;\": \"\uD835\uDD07\",\n\t\"dfr;\": \"\uD835\uDD21\",\n\t\"die;\": \"\u00A8\",\n\t\"div;\": \"\u00F7\",\n\t\"Dot;\": \"\u00A8\",\n\t\"dot;\": \"\u02D9\",\n\t\"Ecy;\": \"\u042D\",\n\t\"ecy;\": \"\u044D\",\n\t\"Efr;\": \"\uD835\uDD08\",\n\t\"efr;\": \"\uD835\uDD22\",\n\t\"egs;\": \"\u2A96\",\n\t\"ell;\": \"\u2113\",\n\t\"els;\": \"\u2A95\",\n\t\"ENG;\": \"\u014A\",\n\t\"eng;\": \"\u014B\",\n\t\"Eta;\": \"\u0397\",\n\t\"eta;\": \"\u03B7\",\n\t\"ETH;\": \"\u00D0\",\n\t\"eth;\": \"\u00F0\",\n\tEuml: \"\u00CB\",\n\teuml: \"\u00EB\",\n\t\"Fcy;\": \"\u0424\",\n\t\"fcy;\": \"\u0444\",\n\t\"Ffr;\": \"\uD835\uDD09\",\n\t\"ffr;\": \"\uD835\uDD23\",\n\t\"gap;\": \"\u2A86\",\n\t\"Gcy;\": \"\u0413\",\n\t\"gcy;\": \"\u0433\",\n\t\"gEl;\": \"\u2A8C\",\n\t\"gel;\": \"\u22DB\",\n\t\"geq;\": \"\u2265\",\n\t\"ges;\": \"\u2A7E\",\n\t\"Gfr;\": \"\uD835\uDD0A\",\n\t\"gfr;\": \"\uD835\uDD24\",\n\t\"ggg;\": \"\u22D9\",\n\t\"gla;\": \"\u2AA5\",\n\t\"glE;\": \"\u2A92\",\n\t\"glj;\": \"\u2AA4\",\n\t\"gnE;\": \"\u2269\",\n\t\"gne;\": \"\u2A88\",\n\t\"Hat;\": \"^\",\n\t\"Hfr;\": \"\u210C\",\n\t\"hfr;\": \"\uD835\uDD25\",\n\t\"Icy;\": \"\u0418\",\n\t\"icy;\": \"\u0438\",\n\t\"iff;\": \"\u21D4\",\n\t\"Ifr;\": \"\u2111\",\n\t\"ifr;\": \"\uD835\uDD26\",\n\t\"Int;\": \"\u222C\",\n\t\"int;\": \"\u222B\",\n\tIuml: \"\u00CF\",\n\tiuml: \"\u00EF\",\n\t\"Jcy;\": \"\u0419\",\n\t\"jcy;\": \"\u0439\",\n\t\"Jfr;\": \"\uD835\uDD0D\",\n\t\"jfr;\": \"\uD835\uDD27\",\n\t\"Kcy;\": \"\u041A\",\n\t\"kcy;\": \"\u043A\",\n\t\"Kfr;\": \"\uD835\uDD0E\",\n\t\"kfr;\": \"\uD835\uDD28\",\n\t\"lap;\": \"\u2A85\",\n\t\"lat;\": \"\u2AAB\",\n\t\"Lcy;\": \"\u041B\",\n\t\"lcy;\": \"\u043B\",\n\t\"lEg;\": \"\u2A8B\",\n\t\"leg;\": \"\u22DA\",\n\t\"leq;\": \"\u2264\",\n\t\"les;\": \"\u2A7D\",\n\t\"Lfr;\": \"\uD835\uDD0F\",\n\t\"lfr;\": \"\uD835\uDD29\",\n\t\"lgE;\": \"\u2A91\",\n\t\"lnE;\": \"\u2268\",\n\t\"lne;\": \"\u2A87\",\n\t\"loz;\": \"\u25CA\",\n\t\"lrm;\": \"\u200E\",\n\t\"Lsh;\": \"\u21B0\",\n\t\"lsh;\": \"\u21B0\",\n\tmacr: \"\u00AF\",\n\t\"Map;\": \"\u2905\",\n\t\"map;\": \"\u21A6\",\n\t\"Mcy;\": \"\u041C\",\n\t\"mcy;\": \"\u043C\",\n\t\"Mfr;\": \"\uD835\uDD10\",\n\t\"mfr;\": \"\uD835\uDD2A\",\n\t\"mho;\": \"\u2127\",\n\t\"mid;\": \"\u2223\",\n\t\"nap;\": \"\u2249\",\n\tnbsp: \"\u00A0\",\n\t\"Ncy;\": \"\u041D\",\n\t\"ncy;\": \"\u043D\",\n\t\"Nfr;\": \"\uD835\uDD11\",\n\t\"nfr;\": \"\uD835\uDD2B\",\n\t\"ngE;\": \"\u2267\u0338\",\n\t\"nge;\": \"\u2271\",\n\t\"nGg;\": \"\u22D9\u0338\",\n\t\"nGt;\": \"\u226B\u20D2\",\n\t\"ngt;\": \"\u226F\",\n\t\"nis;\": \"\u22FC\",\n\t\"niv;\": \"\u220B\",\n\t\"nlE;\": \"\u2266\u0338\",\n\t\"nle;\": \"\u2270\",\n\t\"nLl;\": \"\u22D8\u0338\",\n\t\"nLt;\": \"\u226A\u20D2\",\n\t\"nlt;\": \"\u226E\",\n\t\"Not;\": \"\u2AEC\",\n\t\"not;\": \"\u00AC\",\n\t\"npr;\": \"\u2280\",\n\t\"nsc;\": \"\u2281\",\n\t\"num;\": \"#\",\n\t\"Ocy;\": \"\u041E\",\n\t\"ocy;\": \"\u043E\",\n\t\"Ofr;\": \"\uD835\uDD12\",\n\t\"ofr;\": \"\uD835\uDD2C\",\n\t\"ogt;\": \"\u29C1\",\n\t\"ohm;\": \"\u03A9\",\n\t\"olt;\": \"\u29C0\",\n\t\"ord;\": \"\u2A5D\",\n\tordf: \"\u00AA\",\n\tordm: \"\u00BA\",\n\t\"orv;\": \"\u2A5B\",\n\tOuml: \"\u00D6\",\n\touml: \"\u00F6\",\n\t\"par;\": \"\u2225\",\n\tpara: \"\u00B6\",\n\t\"Pcy;\": \"\u041F\",\n\t\"pcy;\": \"\u043F\",\n\t\"Pfr;\": \"\uD835\uDD13\",\n\t\"pfr;\": \"\uD835\uDD2D\",\n\t\"Phi;\": \"\u03A6\",\n\t\"phi;\": \"\u03C6\",\n\t\"piv;\": \"\u03D6\",\n\t\"prE;\": \"\u2AB3\",\n\t\"pre;\": \"\u2AAF\",\n\t\"Psi;\": \"\u03A8\",\n\t\"psi;\": \"\u03C8\",\n\t\"Qfr;\": \"\uD835\uDD14\",\n\t\"qfr;\": \"\uD835\uDD2E\",\n\tQUOT: \"\\\"\",\n\tquot: \"\\\"\",\n\t\"Rcy;\": \"\u0420\",\n\t\"rcy;\": \"\u0440\",\n\t\"REG;\": \"\u00AE\",\n\t\"reg;\": \"\u00AE\",\n\t\"Rfr;\": \"\u211C\",\n\t\"rfr;\": \"\uD835\uDD2F\",\n\t\"Rho;\": \"\u03A1\",\n\t\"rho;\": \"\u03C1\",\n\t\"rlm;\": \"\u200F\",\n\t\"Rsh;\": \"\u21B1\",\n\t\"rsh;\": \"\u21B1\",\n\t\"scE;\": \"\u2AB4\",\n\t\"sce;\": \"\u2AB0\",\n\t\"Scy;\": \"\u0421\",\n\t\"scy;\": \"\u0441\",\n\tsect: \"\u00A7\",\n\t\"Sfr;\": \"\uD835\uDD16\",\n\t\"sfr;\": \"\uD835\uDD30\",\n\t\"shy;\": \"\u00AD\",\n\t\"sim;\": \"\u223C\",\n\t\"smt;\": \"\u2AAA\",\n\t\"sol;\": \"/\",\n\t\"squ;\": \"\u25A1\",\n\t\"Sub;\": \"\u22D0\",\n\t\"sub;\": \"\u2282\",\n\t\"Sum;\": \"\u2211\",\n\t\"sum;\": \"\u2211\",\n\t\"Sup;\": \"\u22D1\",\n\t\"sup;\": \"\u2283\",\n\tsup1: \"\u00B9\",\n\tsup2: \"\u00B2\",\n\tsup3: \"\u00B3\",\n\t\"Tab;\": \"\\t\",\n\t\"Tau;\": \"\u03A4\",\n\t\"tau;\": \"\u03C4\",\n\t\"Tcy;\": \"\u0422\",\n\t\"tcy;\": \"\u0442\",\n\t\"Tfr;\": \"\uD835\uDD17\",\n\t\"tfr;\": \"\uD835\uDD31\",\n\t\"top;\": \"\u22A4\",\n\t\"Ucy;\": \"\u0423\",\n\t\"ucy;\": \"\u0443\",\n\t\"Ufr;\": \"\uD835\uDD18\",\n\t\"ufr;\": \"\uD835\uDD32\",\n\t\"uml;\": \"\u00A8\",\n\tUuml: \"\u00DC\",\n\tuuml: \"\u00FC\",\n\t\"Vcy;\": \"\u0412\",\n\t\"vcy;\": \"\u0432\",\n\t\"Vee;\": \"\u22C1\",\n\t\"vee;\": \"\u2228\",\n\t\"Vfr;\": \"\uD835\uDD19\",\n\t\"vfr;\": \"\uD835\uDD33\",\n\t\"Wfr;\": \"\uD835\uDD1A\",\n\t\"wfr;\": \"\uD835\uDD34\",\n\t\"Xfr;\": \"\uD835\uDD1B\",\n\t\"xfr;\": \"\uD835\uDD35\",\n\t\"Ycy;\": \"\u042B\",\n\t\"ycy;\": \"\u044B\",\n\t\"yen;\": \"\u00A5\",\n\t\"Yfr;\": \"\uD835\uDD1C\",\n\t\"yfr;\": \"\uD835\uDD36\",\n\tyuml: \"\u00FF\",\n\t\"Zcy;\": \"\u0417\",\n\t\"zcy;\": \"\u0437\",\n\t\"Zfr;\": \"\u2128\",\n\t\"zfr;\": \"\uD835\uDD37\",\n\t\"zwj;\": \"\u200D\",\n\tAcirc: \"\u00C2\",\n\tacirc: \"\u00E2\",\n\tacute: \"\u00B4\",\n\tAElig: \"\u00C6\",\n\taelig: \"\u00E6\",\n\t\"andd;\": \"\u2A5C\",\n\t\"andv;\": \"\u2A5A\",\n\t\"ange;\": \"\u29A4\",\n\t\"Aopf;\": \"\uD835\uDD38\",\n\t\"aopf;\": \"\uD835\uDD52\",\n\t\"apid;\": \"\u224B\",\n\t\"apos;\": \"'\",\n\tAring: \"\u00C5\",\n\taring: \"\u00E5\",\n\t\"Ascr;\": \"\uD835\uDC9C\",\n\t\"ascr;\": \"\uD835\uDCB6\",\n\t\"Auml;\": \"\u00C4\",\n\t\"auml;\": \"\u00E4\",\n\t\"Barv;\": \"\u2AE7\",\n\t\"bbrk;\": \"\u23B5\",\n\t\"Beta;\": \"\u0392\",\n\t\"beta;\": \"\u03B2\",\n\t\"beth;\": \"\u2136\",\n\t\"bNot;\": \"\u2AED\",\n\t\"bnot;\": \"\u2310\",\n\t\"Bopf;\": \"\uD835\uDD39\",\n\t\"bopf;\": \"\uD835\uDD53\",\n\t\"boxH;\": \"\u2550\",\n\t\"boxh;\": \"\u2500\",\n\t\"boxV;\": \"\u2551\",\n\t\"boxv;\": \"\u2502\",\n\t\"Bscr;\": \"\u212C\",\n\t\"bscr;\": \"\uD835\uDCB7\",\n\t\"bsim;\": \"\u223D\",\n\t\"bsol;\": \"\\\\\",\n\t\"bull;\": \"\u2022\",\n\t\"bump;\": \"\u224E\",\n\t\"caps;\": \"\u2229\uFE00\",\n\t\"Cdot;\": \"\u010A\",\n\t\"cdot;\": \"\u010B\",\n\tcedil: \"\u00B8\",\n\t\"cent;\": \"\u00A2\",\n\t\"CHcy;\": \"\u0427\",\n\t\"chcy;\": \"\u0447\",\n\t\"circ;\": \"\u02C6\",\n\t\"cirE;\": \"\u29C3\",\n\t\"cire;\": \"\u2257\",\n\t\"comp;\": \"\u2201\",\n\t\"cong;\": \"\u2245\",\n\t\"Copf;\": \"\u2102\",\n\t\"copf;\": \"\uD835\uDD54\",\n\t\"COPY;\": \"\u00A9\",\n\t\"copy;\": \"\u00A9\",\n\t\"Cscr;\": \"\uD835\uDC9E\",\n\t\"cscr;\": \"\uD835\uDCB8\",\n\t\"csub;\": \"\u2ACF\",\n\t\"csup;\": \"\u2AD0\",\n\t\"cups;\": \"\u222A\uFE00\",\n\t\"Darr;\": \"\u21A1\",\n\t\"dArr;\": \"\u21D3\",\n\t\"darr;\": \"\u2193\",\n\t\"dash;\": \"\u2010\",\n\t\"dHar;\": \"\u2965\",\n\t\"diam;\": \"\u22C4\",\n\t\"DJcy;\": \"\u0402\",\n\t\"djcy;\": \"\u0452\",\n\t\"Dopf;\": \"\uD835\uDD3B\",\n\t\"dopf;\": \"\uD835\uDD55\",\n\t\"Dscr;\": \"\uD835\uDC9F\",\n\t\"dscr;\": \"\uD835\uDCB9\",\n\t\"DScy;\": \"\u0405\",\n\t\"dscy;\": \"\u0455\",\n\t\"dsol;\": \"\u29F6\",\n\t\"dtri;\": \"\u25BF\",\n\t\"DZcy;\": \"\u040F\",\n\t\"dzcy;\": \"\u045F\",\n\t\"ecir;\": \"\u2256\",\n\tEcirc: \"\u00CA\",\n\tecirc: \"\u00EA\",\n\t\"Edot;\": \"\u0116\",\n\t\"eDot;\": \"\u2251\",\n\t\"edot;\": \"\u0117\",\n\t\"emsp;\": \"\u2003\",\n\t\"ensp;\": \"\u2002\",\n\t\"Eopf;\": \"\uD835\uDD3C\",\n\t\"eopf;\": \"\uD835\uDD56\",\n\t\"epar;\": \"\u22D5\",\n\t\"epsi;\": \"\u03B5\",\n\t\"Escr;\": \"\u2130\",\n\t\"escr;\": \"\u212F\",\n\t\"Esim;\": \"\u2A73\",\n\t\"esim;\": \"\u2242\",\n\t\"Euml;\": \"\u00CB\",\n\t\"euml;\": \"\u00EB\",\n\t\"euro;\": \"\u20AC\",\n\t\"excl;\": \"!\",\n\t\"flat;\": \"\u266D\",\n\t\"fnof;\": \"\u0192\",\n\t\"Fopf;\": \"\uD835\uDD3D\",\n\t\"fopf;\": \"\uD835\uDD57\",\n\t\"fork;\": \"\u22D4\",\n\t\"Fscr;\": \"\u2131\",\n\t\"fscr;\": \"\uD835\uDCBB\",\n\t\"Gdot;\": \"\u0120\",\n\t\"gdot;\": \"\u0121\",\n\t\"geqq;\": \"\u2267\",\n\t\"gesl;\": \"\u22DB\uFE00\",\n\t\"GJcy;\": \"\u0403\",\n\t\"gjcy;\": \"\u0453\",\n\t\"gnap;\": \"\u2A8A\",\n\t\"gneq;\": \"\u2A88\",\n\t\"Gopf;\": \"\uD835\uDD3E\",\n\t\"gopf;\": \"\uD835\uDD58\",\n\t\"Gscr;\": \"\uD835\uDCA2\",\n\t\"gscr;\": \"\u210A\",\n\t\"gsim;\": \"\u2273\",\n\t\"gtcc;\": \"\u2AA7\",\n\t\"gvnE;\": \"\u2269\uFE00\",\n\t\"half;\": \"\u00BD\",\n\t\"hArr;\": \"\u21D4\",\n\t\"harr;\": \"\u2194\",\n\t\"hbar;\": \"\u210F\",\n\t\"Hopf;\": \"\u210D\",\n\t\"hopf;\": \"\uD835\uDD59\",\n\t\"Hscr;\": \"\u210B\",\n\t\"hscr;\": \"\uD835\uDCBD\",\n\tIcirc: \"\u00CE\",\n\ticirc: \"\u00EE\",\n\t\"Idot;\": \"\u0130\",\n\t\"IEcy;\": \"\u0415\",\n\t\"iecy;\": \"\u0435\",\n\tiexcl: \"\u00A1\",\n\t\"imof;\": \"\u22B7\",\n\t\"IOcy;\": \"\u0401\",\n\t\"iocy;\": \"\u0451\",\n\t\"Iopf;\": \"\uD835\uDD40\",\n\t\"iopf;\": \"\uD835\uDD5A\",\n\t\"Iota;\": \"\u0399\",\n\t\"iota;\": \"\u03B9\",\n\t\"Iscr;\": \"\u2110\",\n\t\"iscr;\": \"\uD835\uDCBE\",\n\t\"isin;\": \"\u2208\",\n\t\"Iuml;\": \"\u00CF\",\n\t\"iuml;\": \"\u00EF\",\n\t\"Jopf;\": \"\uD835\uDD41\",\n\t\"jopf;\": \"\uD835\uDD5B\",\n\t\"Jscr;\": \"\uD835\uDCA5\",\n\t\"jscr;\": \"\uD835\uDCBF\",\n\t\"KHcy;\": \"\u0425\",\n\t\"khcy;\": \"\u0445\",\n\t\"KJcy;\": \"\u040C\",\n\t\"kjcy;\": \"\u045C\",\n\t\"Kopf;\": \"\uD835\uDD42\",\n\t\"kopf;\": \"\uD835\uDD5C\",\n\t\"Kscr;\": \"\uD835\uDCA6\",\n\t\"kscr;\": \"\uD835\uDCC0\",\n\t\"Lang;\": \"\u27EA\",\n\t\"lang;\": \"\u27E8\",\n\tlaquo: \"\u00AB\",\n\t\"Larr;\": \"\u219E\",\n\t\"lArr;\": \"\u21D0\",\n\t\"larr;\": \"\u2190\",\n\t\"late;\": \"\u2AAD\",\n\t\"lcub;\": \"{\",\n\t\"ldca;\": \"\u2936\",\n\t\"ldsh;\": \"\u21B2\",\n\t\"leqq;\": \"\u2266\",\n\t\"lesg;\": \"\u22DA\uFE00\",\n\t\"lHar;\": \"\u2962\",\n\t\"LJcy;\": \"\u0409\",\n\t\"ljcy;\": \"\u0459\",\n\t\"lnap;\": \"\u2A89\",\n\t\"lneq;\": \"\u2A87\",\n\t\"Lopf;\": \"\uD835\uDD43\",\n\t\"lopf;\": \"\uD835\uDD5D\",\n\t\"lozf;\": \"\u29EB\",\n\t\"lpar;\": \"(\",\n\t\"Lscr;\": \"\u2112\",\n\t\"lscr;\": \"\uD835\uDCC1\",\n\t\"lsim;\": \"\u2272\",\n\t\"lsqb;\": \"[\",\n\t\"ltcc;\": \"\u2AA6\",\n\t\"ltri;\": \"\u25C3\",\n\t\"lvnE;\": \"\u2268\uFE00\",\n\t\"macr;\": \"\u00AF\",\n\t\"male;\": \"\u2642\",\n\t\"malt;\": \"\u2720\",\n\tmicro: \"\u00B5\",\n\t\"mlcp;\": \"\u2ADB\",\n\t\"mldr;\": \"\u2026\",\n\t\"Mopf;\": \"\uD835\uDD44\",\n\t\"mopf;\": \"\uD835\uDD5E\",\n\t\"Mscr;\": \"\u2133\",\n\t\"mscr;\": \"\uD835\uDCC2\",\n\t\"nang;\": \"\u2220\u20D2\",\n\t\"napE;\": \"\u2A70\u0338\",\n\t\"nbsp;\": \"\u00A0\",\n\t\"ncap;\": \"\u2A43\",\n\t\"ncup;\": \"\u2A42\",\n\t\"ngeq;\": \"\u2271\",\n\t\"nges;\": \"\u2A7E\u0338\",\n\t\"ngtr;\": \"\u226F\",\n\t\"nGtv;\": \"\u226B\u0338\",\n\t\"nisd;\": \"\u22FA\",\n\t\"NJcy;\": \"\u040A\",\n\t\"njcy;\": \"\u045A\",\n\t\"nldr;\": \"\u2025\",\n\t\"nleq;\": \"\u2270\",\n\t\"nles;\": \"\u2A7D\u0338\",\n\t\"nLtv;\": \"\u226A\u0338\",\n\t\"nmid;\": \"\u2224\",\n\t\"Nopf;\": \"\u2115\",\n\t\"nopf;\": \"\uD835\uDD5F\",\n\t\"npar;\": \"\u2226\",\n\t\"npre;\": \"\u2AAF\u0338\",\n\t\"nsce;\": \"\u2AB0\u0338\",\n\t\"Nscr;\": \"\uD835\uDCA9\",\n\t\"nscr;\": \"\uD835\uDCC3\",\n\t\"nsim;\": \"\u2241\",\n\t\"nsub;\": \"\u2284\",\n\t\"nsup;\": \"\u2285\",\n\t\"ntgl;\": \"\u2279\",\n\t\"ntlg;\": \"\u2278\",\n\t\"nvap;\": \"\u224D\u20D2\",\n\t\"nvge;\": \"\u2265\u20D2\",\n\t\"nvgt;\": \">\u20D2\",\n\t\"nvle;\": \"\u2264\u20D2\",\n\t\"nvlt;\": \"<\u20D2\",\n\t\"oast;\": \"\u229B\",\n\t\"ocir;\": \"\u229A\",\n\tOcirc: \"\u00D4\",\n\tocirc: \"\u00F4\",\n\t\"odiv;\": \"\u2A38\",\n\t\"odot;\": \"\u2299\",\n\t\"ogon;\": \"\u02DB\",\n\t\"oint;\": \"\u222E\",\n\t\"omid;\": \"\u29B6\",\n\t\"Oopf;\": \"\uD835\uDD46\",\n\t\"oopf;\": \"\uD835\uDD60\",\n\t\"opar;\": \"\u29B7\",\n\t\"ordf;\": \"\u00AA\",\n\t\"ordm;\": \"\u00BA\",\n\t\"oror;\": \"\u2A56\",\n\t\"Oscr;\": \"\uD835\uDCAA\",\n\t\"oscr;\": \"\u2134\",\n\t\"osol;\": \"\u2298\",\n\t\"Ouml;\": \"\u00D6\",\n\t\"ouml;\": \"\u00F6\",\n\t\"para;\": \"\u00B6\",\n\t\"part;\": \"\u2202\",\n\t\"perp;\": \"\u22A5\",\n\t\"phiv;\": \"\u03D5\",\n\t\"plus;\": \"+\",\n\t\"Popf;\": \"\u2119\",\n\t\"popf;\": \"\uD835\uDD61\",\n\tpound: \"\u00A3\",\n\t\"prap;\": \"\u2AB7\",\n\t\"prec;\": \"\u227A\",\n\t\"prnE;\": \"\u2AB5\",\n\t\"prod;\": \"\u220F\",\n\t\"prop;\": \"\u221D\",\n\t\"Pscr;\": \"\uD835\uDCAB\",\n\t\"pscr;\": \"\uD835\uDCC5\",\n\t\"qint;\": \"\u2A0C\",\n\t\"Qopf;\": \"\u211A\",\n\t\"qopf;\": \"\uD835\uDD62\",\n\t\"Qscr;\": \"\uD835\uDCAC\",\n\t\"qscr;\": \"\uD835\uDCC6\",\n\t\"QUOT;\": \"\\\"\",\n\t\"quot;\": \"\\\"\",\n\t\"race;\": \"\u223D\u0331\",\n\t\"Rang;\": \"\u27EB\",\n\t\"rang;\": \"\u27E9\",\n\traquo: \"\u00BB\",\n\t\"Rarr;\": \"\u21A0\",\n\t\"rArr;\": \"\u21D2\",\n\t\"rarr;\": \"\u2192\",\n\t\"rcub;\": \"}\",\n\t\"rdca;\": \"\u2937\",\n\t\"rdsh;\": \"\u21B3\",\n\t\"real;\": \"\u211C\",\n\t\"rect;\": \"\u25AD\",\n\t\"rHar;\": \"\u2964\",\n\t\"rhov;\": \"\u03F1\",\n\t\"ring;\": \"\u02DA\",\n\t\"Ropf;\": \"\u211D\",\n\t\"ropf;\": \"\uD835\uDD63\",\n\t\"rpar;\": \")\",\n\t\"Rscr;\": \"\u211B\",\n\t\"rscr;\": \"\uD835\uDCC7\",\n\t\"rsqb;\": \"]\",\n\t\"rtri;\": \"\u25B9\",\n\t\"scap;\": \"\u2AB8\",\n\t\"scnE;\": \"\u2AB6\",\n\t\"sdot;\": \"\u22C5\",\n\t\"sect;\": \"\u00A7\",\n\t\"semi;\": \";\",\n\t\"sext;\": \"\u2736\",\n\t\"SHcy;\": \"\u0428\",\n\t\"shcy;\": \"\u0448\",\n\t\"sime;\": \"\u2243\",\n\t\"simg;\": \"\u2A9E\",\n\t\"siml;\": \"\u2A9D\",\n\t\"smid;\": \"\u2223\",\n\t\"smte;\": \"\u2AAC\",\n\t\"solb;\": \"\u29C4\",\n\t\"Sopf;\": \"\uD835\uDD4A\",\n\t\"sopf;\": \"\uD835\uDD64\",\n\t\"spar;\": \"\u2225\",\n\t\"Sqrt;\": \"\u221A\",\n\t\"squf;\": \"\u25AA\",\n\t\"Sscr;\": \"\uD835\uDCAE\",\n\t\"sscr;\": \"\uD835\uDCC8\",\n\t\"Star;\": \"\u22C6\",\n\t\"star;\": \"\u2606\",\n\t\"subE;\": \"\u2AC5\",\n\t\"sube;\": \"\u2286\",\n\t\"succ;\": \"\u227B\",\n\t\"sung;\": \"\u266A\",\n\t\"sup1;\": \"\u00B9\",\n\t\"sup2;\": \"\u00B2\",\n\t\"sup3;\": \"\u00B3\",\n\t\"supE;\": \"\u2AC6\",\n\t\"supe;\": \"\u2287\",\n\tszlig: \"\u00DF\",\n\t\"tbrk;\": \"\u23B4\",\n\t\"tdot;\": \"\u20DB\",\n\tTHORN: \"\u00DE\",\n\tthorn: \"\u00FE\",\n\ttimes: \"\u00D7\",\n\t\"tint;\": \"\u222D\",\n\t\"toea;\": \"\u2928\",\n\t\"Topf;\": \"\uD835\uDD4B\",\n\t\"topf;\": \"\uD835\uDD65\",\n\t\"tosa;\": \"\u2929\",\n\t\"trie;\": \"\u225C\",\n\t\"Tscr;\": \"\uD835\uDCAF\",\n\t\"tscr;\": \"\uD835\uDCC9\",\n\t\"TScy;\": \"\u0426\",\n\t\"tscy;\": \"\u0446\",\n\t\"Uarr;\": \"\u219F\",\n\t\"uArr;\": \"\u21D1\",\n\t\"uarr;\": \"\u2191\",\n\tUcirc: \"\u00DB\",\n\tucirc: \"\u00FB\",\n\t\"uHar;\": \"\u2963\",\n\t\"Uopf;\": \"\uD835\uDD4C\",\n\t\"uopf;\": \"\uD835\uDD66\",\n\t\"Upsi;\": \"\u03D2\",\n\t\"upsi;\": \"\u03C5\",\n\t\"Uscr;\": \"\uD835\uDCB0\",\n\t\"uscr;\": \"\uD835\uDCCA\",\n\t\"utri;\": \"\u25B5\",\n\t\"Uuml;\": \"\u00DC\",\n\t\"uuml;\": \"\u00FC\",\n\t\"vArr;\": \"\u21D5\",\n\t\"varr;\": \"\u2195\",\n\t\"Vbar;\": \"\u2AEB\",\n\t\"vBar;\": \"\u2AE8\",\n\t\"Vert;\": \"\u2016\",\n\t\"vert;\": \"|\",\n\t\"Vopf;\": \"\uD835\uDD4D\",\n\t\"vopf;\": \"\uD835\uDD67\",\n\t\"Vscr;\": \"\uD835\uDCB1\",\n\t\"vscr;\": \"\uD835\uDCCB\",\n\t\"Wopf;\": \"\uD835\uDD4E\",\n\t\"wopf;\": \"\uD835\uDD68\",\n\t\"Wscr;\": \"\uD835\uDCB2\",\n\t\"wscr;\": \"\uD835\uDCCC\",\n\t\"xcap;\": \"\u22C2\",\n\t\"xcup;\": \"\u22C3\",\n\t\"xmap;\": \"\u27FC\",\n\t\"xnis;\": \"\u22FB\",\n\t\"Xopf;\": \"\uD835\uDD4F\",\n\t\"xopf;\": \"\uD835\uDD69\",\n\t\"Xscr;\": \"\uD835\uDCB3\",\n\t\"xscr;\": \"\uD835\uDCCD\",\n\t\"xvee;\": \"\u22C1\",\n\t\"YAcy;\": \"\u042F\",\n\t\"yacy;\": \"\u044F\",\n\t\"YIcy;\": \"\u0407\",\n\t\"yicy;\": \"\u0457\",\n\t\"Yopf;\": \"\uD835\uDD50\",\n\t\"yopf;\": \"\uD835\uDD6A\",\n\t\"Yscr;\": \"\uD835\uDCB4\",\n\t\"yscr;\": \"\uD835\uDCCE\",\n\t\"YUcy;\": \"\u042E\",\n\t\"yucy;\": \"\u044E\",\n\t\"Yuml;\": \"\u0178\",\n\t\"yuml;\": \"\u00FF\",\n\t\"Zdot;\": \"\u017B\",\n\t\"zdot;\": \"\u017C\",\n\t\"Zeta;\": \"\u0396\",\n\t\"zeta;\": \"\u03B6\",\n\t\"ZHcy;\": \"\u0416\",\n\t\"zhcy;\": \"\u0436\",\n\t\"Zopf;\": \"\u2124\",\n\t\"zopf;\": \"\uD835\uDD6B\",\n\t\"Zscr;\": \"\uD835\uDCB5\",\n\t\"zscr;\": \"\uD835\uDCCF\",\n\t\"zwnj;\": \"\u200C\",\n\tAacute: \"\u00C1\",\n\taacute: \"\u00E1\",\n\t\"Acirc;\": \"\u00C2\",\n\t\"acirc;\": \"\u00E2\",\n\t\"acute;\": \"\u00B4\",\n\t\"AElig;\": \"\u00C6\",\n\t\"aelig;\": \"\u00E6\",\n\tAgrave: \"\u00C0\",\n\tagrave: \"\u00E0\",\n\t\"aleph;\": \"\u2135\",\n\t\"Alpha;\": \"\u0391\",\n\t\"alpha;\": \"\u03B1\",\n\t\"Amacr;\": \"\u0100\",\n\t\"amacr;\": \"\u0101\",\n\t\"amalg;\": \"\u2A3F\",\n\t\"angle;\": \"\u2220\",\n\t\"angrt;\": \"\u221F\",\n\t\"angst;\": \"\u00C5\",\n\t\"Aogon;\": \"\u0104\",\n\t\"aogon;\": \"\u0105\",\n\t\"Aring;\": \"\u00C5\",\n\t\"aring;\": \"\u00E5\",\n\t\"asymp;\": \"\u2248\",\n\tAtilde: \"\u00C3\",\n\tatilde: \"\u00E3\",\n\t\"awint;\": \"\u2A11\",\n\t\"bcong;\": \"\u224C\",\n\t\"bdquo;\": \"\u201E\",\n\t\"bepsi;\": \"\u03F6\",\n\t\"blank;\": \"\u2423\",\n\t\"blk12;\": \"\u2592\",\n\t\"blk14;\": \"\u2591\",\n\t\"blk34;\": \"\u2593\",\n\t\"block;\": \"\u2588\",\n\t\"boxDL;\": \"\u2557\",\n\t\"boxDl;\": \"\u2556\",\n\t\"boxdL;\": \"\u2555\",\n\t\"boxdl;\": \"\u2510\",\n\t\"boxDR;\": \"\u2554\",\n\t\"boxDr;\": \"\u2553\",\n\t\"boxdR;\": \"\u2552\",\n\t\"boxdr;\": \"\u250C\",\n\t\"boxHD;\": \"\u2566\",\n\t\"boxHd;\": \"\u2564\",\n\t\"boxhD;\": \"\u2565\",\n\t\"boxhd;\": \"\u252C\",\n\t\"boxHU;\": \"\u2569\",\n\t\"boxHu;\": \"\u2567\",\n\t\"boxhU;\": \"\u2568\",\n\t\"boxhu;\": \"\u2534\",\n\t\"boxUL;\": \"\u255D\",\n\t\"boxUl;\": \"\u255C\",\n\t\"boxuL;\": \"\u255B\",\n\t\"boxul;\": \"\u2518\",\n\t\"boxUR;\": \"\u255A\",\n\t\"boxUr;\": \"\u2559\",\n\t\"boxuR;\": \"\u2558\",\n\t\"boxur;\": \"\u2514\",\n\t\"boxVH;\": \"\u256C\",\n\t\"boxVh;\": \"\u256B\",\n\t\"boxvH;\": \"\u256A\",\n\t\"boxvh;\": \"\u253C\",\n\t\"boxVL;\": \"\u2563\",\n\t\"boxVl;\": \"\u2562\",\n\t\"boxvL;\": \"\u2561\",\n\t\"boxvl;\": \"\u2524\",\n\t\"boxVR;\": \"\u2560\",\n\t\"boxVr;\": \"\u255F\",\n\t\"boxvR;\": \"\u255E\",\n\t\"boxvr;\": \"\u251C\",\n\t\"Breve;\": \"\u02D8\",\n\t\"breve;\": \"\u02D8\",\n\tbrvbar: \"\u00A6\",\n\t\"bsemi;\": \"\u204F\",\n\t\"bsime;\": \"\u22CD\",\n\t\"bsolb;\": \"\u29C5\",\n\t\"bumpE;\": \"\u2AAE\",\n\t\"bumpe;\": \"\u224F\",\n\t\"caret;\": \"\u2041\",\n\t\"caron;\": \"\u02C7\",\n\t\"ccaps;\": \"\u2A4D\",\n\tCcedil: \"\u00C7\",\n\tccedil: \"\u00E7\",\n\t\"Ccirc;\": \"\u0108\",\n\t\"ccirc;\": \"\u0109\",\n\t\"ccups;\": \"\u2A4C\",\n\t\"cedil;\": \"\u00B8\",\n\t\"check;\": \"\u2713\",\n\t\"clubs;\": \"\u2663\",\n\t\"Colon;\": \"\u2237\",\n\t\"colon;\": \":\",\n\t\"comma;\": \",\",\n\t\"crarr;\": \"\u21B5\",\n\t\"Cross;\": \"\u2A2F\",\n\t\"cross;\": \"\u2717\",\n\t\"csube;\": \"\u2AD1\",\n\t\"csupe;\": \"\u2AD2\",\n\t\"ctdot;\": \"\u22EF\",\n\t\"cuepr;\": \"\u22DE\",\n\t\"cuesc;\": \"\u22DF\",\n\t\"cupor;\": \"\u2A45\",\n\tcurren: \"\u00A4\",\n\t\"cuvee;\": \"\u22CE\",\n\t\"cuwed;\": \"\u22CF\",\n\t\"cwint;\": \"\u2231\",\n\t\"Dashv;\": \"\u2AE4\",\n\t\"dashv;\": \"\u22A3\",\n\t\"dblac;\": \"\u02DD\",\n\t\"ddarr;\": \"\u21CA\",\n\t\"Delta;\": \"\u0394\",\n\t\"delta;\": \"\u03B4\",\n\t\"dharl;\": \"\u21C3\",\n\t\"dharr;\": \"\u21C2\",\n\t\"diams;\": \"\u2666\",\n\t\"disin;\": \"\u22F2\",\n\tdivide: \"\u00F7\",\n\t\"doteq;\": \"\u2250\",\n\t\"dtdot;\": \"\u22F1\",\n\t\"dtrif;\": \"\u25BE\",\n\t\"duarr;\": \"\u21F5\",\n\t\"duhar;\": \"\u296F\",\n\tEacute: \"\u00C9\",\n\teacute: \"\u00E9\",\n\t\"Ecirc;\": \"\u00CA\",\n\t\"ecirc;\": \"\u00EA\",\n\t\"eDDot;\": \"\u2A77\",\n\t\"efDot;\": \"\u2252\",\n\tEgrave: \"\u00C8\",\n\tegrave: \"\u00E8\",\n\t\"Emacr;\": \"\u0112\",\n\t\"emacr;\": \"\u0113\",\n\t\"empty;\": \"\u2205\",\n\t\"Eogon;\": \"\u0118\",\n\t\"eogon;\": \"\u0119\",\n\t\"eplus;\": \"\u2A71\",\n\t\"epsiv;\": \"\u03F5\",\n\t\"eqsim;\": \"\u2242\",\n\t\"Equal;\": \"\u2A75\",\n\t\"equiv;\": \"\u2261\",\n\t\"erarr;\": \"\u2971\",\n\t\"erDot;\": \"\u2253\",\n\t\"esdot;\": \"\u2250\",\n\t\"exist;\": \"\u2203\",\n\t\"fflig;\": \"\uFB00\",\n\t\"filig;\": \"\uFB01\",\n\t\"fjlig;\": \"fj\",\n\t\"fllig;\": \"\uFB02\",\n\t\"fltns;\": \"\u25B1\",\n\t\"forkv;\": \"\u2AD9\",\n\tfrac12: \"\u00BD\",\n\tfrac14: \"\u00BC\",\n\tfrac34: \"\u00BE\",\n\t\"frasl;\": \"\u2044\",\n\t\"frown;\": \"\u2322\",\n\t\"Gamma;\": \"\u0393\",\n\t\"gamma;\": \"\u03B3\",\n\t\"Gcirc;\": \"\u011C\",\n\t\"gcirc;\": \"\u011D\",\n\t\"gescc;\": \"\u2AA9\",\n\t\"gimel;\": \"\u2137\",\n\t\"gneqq;\": \"\u2269\",\n\t\"gnsim;\": \"\u22E7\",\n\t\"grave;\": \"`\",\n\t\"gsime;\": \"\u2A8E\",\n\t\"gsiml;\": \"\u2A90\",\n\t\"gtcir;\": \"\u2A7A\",\n\t\"gtdot;\": \"\u22D7\",\n\t\"Hacek;\": \"\u02C7\",\n\t\"harrw;\": \"\u21AD\",\n\t\"Hcirc;\": \"\u0124\",\n\t\"hcirc;\": \"\u0125\",\n\t\"hoarr;\": \"\u21FF\",\n\tIacute: \"\u00CD\",\n\tiacute: \"\u00ED\",\n\t\"Icirc;\": \"\u00CE\",\n\t\"icirc;\": \"\u00EE\",\n\t\"iexcl;\": \"\u00A1\",\n\tIgrave: \"\u00CC\",\n\tigrave: \"\u00EC\",\n\t\"iiint;\": \"\u222D\",\n\t\"iiota;\": \"\u2129\",\n\t\"IJlig;\": \"\u0132\",\n\t\"ijlig;\": \"\u0133\",\n\t\"Imacr;\": \"\u012A\",\n\t\"imacr;\": \"\u012B\",\n\t\"image;\": \"\u2111\",\n\t\"imath;\": \"\u0131\",\n\t\"imped;\": \"\u01B5\",\n\t\"infin;\": \"\u221E\",\n\t\"Iogon;\": \"\u012E\",\n\t\"iogon;\": \"\u012F\",\n\t\"iprod;\": \"\u2A3C\",\n\tiquest: \"\u00BF\",\n\t\"isinE;\": \"\u22F9\",\n\t\"isins;\": \"\u22F4\",\n\t\"isinv;\": \"\u2208\",\n\t\"Iukcy;\": \"\u0406\",\n\t\"iukcy;\": \"\u0456\",\n\t\"Jcirc;\": \"\u0134\",\n\t\"jcirc;\": \"\u0135\",\n\t\"jmath;\": \"\u0237\",\n\t\"Jukcy;\": \"\u0404\",\n\t\"jukcy;\": \"\u0454\",\n\t\"Kappa;\": \"\u039A\",\n\t\"kappa;\": \"\u03BA\",\n\t\"lAarr;\": \"\u21DA\",\n\t\"langd;\": \"\u2991\",\n\t\"laquo;\": \"\u00AB\",\n\t\"larrb;\": \"\u21E4\",\n\t\"lates;\": \"\u2AAD\uFE00\",\n\t\"lBarr;\": \"\u290E\",\n\t\"lbarr;\": \"\u290C\",\n\t\"lbbrk;\": \"\u2772\",\n\t\"lbrke;\": \"\u298B\",\n\t\"lceil;\": \"\u2308\",\n\t\"ldquo;\": \"\u201C\",\n\t\"lescc;\": \"\u2AA8\",\n\t\"lhard;\": \"\u21BD\",\n\t\"lharu;\": \"\u21BC\",\n\t\"lhblk;\": \"\u2584\",\n\t\"llarr;\": \"\u21C7\",\n\t\"lltri;\": \"\u25FA\",\n\t\"lneqq;\": \"\u2268\",\n\t\"lnsim;\": \"\u22E6\",\n\t\"loang;\": \"\u27EC\",\n\t\"loarr;\": \"\u21FD\",\n\t\"lobrk;\": \"\u27E6\",\n\t\"lopar;\": \"\u2985\",\n\t\"lrarr;\": \"\u21C6\",\n\t\"lrhar;\": \"\u21CB\",\n\t\"lrtri;\": \"\u22BF\",\n\t\"lsime;\": \"\u2A8D\",\n\t\"lsimg;\": \"\u2A8F\",\n\t\"lsquo;\": \"\u2018\",\n\t\"ltcir;\": \"\u2A79\",\n\t\"ltdot;\": \"\u22D6\",\n\t\"ltrie;\": \"\u22B4\",\n\t\"ltrif;\": \"\u25C2\",\n\t\"mdash;\": \"\u2014\",\n\t\"mDDot;\": \"\u223A\",\n\t\"micro;\": \"\u00B5\",\n\tmiddot: \"\u00B7\",\n\t\"minus;\": \"\u2212\",\n\t\"mumap;\": \"\u22B8\",\n\t\"nabla;\": \"\u2207\",\n\t\"napid;\": \"\u224B\u0338\",\n\t\"napos;\": \"\u0149\",\n\t\"natur;\": \"\u266E\",\n\t\"nbump;\": \"\u224E\u0338\",\n\t\"ncong;\": \"\u2247\",\n\t\"ndash;\": \"\u2013\",\n\t\"neArr;\": \"\u21D7\",\n\t\"nearr;\": \"\u2197\",\n\t\"nedot;\": \"\u2250\u0338\",\n\t\"nesim;\": \"\u2242\u0338\",\n\t\"ngeqq;\": \"\u2267\u0338\",\n\t\"ngsim;\": \"\u2275\",\n\t\"nhArr;\": \"\u21CE\",\n\t\"nharr;\": \"\u21AE\",\n\t\"nhpar;\": \"\u2AF2\",\n\t\"nlArr;\": \"\u21CD\",\n\t\"nlarr;\": \"\u219A\",\n\t\"nleqq;\": \"\u2266\u0338\",\n\t\"nless;\": \"\u226E\",\n\t\"nlsim;\": \"\u2274\",\n\t\"nltri;\": \"\u22EA\",\n\t\"notin;\": \"\u2209\",\n\t\"notni;\": \"\u220C\",\n\t\"npart;\": \"\u2202\u0338\",\n\t\"nprec;\": \"\u2280\",\n\t\"nrArr;\": \"\u21CF\",\n\t\"nrarr;\": \"\u219B\",\n\t\"nrtri;\": \"\u22EB\",\n\t\"nsime;\": \"\u2244\",\n\t\"nsmid;\": \"\u2224\",\n\t\"nspar;\": \"\u2226\",\n\t\"nsubE;\": \"\u2AC5\u0338\",\n\t\"nsube;\": \"\u2288\",\n\t\"nsucc;\": \"\u2281\",\n\t\"nsupE;\": \"\u2AC6\u0338\",\n\t\"nsupe;\": \"\u2289\",\n\tNtilde: \"\u00D1\",\n\tntilde: \"\u00F1\",\n\t\"numsp;\": \"\u2007\",\n\t\"nvsim;\": \"\u223C\u20D2\",\n\t\"nwArr;\": \"\u21D6\",\n\t\"nwarr;\": \"\u2196\",\n\tOacute: \"\u00D3\",\n\toacute: \"\u00F3\",\n\t\"Ocirc;\": \"\u00D4\",\n\t\"ocirc;\": \"\u00F4\",\n\t\"odash;\": \"\u229D\",\n\t\"OElig;\": \"\u0152\",\n\t\"oelig;\": \"\u0153\",\n\t\"ofcir;\": \"\u29BF\",\n\tOgrave: \"\u00D2\",\n\tograve: \"\u00F2\",\n\t\"ohbar;\": \"\u29B5\",\n\t\"olarr;\": \"\u21BA\",\n\t\"olcir;\": \"\u29BE\",\n\t\"oline;\": \"\u203E\",\n\t\"Omacr;\": \"\u014C\",\n\t\"omacr;\": \"\u014D\",\n\t\"Omega;\": \"\u03A9\",\n\t\"omega;\": \"\u03C9\",\n\t\"operp;\": \"\u29B9\",\n\t\"oplus;\": \"\u2295\",\n\t\"orarr;\": \"\u21BB\",\n\t\"order;\": \"\u2134\",\n\tOslash: \"\u00D8\",\n\toslash: \"\u00F8\",\n\tOtilde: \"\u00D5\",\n\totilde: \"\u00F5\",\n\t\"ovbar;\": \"\u233D\",\n\t\"parsl;\": \"\u2AFD\",\n\t\"phone;\": \"\u260E\",\n\t\"plusb;\": \"\u229E\",\n\t\"pluse;\": \"\u2A72\",\n\tplusmn: \"\u00B1\",\n\t\"pound;\": \"\u00A3\",\n\t\"prcue;\": \"\u227C\",\n\t\"Prime;\": \"\u2033\",\n\t\"prime;\": \"\u2032\",\n\t\"prnap;\": \"\u2AB9\",\n\t\"prsim;\": \"\u227E\",\n\t\"quest;\": \"?\",\n\t\"rAarr;\": \"\u21DB\",\n\t\"radic;\": \"\u221A\",\n\t\"rangd;\": \"\u2992\",\n\t\"range;\": \"\u29A5\",\n\t\"raquo;\": \"\u00BB\",\n\t\"rarrb;\": \"\u21E5\",\n\t\"rarrc;\": \"\u2933\",\n\t\"rarrw;\": \"\u219D\",\n\t\"ratio;\": \"\u2236\",\n\t\"RBarr;\": \"\u2910\",\n\t\"rBarr;\": \"\u290F\",\n\t\"rbarr;\": \"\u290D\",\n\t\"rbbrk;\": \"\u2773\",\n\t\"rbrke;\": \"\u298C\",\n\t\"rceil;\": \"\u2309\",\n\t\"rdquo;\": \"\u201D\",\n\t\"reals;\": \"\u211D\",\n\t\"rhard;\": \"\u21C1\",\n\t\"rharu;\": \"\u21C0\",\n\t\"rlarr;\": \"\u21C4\",\n\t\"rlhar;\": \"\u21CC\",\n\t\"rnmid;\": \"\u2AEE\",\n\t\"roang;\": \"\u27ED\",\n\t\"roarr;\": \"\u21FE\",\n\t\"robrk;\": \"\u27E7\",\n\t\"ropar;\": \"\u2986\",\n\t\"rrarr;\": \"\u21C9\",\n\t\"rsquo;\": \"\u2019\",\n\t\"rtrie;\": \"\u22B5\",\n\t\"rtrif;\": \"\u25B8\",\n\t\"sbquo;\": \"\u201A\",\n\t\"sccue;\": \"\u227D\",\n\t\"Scirc;\": \"\u015C\",\n\t\"scirc;\": \"\u015D\",\n\t\"scnap;\": \"\u2ABA\",\n\t\"scsim;\": \"\u227F\",\n\t\"sdotb;\": \"\u22A1\",\n\t\"sdote;\": \"\u2A66\",\n\t\"seArr;\": \"\u21D8\",\n\t\"searr;\": \"\u2198\",\n\t\"setmn;\": \"\u2216\",\n\t\"sharp;\": \"\u266F\",\n\t\"Sigma;\": \"\u03A3\",\n\t\"sigma;\": \"\u03C3\",\n\t\"simeq;\": \"\u2243\",\n\t\"simgE;\": \"\u2AA0\",\n\t\"simlE;\": \"\u2A9F\",\n\t\"simne;\": \"\u2246\",\n\t\"slarr;\": \"\u2190\",\n\t\"smile;\": \"\u2323\",\n\t\"smtes;\": \"\u2AAC\uFE00\",\n\t\"sqcap;\": \"\u2293\",\n\t\"sqcup;\": \"\u2294\",\n\t\"sqsub;\": \"\u228F\",\n\t\"sqsup;\": \"\u2290\",\n\t\"srarr;\": \"\u2192\",\n\t\"starf;\": \"\u2605\",\n\t\"strns;\": \"\u00AF\",\n\t\"subnE;\": \"\u2ACB\",\n\t\"subne;\": \"\u228A\",\n\t\"supnE;\": \"\u2ACC\",\n\t\"supne;\": \"\u228B\",\n\t\"swArr;\": \"\u21D9\",\n\t\"swarr;\": \"\u2199\",\n\t\"szlig;\": \"\u00DF\",\n\t\"Theta;\": \"\u0398\",\n\t\"theta;\": \"\u03B8\",\n\t\"thkap;\": \"\u2248\",\n\t\"THORN;\": \"\u00DE\",\n\t\"thorn;\": \"\u00FE\",\n\t\"Tilde;\": \"\u223C\",\n\t\"tilde;\": \"\u02DC\",\n\t\"times;\": \"\u00D7\",\n\t\"TRADE;\": \"\u2122\",\n\t\"trade;\": \"\u2122\",\n\t\"trisb;\": \"\u29CD\",\n\t\"TSHcy;\": \"\u040B\",\n\t\"tshcy;\": \"\u045B\",\n\t\"twixt;\": \"\u226C\",\n\tUacute: \"\u00DA\",\n\tuacute: \"\u00FA\",\n\t\"Ubrcy;\": \"\u040E\",\n\t\"ubrcy;\": \"\u045E\",\n\t\"Ucirc;\": \"\u00DB\",\n\t\"ucirc;\": \"\u00FB\",\n\t\"udarr;\": \"\u21C5\",\n\t\"udhar;\": \"\u296E\",\n\tUgrave: \"\u00D9\",\n\tugrave: \"\u00F9\",\n\t\"uharl;\": \"\u21BF\",\n\t\"uharr;\": \"\u21BE\",\n\t\"uhblk;\": \"\u2580\",\n\t\"ultri;\": \"\u25F8\",\n\t\"Umacr;\": \"\u016A\",\n\t\"umacr;\": \"\u016B\",\n\t\"Union;\": \"\u22C3\",\n\t\"Uogon;\": \"\u0172\",\n\t\"uogon;\": \"\u0173\",\n\t\"uplus;\": \"\u228E\",\n\t\"upsih;\": \"\u03D2\",\n\t\"UpTee;\": \"\u22A5\",\n\t\"Uring;\": \"\u016E\",\n\t\"uring;\": \"\u016F\",\n\t\"urtri;\": \"\u25F9\",\n\t\"utdot;\": \"\u22F0\",\n\t\"utrif;\": \"\u25B4\",\n\t\"uuarr;\": \"\u21C8\",\n\t\"varpi;\": \"\u03D6\",\n\t\"vBarv;\": \"\u2AE9\",\n\t\"VDash;\": \"\u22AB\",\n\t\"Vdash;\": \"\u22A9\",\n\t\"vDash;\": \"\u22A8\",\n\t\"vdash;\": \"\u22A2\",\n\t\"veeeq;\": \"\u225A\",\n\t\"vltri;\": \"\u22B2\",\n\t\"vnsub;\": \"\u2282\u20D2\",\n\t\"vnsup;\": \"\u2283\u20D2\",\n\t\"vprop;\": \"\u221D\",\n\t\"vrtri;\": \"\u22B3\",\n\t\"Wcirc;\": \"\u0174\",\n\t\"wcirc;\": \"\u0175\",\n\t\"Wedge;\": \"\u22C0\",\n\t\"wedge;\": \"\u2227\",\n\t\"xcirc;\": \"\u25EF\",\n\t\"xdtri;\": \"\u25BD\",\n\t\"xhArr;\": \"\u27FA\",\n\t\"xharr;\": \"\u27F7\",\n\t\"xlArr;\": \"\u27F8\",\n\t\"xlarr;\": \"\u27F5\",\n\t\"xodot;\": \"\u2A00\",\n\t\"xrArr;\": \"\u27F9\",\n\t\"xrarr;\": \"\u27F6\",\n\t\"xutri;\": \"\u25B3\",\n\tYacute: \"\u00DD\",\n\tyacute: \"\u00FD\",\n\t\"Ycirc;\": \"\u0176\",\n\t\"ycirc;\": \"\u0177\",\n\t\"Aacute;\": \"\u00C1\",\n\t\"aacute;\": \"\u00E1\",\n\t\"Abreve;\": \"\u0102\",\n\t\"abreve;\": \"\u0103\",\n\t\"Agrave;\": \"\u00C0\",\n\t\"agrave;\": \"\u00E0\",\n\t\"andand;\": \"\u2A55\",\n\t\"angmsd;\": \"\u2221\",\n\t\"angsph;\": \"\u2222\",\n\t\"apacir;\": \"\u2A6F\",\n\t\"approx;\": \"\u2248\",\n\t\"Assign;\": \"\u2254\",\n\t\"Atilde;\": \"\u00C3\",\n\t\"atilde;\": \"\u00E3\",\n\t\"barvee;\": \"\u22BD\",\n\t\"Barwed;\": \"\u2306\",\n\t\"barwed;\": \"\u2305\",\n\t\"becaus;\": \"\u2235\",\n\t\"bernou;\": \"\u212C\",\n\t\"bigcap;\": \"\u22C2\",\n\t\"bigcup;\": \"\u22C3\",\n\t\"bigvee;\": \"\u22C1\",\n\t\"bkarow;\": \"\u290D\",\n\t\"bottom;\": \"\u22A5\",\n\t\"bowtie;\": \"\u22C8\",\n\t\"boxbox;\": \"\u29C9\",\n\t\"bprime;\": \"\u2035\",\n\t\"brvbar;\": \"\u00A6\",\n\t\"bullet;\": \"\u2022\",\n\t\"Bumpeq;\": \"\u224E\",\n\t\"bumpeq;\": \"\u224F\",\n\t\"Cacute;\": \"\u0106\",\n\t\"cacute;\": \"\u0107\",\n\t\"capand;\": \"\u2A44\",\n\t\"capcap;\": \"\u2A4B\",\n\t\"capcup;\": \"\u2A47\",\n\t\"capdot;\": \"\u2A40\",\n\t\"Ccaron;\": \"\u010C\",\n\t\"ccaron;\": \"\u010D\",\n\t\"Ccedil;\": \"\u00C7\",\n\t\"ccedil;\": \"\u00E7\",\n\t\"circeq;\": \"\u2257\",\n\t\"cirmid;\": \"\u2AEF\",\n\t\"Colone;\": \"\u2A74\",\n\t\"colone;\": \"\u2254\",\n\t\"commat;\": \"@\",\n\t\"compfn;\": \"\u2218\",\n\t\"Conint;\": \"\u222F\",\n\t\"conint;\": \"\u222E\",\n\t\"coprod;\": \"\u2210\",\n\t\"copysr;\": \"\u2117\",\n\t\"cularr;\": \"\u21B6\",\n\t\"CupCap;\": \"\u224D\",\n\t\"cupcap;\": \"\u2A46\",\n\t\"cupcup;\": \"\u2A4A\",\n\t\"cupdot;\": \"\u228D\",\n\t\"curarr;\": \"\u21B7\",\n\t\"curren;\": \"\u00A4\",\n\t\"cylcty;\": \"\u232D\",\n\t\"Dagger;\": \"\u2021\",\n\t\"dagger;\": \"\u2020\",\n\t\"daleth;\": \"\u2138\",\n\t\"Dcaron;\": \"\u010E\",\n\t\"dcaron;\": \"\u010F\",\n\t\"dfisht;\": \"\u297F\",\n\t\"divide;\": \"\u00F7\",\n\t\"divonx;\": \"\u22C7\",\n\t\"dlcorn;\": \"\u231E\",\n\t\"dlcrop;\": \"\u230D\",\n\t\"dollar;\": \"$\",\n\t\"DotDot;\": \"\u20DC\",\n\t\"drcorn;\": \"\u231F\",\n\t\"drcrop;\": \"\u230C\",\n\t\"Dstrok;\": \"\u0110\",\n\t\"dstrok;\": \"\u0111\",\n\t\"Eacute;\": \"\u00C9\",\n\t\"eacute;\": \"\u00E9\",\n\t\"easter;\": \"\u2A6E\",\n\t\"Ecaron;\": \"\u011A\",\n\t\"ecaron;\": \"\u011B\",\n\t\"ecolon;\": \"\u2255\",\n\t\"Egrave;\": \"\u00C8\",\n\t\"egrave;\": \"\u00E8\",\n\t\"egsdot;\": \"\u2A98\",\n\t\"elsdot;\": \"\u2A97\",\n\t\"emptyv;\": \"\u2205\",\n\t\"emsp13;\": \"\u2004\",\n\t\"emsp14;\": \"\u2005\",\n\t\"eparsl;\": \"\u29E3\",\n\t\"eqcirc;\": \"\u2256\",\n\t\"equals;\": \"=\",\n\t\"equest;\": \"\u225F\",\n\t\"Exists;\": \"\u2203\",\n\t\"female;\": \"\u2640\",\n\t\"ffilig;\": \"\uFB03\",\n\t\"ffllig;\": \"\uFB04\",\n\t\"ForAll;\": \"\u2200\",\n\t\"forall;\": \"\u2200\",\n\t\"frac12;\": \"\u00BD\",\n\t\"frac13;\": \"\u2153\",\n\t\"frac14;\": \"\u00BC\",\n\t\"frac15;\": \"\u2155\",\n\t\"frac16;\": \"\u2159\",\n\t\"frac18;\": \"\u215B\",\n\t\"frac23;\": \"\u2154\",\n\t\"frac25;\": \"\u2156\",\n\t\"frac34;\": \"\u00BE\",\n\t\"frac35;\": \"\u2157\",\n\t\"frac38;\": \"\u215C\",\n\t\"frac45;\": \"\u2158\",\n\t\"frac56;\": \"\u215A\",\n\t\"frac58;\": \"\u215D\",\n\t\"frac78;\": \"\u215E\",\n\t\"gacute;\": \"\u01F5\",\n\t\"Gammad;\": \"\u03DC\",\n\t\"gammad;\": \"\u03DD\",\n\t\"Gbreve;\": \"\u011E\",\n\t\"gbreve;\": \"\u011F\",\n\t\"Gcedil;\": \"\u0122\",\n\t\"gesdot;\": \"\u2A80\",\n\t\"gesles;\": \"\u2A94\",\n\t\"gtlPar;\": \"\u2995\",\n\t\"gtrarr;\": \"\u2978\",\n\t\"gtrdot;\": \"\u22D7\",\n\t\"gtrsim;\": \"\u2273\",\n\t\"hairsp;\": \"\u200A\",\n\t\"hamilt;\": \"\u210B\",\n\t\"HARDcy;\": \"\u042A\",\n\t\"hardcy;\": \"\u044A\",\n\t\"hearts;\": \"\u2665\",\n\t\"hellip;\": \"\u2026\",\n\t\"hercon;\": \"\u22B9\",\n\t\"homtht;\": \"\u223B\",\n\t\"horbar;\": \"\u2015\",\n\t\"hslash;\": \"\u210F\",\n\t\"Hstrok;\": \"\u0126\",\n\t\"hstrok;\": \"\u0127\",\n\t\"hybull;\": \"\u2043\",\n\t\"hyphen;\": \"\u2010\",\n\t\"Iacute;\": \"\u00CD\",\n\t\"iacute;\": \"\u00ED\",\n\t\"Igrave;\": \"\u00CC\",\n\t\"igrave;\": \"\u00EC\",\n\t\"iiiint;\": \"\u2A0C\",\n\t\"iinfin;\": \"\u29DC\",\n\t\"incare;\": \"\u2105\",\n\t\"inodot;\": \"\u0131\",\n\t\"intcal;\": \"\u22BA\",\n\t\"iquest;\": \"\u00BF\",\n\t\"isinsv;\": \"\u22F3\",\n\t\"Itilde;\": \"\u0128\",\n\t\"itilde;\": \"\u0129\",\n\t\"Jsercy;\": \"\u0408\",\n\t\"jsercy;\": \"\u0458\",\n\t\"kappav;\": \"\u03F0\",\n\t\"Kcedil;\": \"\u0136\",\n\t\"kcedil;\": \"\u0137\",\n\t\"kgreen;\": \"\u0138\",\n\t\"Lacute;\": \"\u0139\",\n\t\"lacute;\": \"\u013A\",\n\t\"lagran;\": \"\u2112\",\n\t\"Lambda;\": \"\u039B\",\n\t\"lambda;\": \"\u03BB\",\n\t\"langle;\": \"\u27E8\",\n\t\"larrfs;\": \"\u291D\",\n\t\"larrhk;\": \"\u21A9\",\n\t\"larrlp;\": \"\u21AB\",\n\t\"larrpl;\": \"\u2939\",\n\t\"larrtl;\": \"\u21A2\",\n\t\"lAtail;\": \"\u291B\",\n\t\"latail;\": \"\u2919\",\n\t\"lbrace;\": \"{\",\n\t\"lbrack;\": \"[\",\n\t\"Lcaron;\": \"\u013D\",\n\t\"lcaron;\": \"\u013E\",\n\t\"Lcedil;\": \"\u013B\",\n\t\"lcedil;\": \"\u013C\",\n\t\"ldquor;\": \"\u201E\",\n\t\"lesdot;\": \"\u2A7F\",\n\t\"lesges;\": \"\u2A93\",\n\t\"lfisht;\": \"\u297C\",\n\t\"lfloor;\": \"\u230A\",\n\t\"lharul;\": \"\u296A\",\n\t\"llhard;\": \"\u296B\",\n\t\"Lmidot;\": \"\u013F\",\n\t\"lmidot;\": \"\u0140\",\n\t\"lmoust;\": \"\u23B0\",\n\t\"loplus;\": \"\u2A2D\",\n\t\"lowast;\": \"\u2217\",\n\t\"lowbar;\": \"_\",\n\t\"lparlt;\": \"\u2993\",\n\t\"lrhard;\": \"\u296D\",\n\t\"lsaquo;\": \"\u2039\",\n\t\"lsquor;\": \"\u201A\",\n\t\"Lstrok;\": \"\u0141\",\n\t\"lstrok;\": \"\u0142\",\n\t\"lthree;\": \"\u22CB\",\n\t\"ltimes;\": \"\u22C9\",\n\t\"ltlarr;\": \"\u2976\",\n\t\"ltrPar;\": \"\u2996\",\n\t\"mapsto;\": \"\u21A6\",\n\t\"marker;\": \"\u25AE\",\n\t\"mcomma;\": \"\u2A29\",\n\t\"midast;\": \"*\",\n\t\"midcir;\": \"\u2AF0\",\n\t\"middot;\": \"\u00B7\",\n\t\"minusb;\": \"\u229F\",\n\t\"minusd;\": \"\u2238\",\n\t\"mnplus;\": \"\u2213\",\n\t\"models;\": \"\u22A7\",\n\t\"mstpos;\": \"\u223E\",\n\t\"Nacute;\": \"\u0143\",\n\t\"nacute;\": \"\u0144\",\n\t\"nbumpe;\": \"\u224F\u0338\",\n\t\"Ncaron;\": \"\u0147\",\n\t\"ncaron;\": \"\u0148\",\n\t\"Ncedil;\": \"\u0145\",\n\t\"ncedil;\": \"\u0146\",\n\t\"nearhk;\": \"\u2924\",\n\t\"nequiv;\": \"\u2262\",\n\t\"nesear;\": \"\u2928\",\n\t\"nexist;\": \"\u2204\",\n\t\"nltrie;\": \"\u22EC\",\n\t\"notinE;\": \"\u22F9\u0338\",\n\t\"nparsl;\": \"\u2AFD\u20E5\",\n\t\"nprcue;\": \"\u22E0\",\n\t\"nrarrc;\": \"\u2933\u0338\",\n\t\"nrarrw;\": \"\u219D\u0338\",\n\t\"nrtrie;\": \"\u22ED\",\n\t\"nsccue;\": \"\u22E1\",\n\t\"nsimeq;\": \"\u2244\",\n\t\"Ntilde;\": \"\u00D1\",\n\t\"ntilde;\": \"\u00F1\",\n\t\"numero;\": \"\u2116\",\n\t\"nVDash;\": \"\u22AF\",\n\t\"nVdash;\": \"\u22AE\",\n\t\"nvDash;\": \"\u22AD\",\n\t\"nvdash;\": \"\u22AC\",\n\t\"nvHarr;\": \"\u2904\",\n\t\"nvlArr;\": \"\u2902\",\n\t\"nvrArr;\": \"\u2903\",\n\t\"nwarhk;\": \"\u2923\",\n\t\"nwnear;\": \"\u2927\",\n\t\"Oacute;\": \"\u00D3\",\n\t\"oacute;\": \"\u00F3\",\n\t\"Odblac;\": \"\u0150\",\n\t\"odblac;\": \"\u0151\",\n\t\"odsold;\": \"\u29BC\",\n\t\"Ograve;\": \"\u00D2\",\n\t\"ograve;\": \"\u00F2\",\n\t\"ominus;\": \"\u2296\",\n\t\"origof;\": \"\u22B6\",\n\t\"Oslash;\": \"\u00D8\",\n\t\"oslash;\": \"\u00F8\",\n\t\"Otilde;\": \"\u00D5\",\n\t\"otilde;\": \"\u00F5\",\n\t\"Otimes;\": \"\u2A37\",\n\t\"otimes;\": \"\u2297\",\n\t\"parsim;\": \"\u2AF3\",\n\t\"percnt;\": \"%\",\n\t\"period;\": \".\",\n\t\"permil;\": \"\u2030\",\n\t\"phmmat;\": \"\u2133\",\n\t\"planck;\": \"\u210F\",\n\t\"plankv;\": \"\u210F\",\n\t\"plusdo;\": \"\u2214\",\n\t\"plusdu;\": \"\u2A25\",\n\t\"plusmn;\": \"\u00B1\",\n\t\"preceq;\": \"\u2AAF\",\n\t\"primes;\": \"\u2119\",\n\t\"prnsim;\": \"\u22E8\",\n\t\"propto;\": \"\u221D\",\n\t\"prurel;\": \"\u22B0\",\n\t\"puncsp;\": \"\u2008\",\n\t\"qprime;\": \"\u2057\",\n\t\"Racute;\": \"\u0154\",\n\t\"racute;\": \"\u0155\",\n\t\"rangle;\": \"\u27E9\",\n\t\"rarrap;\": \"\u2975\",\n\t\"rarrfs;\": \"\u291E\",\n\t\"rarrhk;\": \"\u21AA\",\n\t\"rarrlp;\": \"\u21AC\",\n\t\"rarrpl;\": \"\u2945\",\n\t\"Rarrtl;\": \"\u2916\",\n\t\"rarrtl;\": \"\u21A3\",\n\t\"rAtail;\": \"\u291C\",\n\t\"ratail;\": \"\u291A\",\n\t\"rbrace;\": \"}\",\n\t\"rbrack;\": \"]\",\n\t\"Rcaron;\": \"\u0158\",\n\t\"rcaron;\": \"\u0159\",\n\t\"Rcedil;\": \"\u0156\",\n\t\"rcedil;\": \"\u0157\",\n\t\"rdquor;\": \"\u201D\",\n\t\"rfisht;\": \"\u297D\",\n\t\"rfloor;\": \"\u230B\",\n\t\"rharul;\": \"\u296C\",\n\t\"rmoust;\": \"\u23B1\",\n\t\"roplus;\": \"\u2A2E\",\n\t\"rpargt;\": \"\u2994\",\n\t\"rsaquo;\": \"\u203A\",\n\t\"rsquor;\": \"\u2019\",\n\t\"rthree;\": \"\u22CC\",\n\t\"rtimes;\": \"\u22CA\",\n\t\"Sacute;\": \"\u015A\",\n\t\"sacute;\": \"\u015B\",\n\t\"Scaron;\": \"\u0160\",\n\t\"scaron;\": \"\u0161\",\n\t\"Scedil;\": \"\u015E\",\n\t\"scedil;\": \"\u015F\",\n\t\"scnsim;\": \"\u22E9\",\n\t\"searhk;\": \"\u2925\",\n\t\"seswar;\": \"\u2929\",\n\t\"sfrown;\": \"\u2322\",\n\t\"SHCHcy;\": \"\u0429\",\n\t\"shchcy;\": \"\u0449\",\n\t\"sigmaf;\": \"\u03C2\",\n\t\"sigmav;\": \"\u03C2\",\n\t\"simdot;\": \"\u2A6A\",\n\t\"smashp;\": \"\u2A33\",\n\t\"SOFTcy;\": \"\u042C\",\n\t\"softcy;\": \"\u044C\",\n\t\"solbar;\": \"\u233F\",\n\t\"spades;\": \"\u2660\",\n\t\"sqcaps;\": \"\u2293\uFE00\",\n\t\"sqcups;\": \"\u2294\uFE00\",\n\t\"sqsube;\": \"\u2291\",\n\t\"sqsupe;\": \"\u2292\",\n\t\"Square;\": \"\u25A1\",\n\t\"square;\": \"\u25A1\",\n\t\"squarf;\": \"\u25AA\",\n\t\"ssetmn;\": \"\u2216\",\n\t\"ssmile;\": \"\u2323\",\n\t\"sstarf;\": \"\u22C6\",\n\t\"subdot;\": \"\u2ABD\",\n\t\"Subset;\": \"\u22D0\",\n\t\"subset;\": \"\u2282\",\n\t\"subsim;\": \"\u2AC7\",\n\t\"subsub;\": \"\u2AD5\",\n\t\"subsup;\": \"\u2AD3\",\n\t\"succeq;\": \"\u2AB0\",\n\t\"supdot;\": \"\u2ABE\",\n\t\"Supset;\": \"\u22D1\",\n\t\"supset;\": \"\u2283\",\n\t\"supsim;\": \"\u2AC8\",\n\t\"supsub;\": \"\u2AD4\",\n\t\"supsup;\": \"\u2AD6\",\n\t\"swarhk;\": \"\u2926\",\n\t\"swnwar;\": \"\u292A\",\n\t\"target;\": \"\u2316\",\n\t\"Tcaron;\": \"\u0164\",\n\t\"tcaron;\": \"\u0165\",\n\t\"Tcedil;\": \"\u0162\",\n\t\"tcedil;\": \"\u0163\",\n\t\"telrec;\": \"\u2315\",\n\t\"there4;\": \"\u2234\",\n\t\"thetav;\": \"\u03D1\",\n\t\"thinsp;\": \"\u2009\",\n\t\"thksim;\": \"\u223C\",\n\t\"timesb;\": \"\u22A0\",\n\t\"timesd;\": \"\u2A30\",\n\t\"topbot;\": \"\u2336\",\n\t\"topcir;\": \"\u2AF1\",\n\t\"tprime;\": \"\u2034\",\n\t\"tridot;\": \"\u25EC\",\n\t\"Tstrok;\": \"\u0166\",\n\t\"tstrok;\": \"\u0167\",\n\t\"Uacute;\": \"\u00DA\",\n\t\"uacute;\": \"\u00FA\",\n\t\"Ubreve;\": \"\u016C\",\n\t\"ubreve;\": \"\u016D\",\n\t\"Udblac;\": \"\u0170\",\n\t\"udblac;\": \"\u0171\",\n\t\"ufisht;\": \"\u297E\",\n\t\"Ugrave;\": \"\u00D9\",\n\t\"ugrave;\": \"\u00F9\",\n\t\"ulcorn;\": \"\u231C\",\n\t\"ulcrop;\": \"\u230F\",\n\t\"urcorn;\": \"\u231D\",\n\t\"urcrop;\": \"\u230E\",\n\t\"Utilde;\": \"\u0168\",\n\t\"utilde;\": \"\u0169\",\n\t\"vangrt;\": \"\u299C\",\n\t\"varphi;\": \"\u03D5\",\n\t\"varrho;\": \"\u03F1\",\n\t\"Vdashl;\": \"\u2AE6\",\n\t\"veebar;\": \"\u22BB\",\n\t\"vellip;\": \"\u22EE\",\n\t\"Verbar;\": \"\u2016\",\n\t\"verbar;\": \"|\",\n\t\"vsubnE;\": \"\u2ACB\uFE00\",\n\t\"vsubne;\": \"\u228A\uFE00\",\n\t\"vsupnE;\": \"\u2ACC\uFE00\",\n\t\"vsupne;\": \"\u228B\uFE00\",\n\t\"Vvdash;\": \"\u22AA\",\n\t\"wedbar;\": \"\u2A5F\",\n\t\"wedgeq;\": \"\u2259\",\n\t\"weierp;\": \"\u2118\",\n\t\"wreath;\": \"\u2240\",\n\t\"xoplus;\": \"\u2A01\",\n\t\"xotime;\": \"\u2A02\",\n\t\"xsqcup;\": \"\u2A06\",\n\t\"xuplus;\": \"\u2A04\",\n\t\"xwedge;\": \"\u22C0\",\n\t\"Yacute;\": \"\u00DD\",\n\t\"yacute;\": \"\u00FD\",\n\t\"Zacute;\": \"\u0179\",\n\t\"zacute;\": \"\u017A\",\n\t\"Zcaron;\": \"\u017D\",\n\t\"zcaron;\": \"\u017E\",\n\t\"zeetrf;\": \"\u2128\",\n\t\"alefsym;\": \"\u2135\",\n\t\"angrtvb;\": \"\u22BE\",\n\t\"angzarr;\": \"\u237C\",\n\t\"asympeq;\": \"\u224D\",\n\t\"backsim;\": \"\u223D\",\n\t\"Because;\": \"\u2235\",\n\t\"because;\": \"\u2235\",\n\t\"bemptyv;\": \"\u29B0\",\n\t\"between;\": \"\u226C\",\n\t\"bigcirc;\": \"\u25EF\",\n\t\"bigodot;\": \"\u2A00\",\n\t\"bigstar;\": \"\u2605\",\n\t\"bnequiv;\": \"\u2261\u20E5\",\n\t\"boxplus;\": \"\u229E\",\n\t\"Cayleys;\": \"\u212D\",\n\t\"Cconint;\": \"\u2230\",\n\t\"ccupssm;\": \"\u2A50\",\n\t\"Cedilla;\": \"\u00B8\",\n\t\"cemptyv;\": \"\u29B2\",\n\t\"cirscir;\": \"\u29C2\",\n\t\"coloneq;\": \"\u2254\",\n\t\"congdot;\": \"\u2A6D\",\n\t\"cudarrl;\": \"\u2938\",\n\t\"cudarrr;\": \"\u2935\",\n\t\"cularrp;\": \"\u293D\",\n\t\"curarrm;\": \"\u293C\",\n\t\"dbkarow;\": \"\u290F\",\n\t\"ddagger;\": \"\u2021\",\n\t\"ddotseq;\": \"\u2A77\",\n\t\"demptyv;\": \"\u29B1\",\n\t\"Diamond;\": \"\u22C4\",\n\t\"diamond;\": \"\u22C4\",\n\t\"digamma;\": \"\u03DD\",\n\t\"dotplus;\": \"\u2214\",\n\t\"DownTee;\": \"\u22A4\",\n\t\"dwangle;\": \"\u29A6\",\n\t\"Element;\": \"\u2208\",\n\t\"Epsilon;\": \"\u0395\",\n\t\"epsilon;\": \"\u03B5\",\n\t\"eqcolon;\": \"\u2255\",\n\t\"equivDD;\": \"\u2A78\",\n\t\"gesdoto;\": \"\u2A82\",\n\t\"gtquest;\": \"\u2A7C\",\n\t\"gtrless;\": \"\u2277\",\n\t\"harrcir;\": \"\u2948\",\n\t\"Implies;\": \"\u21D2\",\n\t\"intprod;\": \"\u2A3C\",\n\t\"isindot;\": \"\u22F5\",\n\t\"larrbfs;\": \"\u291F\",\n\t\"larrsim;\": \"\u2973\",\n\t\"lbrksld;\": \"\u298F\",\n\t\"lbrkslu;\": \"\u298D\",\n\t\"ldrdhar;\": \"\u2967\",\n\t\"LeftTee;\": \"\u22A3\",\n\t\"lesdoto;\": \"\u2A81\",\n\t\"lessdot;\": \"\u22D6\",\n\t\"lessgtr;\": \"\u2276\",\n\t\"lesssim;\": \"\u2272\",\n\t\"lotimes;\": \"\u2A34\",\n\t\"lozenge;\": \"\u25CA\",\n\t\"ltquest;\": \"\u2A7B\",\n\t\"luruhar;\": \"\u2966\",\n\t\"maltese;\": \"\u2720\",\n\t\"minusdu;\": \"\u2A2A\",\n\t\"napprox;\": \"\u2249\",\n\t\"natural;\": \"\u266E\",\n\t\"nearrow;\": \"\u2197\",\n\t\"NewLine;\": \"\\n\",\n\t\"nexists;\": \"\u2204\",\n\t\"NoBreak;\": \"\u2060\",\n\t\"notinva;\": \"\u2209\",\n\t\"notinvb;\": \"\u22F7\",\n\t\"notinvc;\": \"\u22F6\",\n\t\"NotLess;\": \"\u226E\",\n\t\"notniva;\": \"\u220C\",\n\t\"notnivb;\": \"\u22FE\",\n\t\"notnivc;\": \"\u22FD\",\n\t\"npolint;\": \"\u2A14\",\n\t\"npreceq;\": \"\u2AAF\u0338\",\n\t\"nsqsube;\": \"\u22E2\",\n\t\"nsqsupe;\": \"\u22E3\",\n\t\"nsubset;\": \"\u2282\u20D2\",\n\t\"nsucceq;\": \"\u2AB0\u0338\",\n\t\"nsupset;\": \"\u2283\u20D2\",\n\t\"nvinfin;\": \"\u29DE\",\n\t\"nvltrie;\": \"\u22B4\u20D2\",\n\t\"nvrtrie;\": \"\u22B5\u20D2\",\n\t\"nwarrow;\": \"\u2196\",\n\t\"olcross;\": \"\u29BB\",\n\t\"Omicron;\": \"\u039F\",\n\t\"omicron;\": \"\u03BF\",\n\t\"orderof;\": \"\u2134\",\n\t\"orslope;\": \"\u2A57\",\n\t\"OverBar;\": \"\u203E\",\n\t\"pertenk;\": \"\u2031\",\n\t\"planckh;\": \"\u210E\",\n\t\"pluscir;\": \"\u2A22\",\n\t\"plussim;\": \"\u2A26\",\n\t\"plustwo;\": \"\u2A27\",\n\t\"precsim;\": \"\u227E\",\n\t\"Product;\": \"\u220F\",\n\t\"quatint;\": \"\u2A16\",\n\t\"questeq;\": \"\u225F\",\n\t\"rarrbfs;\": \"\u2920\",\n\t\"rarrsim;\": \"\u2974\",\n\t\"rbrksld;\": \"\u298E\",\n\t\"rbrkslu;\": \"\u2990\",\n\t\"rdldhar;\": \"\u2969\",\n\t\"realine;\": \"\u211B\",\n\t\"rotimes;\": \"\u2A35\",\n\t\"ruluhar;\": \"\u2968\",\n\t\"searrow;\": \"\u2198\",\n\t\"simplus;\": \"\u2A24\",\n\t\"simrarr;\": \"\u2972\",\n\t\"subedot;\": \"\u2AC3\",\n\t\"submult;\": \"\u2AC1\",\n\t\"subplus;\": \"\u2ABF\",\n\t\"subrarr;\": \"\u2979\",\n\t\"succsim;\": \"\u227F\",\n\t\"supdsub;\": \"\u2AD8\",\n\t\"supedot;\": \"\u2AC4\",\n\t\"suphsol;\": \"\u27C9\",\n\t\"suphsub;\": \"\u2AD7\",\n\t\"suplarr;\": \"\u297B\",\n\t\"supmult;\": \"\u2AC2\",\n\t\"supplus;\": \"\u2AC0\",\n\t\"swarrow;\": \"\u2199\",\n\t\"topfork;\": \"\u2ADA\",\n\t\"triplus;\": \"\u2A39\",\n\t\"tritime;\": \"\u2A3B\",\n\t\"UpArrow;\": \"\u2191\",\n\t\"Uparrow;\": \"\u21D1\",\n\t\"uparrow;\": \"\u2191\",\n\t\"Upsilon;\": \"\u03A5\",\n\t\"upsilon;\": \"\u03C5\",\n\t\"uwangle;\": \"\u29A7\",\n\t\"vzigzag;\": \"\u299A\",\n\t\"zigrarr;\": \"\u21DD\",\n\t\"andslope;\": \"\u2A58\",\n\t\"angmsdaa;\": \"\u29A8\",\n\t\"angmsdab;\": \"\u29A9\",\n\t\"angmsdac;\": \"\u29AA\",\n\t\"angmsdad;\": \"\u29AB\",\n\t\"angmsdae;\": \"\u29AC\",\n\t\"angmsdaf;\": \"\u29AD\",\n\t\"angmsdag;\": \"\u29AE\",\n\t\"angmsdah;\": \"\u29AF\",\n\t\"angrtvbd;\": \"\u299D\",\n\t\"approxeq;\": \"\u224A\",\n\t\"awconint;\": \"\u2233\",\n\t\"backcong;\": \"\u224C\",\n\t\"barwedge;\": \"\u2305\",\n\t\"bbrktbrk;\": \"\u23B6\",\n\t\"bigoplus;\": \"\u2A01\",\n\t\"bigsqcup;\": \"\u2A06\",\n\t\"biguplus;\": \"\u2A04\",\n\t\"bigwedge;\": \"\u22C0\",\n\t\"boxminus;\": \"\u229F\",\n\t\"boxtimes;\": \"\u22A0\",\n\t\"bsolhsub;\": \"\u27C8\",\n\t\"capbrcup;\": \"\u2A49\",\n\t\"circledR;\": \"\u00AE\",\n\t\"circledS;\": \"\u24C8\",\n\t\"cirfnint;\": \"\u2A10\",\n\t\"clubsuit;\": \"\u2663\",\n\t\"cupbrcap;\": \"\u2A48\",\n\t\"curlyvee;\": \"\u22CE\",\n\t\"cwconint;\": \"\u2232\",\n\t\"DDotrahd;\": \"\u2911\",\n\t\"doteqdot;\": \"\u2251\",\n\t\"DotEqual;\": \"\u2250\",\n\t\"dotminus;\": \"\u2238\",\n\t\"drbkarow;\": \"\u2910\",\n\t\"dzigrarr;\": \"\u27FF\",\n\t\"elinters;\": \"\u23E7\",\n\t\"emptyset;\": \"\u2205\",\n\t\"eqvparsl;\": \"\u29E5\",\n\t\"fpartint;\": \"\u2A0D\",\n\t\"geqslant;\": \"\u2A7E\",\n\t\"gesdotol;\": \"\u2A84\",\n\t\"gnapprox;\": \"\u2A8A\",\n\t\"hksearow;\": \"\u2925\",\n\t\"hkswarow;\": \"\u2926\",\n\t\"imagline;\": \"\u2110\",\n\t\"imagpart;\": \"\u2111\",\n\t\"infintie;\": \"\u29DD\",\n\t\"integers;\": \"\u2124\",\n\t\"Integral;\": \"\u222B\",\n\t\"intercal;\": \"\u22BA\",\n\t\"intlarhk;\": \"\u2A17\",\n\t\"laemptyv;\": \"\u29B4\",\n\t\"ldrushar;\": \"\u294B\",\n\t\"leqslant;\": \"\u2A7D\",\n\t\"lesdotor;\": \"\u2A83\",\n\t\"LessLess;\": \"\u2AA1\",\n\t\"llcorner;\": \"\u231E\",\n\t\"lnapprox;\": \"\u2A89\",\n\t\"lrcorner;\": \"\u231F\",\n\t\"lurdshar;\": \"\u294A\",\n\t\"mapstoup;\": \"\u21A5\",\n\t\"multimap;\": \"\u22B8\",\n\t\"naturals;\": \"\u2115\",\n\t\"ncongdot;\": \"\u2A6D\u0338\",\n\t\"NotEqual;\": \"\u2260\",\n\t\"notindot;\": \"\u22F5\u0338\",\n\t\"NotTilde;\": \"\u2241\",\n\t\"otimesas;\": \"\u2A36\",\n\t\"parallel;\": \"\u2225\",\n\t\"PartialD;\": \"\u2202\",\n\t\"plusacir;\": \"\u2A23\",\n\t\"pointint;\": \"\u2A15\",\n\t\"Precedes;\": \"\u227A\",\n\t\"precneqq;\": \"\u2AB5\",\n\t\"precnsim;\": \"\u22E8\",\n\t\"profalar;\": \"\u232E\",\n\t\"profline;\": \"\u2312\",\n\t\"profsurf;\": \"\u2313\",\n\t\"raemptyv;\": \"\u29B3\",\n\t\"realpart;\": \"\u211C\",\n\t\"RightTee;\": \"\u22A2\",\n\t\"rppolint;\": \"\u2A12\",\n\t\"rtriltri;\": \"\u29CE\",\n\t\"scpolint;\": \"\u2A13\",\n\t\"setminus;\": \"\u2216\",\n\t\"shortmid;\": \"\u2223\",\n\t\"smeparsl;\": \"\u29E4\",\n\t\"sqsubset;\": \"\u228F\",\n\t\"sqsupset;\": \"\u2290\",\n\t\"subseteq;\": \"\u2286\",\n\t\"Succeeds;\": \"\u227B\",\n\t\"succneqq;\": \"\u2AB6\",\n\t\"succnsim;\": \"\u22E9\",\n\t\"SuchThat;\": \"\u220B\",\n\t\"Superset;\": \"\u2283\",\n\t\"supseteq;\": \"\u2287\",\n\t\"thetasym;\": \"\u03D1\",\n\t\"thicksim;\": \"\u223C\",\n\t\"timesbar;\": \"\u2A31\",\n\t\"triangle;\": \"\u25B5\",\n\t\"triminus;\": \"\u2A3A\",\n\t\"trpezium;\": \"\u23E2\",\n\t\"Uarrocir;\": \"\u2949\",\n\t\"ulcorner;\": \"\u231C\",\n\t\"UnderBar;\": \"_\",\n\t\"urcorner;\": \"\u231D\",\n\t\"varkappa;\": \"\u03F0\",\n\t\"varsigma;\": \"\u03C2\",\n\t\"vartheta;\": \"\u03D1\",\n\t\"backprime;\": \"\u2035\",\n\t\"backsimeq;\": \"\u22CD\",\n\t\"Backslash;\": \"\u2216\",\n\t\"bigotimes;\": \"\u2A02\",\n\t\"CenterDot;\": \"\u00B7\",\n\t\"centerdot;\": \"\u00B7\",\n\t\"checkmark;\": \"\u2713\",\n\t\"CircleDot;\": \"\u2299\",\n\t\"complexes;\": \"\u2102\",\n\t\"Congruent;\": \"\u2261\",\n\t\"Coproduct;\": \"\u2210\",\n\t\"dotsquare;\": \"\u22A1\",\n\t\"DoubleDot;\": \"\u00A8\",\n\t\"DownArrow;\": \"\u2193\",\n\t\"Downarrow;\": \"\u21D3\",\n\t\"downarrow;\": \"\u2193\",\n\t\"DownBreve;\": \"\u0311\",\n\t\"gtrapprox;\": \"\u2A86\",\n\t\"gtreqless;\": \"\u22DB\",\n\t\"gvertneqq;\": \"\u2269\uFE00\",\n\t\"heartsuit;\": \"\u2665\",\n\t\"HumpEqual;\": \"\u224F\",\n\t\"LeftArrow;\": \"\u2190\",\n\t\"Leftarrow;\": \"\u21D0\",\n\t\"leftarrow;\": \"\u2190\",\n\t\"LeftFloor;\": \"\u230A\",\n\t\"lesseqgtr;\": \"\u22DA\",\n\t\"LessTilde;\": \"\u2272\",\n\t\"lvertneqq;\": \"\u2268\uFE00\",\n\t\"Mellintrf;\": \"\u2133\",\n\t\"MinusPlus;\": \"\u2213\",\n\t\"ngeqslant;\": \"\u2A7E\u0338\",\n\t\"nleqslant;\": \"\u2A7D\u0338\",\n\t\"NotCupCap;\": \"\u226D\",\n\t\"NotExists;\": \"\u2204\",\n\t\"NotSubset;\": \"\u2282\u20D2\",\n\t\"nparallel;\": \"\u2226\",\n\t\"nshortmid;\": \"\u2224\",\n\t\"nsubseteq;\": \"\u2288\",\n\t\"nsupseteq;\": \"\u2289\",\n\t\"OverBrace;\": \"\u23DE\",\n\t\"pitchfork;\": \"\u22D4\",\n\t\"PlusMinus;\": \"\u00B1\",\n\t\"rationals;\": \"\u211A\",\n\t\"spadesuit;\": \"\u2660\",\n\t\"subseteqq;\": \"\u2AC5\",\n\t\"subsetneq;\": \"\u228A\",\n\t\"supseteqq;\": \"\u2AC6\",\n\t\"supsetneq;\": \"\u228B\",\n\t\"Therefore;\": \"\u2234\",\n\t\"therefore;\": \"\u2234\",\n\t\"ThinSpace;\": \"\u2009\",\n\t\"triangleq;\": \"\u225C\",\n\t\"TripleDot;\": \"\u20DB\",\n\t\"UnionPlus;\": \"\u228E\",\n\t\"varpropto;\": \"\u221D\",\n\t\"Bernoullis;\": \"\u212C\",\n\t\"circledast;\": \"\u229B\",\n\t\"CirclePlus;\": \"\u2295\",\n\t\"complement;\": \"\u2201\",\n\t\"curlywedge;\": \"\u22CF\",\n\t\"eqslantgtr;\": \"\u2A96\",\n\t\"EqualTilde;\": \"\u2242\",\n\t\"Fouriertrf;\": \"\u2131\",\n\t\"gtreqqless;\": \"\u2A8C\",\n\t\"ImaginaryI;\": \"\u2148\",\n\t\"Laplacetrf;\": \"\u2112\",\n\t\"LeftVector;\": \"\u21BC\",\n\t\"lessapprox;\": \"\u2A85\",\n\t\"lesseqqgtr;\": \"\u2A8B\",\n\t\"Lleftarrow;\": \"\u21DA\",\n\t\"lmoustache;\": \"\u23B0\",\n\t\"longmapsto;\": \"\u27FC\",\n\t\"mapstodown;\": \"\u21A7\",\n\t\"mapstoleft;\": \"\u21A4\",\n\t\"nLeftarrow;\": \"\u21CD\",\n\t\"nleftarrow;\": \"\u219A\",\n\t\"NotElement;\": \"\u2209\",\n\t\"NotGreater;\": \"\u226F\",\n\t\"nsubseteqq;\": \"\u2AC5\u0338\",\n\t\"nsupseteqq;\": \"\u2AC6\u0338\",\n\t\"precapprox;\": \"\u2AB7\",\n\t\"Proportion;\": \"\u2237\",\n\t\"RightArrow;\": \"\u2192\",\n\t\"Rightarrow;\": \"\u21D2\",\n\t\"rightarrow;\": \"\u2192\",\n\t\"RightFloor;\": \"\u230B\",\n\t\"rmoustache;\": \"\u23B1\",\n\t\"sqsubseteq;\": \"\u2291\",\n\t\"sqsupseteq;\": \"\u2292\",\n\t\"subsetneqq;\": \"\u2ACB\",\n\t\"succapprox;\": \"\u2AB8\",\n\t\"supsetneqq;\": \"\u2ACC\",\n\t\"ThickSpace;\": \"\u205F\u200A\",\n\t\"TildeEqual;\": \"\u2243\",\n\t\"TildeTilde;\": \"\u2248\",\n\t\"UnderBrace;\": \"\u23DF\",\n\t\"UpArrowBar;\": \"\u2912\",\n\t\"UpTeeArrow;\": \"\u21A5\",\n\t\"upuparrows;\": \"\u21C8\",\n\t\"varepsilon;\": \"\u03F5\",\n\t\"varnothing;\": \"\u2205\",\n\t\"backepsilon;\": \"\u03F6\",\n\t\"blacksquare;\": \"\u25AA\",\n\t\"circledcirc;\": \"\u229A\",\n\t\"circleddash;\": \"\u229D\",\n\t\"CircleMinus;\": \"\u2296\",\n\t\"CircleTimes;\": \"\u2297\",\n\t\"curlyeqprec;\": \"\u22DE\",\n\t\"curlyeqsucc;\": \"\u22DF\",\n\t\"diamondsuit;\": \"\u2666\",\n\t\"eqslantless;\": \"\u2A95\",\n\t\"Equilibrium;\": \"\u21CC\",\n\t\"expectation;\": \"\u2130\",\n\t\"GreaterLess;\": \"\u2277\",\n\t\"LeftCeiling;\": \"\u2308\",\n\t\"LessGreater;\": \"\u2276\",\n\t\"MediumSpace;\": \"\u205F\",\n\t\"NotLessLess;\": \"\u226A\u0338\",\n\t\"NotPrecedes;\": \"\u2280\",\n\t\"NotSucceeds;\": \"\u2281\",\n\t\"NotSuperset;\": \"\u2283\u20D2\",\n\t\"nRightarrow;\": \"\u21CF\",\n\t\"nrightarrow;\": \"\u219B\",\n\t\"OverBracket;\": \"\u23B4\",\n\t\"preccurlyeq;\": \"\u227C\",\n\t\"precnapprox;\": \"\u2AB9\",\n\t\"quaternions;\": \"\u210D\",\n\t\"RightVector;\": \"\u21C0\",\n\t\"Rrightarrow;\": \"\u21DB\",\n\t\"RuleDelayed;\": \"\u29F4\",\n\t\"SmallCircle;\": \"\u2218\",\n\t\"SquareUnion;\": \"\u2294\",\n\t\"straightphi;\": \"\u03D5\",\n\t\"SubsetEqual;\": \"\u2286\",\n\t\"succcurlyeq;\": \"\u227D\",\n\t\"succnapprox;\": \"\u2ABA\",\n\t\"thickapprox;\": \"\u2248\",\n\t\"UpDownArrow;\": \"\u2195\",\n\t\"Updownarrow;\": \"\u21D5\",\n\t\"updownarrow;\": \"\u2195\",\n\t\"VerticalBar;\": \"\u2223\",\n\t\"blacklozenge;\": \"\u29EB\",\n\t\"DownArrowBar;\": \"\u2913\",\n\t\"DownTeeArrow;\": \"\u21A7\",\n\t\"ExponentialE;\": \"\u2147\",\n\t\"exponentiale;\": \"\u2147\",\n\t\"GreaterEqual;\": \"\u2265\",\n\t\"GreaterTilde;\": \"\u2273\",\n\t\"HilbertSpace;\": \"\u210B\",\n\t\"HumpDownHump;\": \"\u224E\",\n\t\"Intersection;\": \"\u22C2\",\n\t\"LeftArrowBar;\": \"\u21E4\",\n\t\"LeftTeeArrow;\": \"\u21A4\",\n\t\"LeftTriangle;\": \"\u22B2\",\n\t\"LeftUpVector;\": \"\u21BF\",\n\t\"NotCongruent;\": \"\u2262\",\n\t\"NotHumpEqual;\": \"\u224F\u0338\",\n\t\"NotLessEqual;\": \"\u2270\",\n\t\"NotLessTilde;\": \"\u2274\",\n\t\"Proportional;\": \"\u221D\",\n\t\"RightCeiling;\": \"\u2309\",\n\t\"risingdotseq;\": \"\u2253\",\n\t\"RoundImplies;\": \"\u2970\",\n\t\"ShortUpArrow;\": \"\u2191\",\n\t\"SquareSubset;\": \"\u228F\",\n\t\"triangledown;\": \"\u25BF\",\n\t\"triangleleft;\": \"\u25C3\",\n\t\"UnderBracket;\": \"\u23B5\",\n\t\"varsubsetneq;\": \"\u228A\uFE00\",\n\t\"varsupsetneq;\": \"\u228B\uFE00\",\n\t\"VerticalLine;\": \"|\",\n\t\"ApplyFunction;\": \"\u2061\",\n\t\"bigtriangleup;\": \"\u25B3\",\n\t\"blacktriangle;\": \"\u25B4\",\n\t\"DifferentialD;\": \"\u2146\",\n\t\"divideontimes;\": \"\u22C7\",\n\t\"DoubleLeftTee;\": \"\u2AE4\",\n\t\"DoubleUpArrow;\": \"\u21D1\",\n\t\"fallingdotseq;\": \"\u2252\",\n\t\"hookleftarrow;\": \"\u21A9\",\n\t\"leftarrowtail;\": \"\u21A2\",\n\t\"leftharpoonup;\": \"\u21BC\",\n\t\"LeftTeeVector;\": \"\u295A\",\n\t\"LeftVectorBar;\": \"\u2952\",\n\t\"LessFullEqual;\": \"\u2266\",\n\t\"LongLeftArrow;\": \"\u27F5\",\n\t\"Longleftarrow;\": \"\u27F8\",\n\t\"longleftarrow;\": \"\u27F5\",\n\t\"looparrowleft;\": \"\u21AB\",\n\t\"measuredangle;\": \"\u2221\",\n\t\"NotEqualTilde;\": \"\u2242\u0338\",\n\t\"NotTildeEqual;\": \"\u2244\",\n\t\"NotTildeTilde;\": \"\u2249\",\n\t\"ntriangleleft;\": \"\u22EA\",\n\t\"Poincareplane;\": \"\u210C\",\n\t\"PrecedesEqual;\": \"\u2AAF\",\n\t\"PrecedesTilde;\": \"\u227E\",\n\t\"RightArrowBar;\": \"\u21E5\",\n\t\"RightTeeArrow;\": \"\u21A6\",\n\t\"RightTriangle;\": \"\u22B3\",\n\t\"RightUpVector;\": \"\u21BE\",\n\t\"shortparallel;\": \"\u2225\",\n\t\"smallsetminus;\": \"\u2216\",\n\t\"SucceedsEqual;\": \"\u2AB0\",\n\t\"SucceedsTilde;\": \"\u227F\",\n\t\"SupersetEqual;\": \"\u2287\",\n\t\"triangleright;\": \"\u25B9\",\n\t\"UpEquilibrium;\": \"\u296E\",\n\t\"upharpoonleft;\": \"\u21BF\",\n\t\"varsubsetneqq;\": \"\u2ACB\uFE00\",\n\t\"varsupsetneqq;\": \"\u2ACC\uFE00\",\n\t\"VerticalTilde;\": \"\u2240\",\n\t\"VeryThinSpace;\": \"\u200A\",\n\t\"curvearrowleft;\": \"\u21B6\",\n\t\"DiacriticalDot;\": \"\u02D9\",\n\t\"doublebarwedge;\": \"\u2306\",\n\t\"DoubleRightTee;\": \"\u22A8\",\n\t\"downdownarrows;\": \"\u21CA\",\n\t\"DownLeftVector;\": \"\u21BD\",\n\t\"GreaterGreater;\": \"\u2AA2\",\n\t\"hookrightarrow;\": \"\u21AA\",\n\t\"HorizontalLine;\": \"\u2500\",\n\t\"InvisibleComma;\": \"\u2063\",\n\t\"InvisibleTimes;\": \"\u2062\",\n\t\"LeftDownVector;\": \"\u21C3\",\n\t\"leftleftarrows;\": \"\u21C7\",\n\t\"LeftRightArrow;\": \"\u2194\",\n\t\"Leftrightarrow;\": \"\u21D4\",\n\t\"leftrightarrow;\": \"\u2194\",\n\t\"leftthreetimes;\": \"\u22CB\",\n\t\"LessSlantEqual;\": \"\u2A7D\",\n\t\"LongRightArrow;\": \"\u27F6\",\n\t\"Longrightarrow;\": \"\u27F9\",\n\t\"longrightarrow;\": \"\u27F6\",\n\t\"looparrowright;\": \"\u21AC\",\n\t\"LowerLeftArrow;\": \"\u2199\",\n\t\"NestedLessLess;\": \"\u226A\",\n\t\"NotGreaterLess;\": \"\u2279\",\n\t\"NotLessGreater;\": \"\u2278\",\n\t\"NotSubsetEqual;\": \"\u2288\",\n\t\"NotVerticalBar;\": \"\u2224\",\n\t\"nshortparallel;\": \"\u2226\",\n\t\"ntriangleright;\": \"\u22EB\",\n\t\"OpenCurlyQuote;\": \"\u2018\",\n\t\"ReverseElement;\": \"\u220B\",\n\t\"rightarrowtail;\": \"\u21A3\",\n\t\"rightharpoonup;\": \"\u21C0\",\n\t\"RightTeeVector;\": \"\u295B\",\n\t\"RightVectorBar;\": \"\u2953\",\n\t\"ShortDownArrow;\": \"\u2193\",\n\t\"ShortLeftArrow;\": \"\u2190\",\n\t\"SquareSuperset;\": \"\u2290\",\n\t\"TildeFullEqual;\": \"\u2245\",\n\t\"trianglelefteq;\": \"\u22B4\",\n\t\"upharpoonright;\": \"\u21BE\",\n\t\"UpperLeftArrow;\": \"\u2196\",\n\t\"ZeroWidthSpace;\": \"\u200B\",\n\t\"bigtriangledown;\": \"\u25BD\",\n\t\"circlearrowleft;\": \"\u21BA\",\n\t\"CloseCurlyQuote;\": \"\u2019\",\n\t\"ContourIntegral;\": \"\u222E\",\n\t\"curvearrowright;\": \"\u21B7\",\n\t\"DoubleDownArrow;\": \"\u21D3\",\n\t\"DoubleLeftArrow;\": \"\u21D0\",\n\t\"downharpoonleft;\": \"\u21C3\",\n\t\"DownRightVector;\": \"\u21C1\",\n\t\"leftharpoondown;\": \"\u21BD\",\n\t\"leftrightarrows;\": \"\u21C6\",\n\t\"LeftRightVector;\": \"\u294E\",\n\t\"LeftTriangleBar;\": \"\u29CF\",\n\t\"LeftUpTeeVector;\": \"\u2960\",\n\t\"LeftUpVectorBar;\": \"\u2958\",\n\t\"LowerRightArrow;\": \"\u2198\",\n\t\"nLeftrightarrow;\": \"\u21CE\",\n\t\"nleftrightarrow;\": \"\u21AE\",\n\t\"NotGreaterEqual;\": \"\u2271\",\n\t\"NotGreaterTilde;\": \"\u2275\",\n\t\"NotHumpDownHump;\": \"\u224E\u0338\",\n\t\"NotLeftTriangle;\": \"\u22EA\",\n\t\"NotSquareSubset;\": \"\u228F\u0338\",\n\t\"ntrianglelefteq;\": \"\u22EC\",\n\t\"OverParenthesis;\": \"\u23DC\",\n\t\"RightDownVector;\": \"\u21C2\",\n\t\"rightleftarrows;\": \"\u21C4\",\n\t\"rightsquigarrow;\": \"\u219D\",\n\t\"rightthreetimes;\": \"\u22CC\",\n\t\"ShortRightArrow;\": \"\u2192\",\n\t\"straightepsilon;\": \"\u03F5\",\n\t\"trianglerighteq;\": \"\u22B5\",\n\t\"UpperRightArrow;\": \"\u2197\",\n\t\"vartriangleleft;\": \"\u22B2\",\n\t\"circlearrowright;\": \"\u21BB\",\n\t\"DiacriticalAcute;\": \"\u00B4\",\n\t\"DiacriticalGrave;\": \"`\",\n\t\"DiacriticalTilde;\": \"\u02DC\",\n\t\"DoubleRightArrow;\": \"\u21D2\",\n\t\"DownArrowUpArrow;\": \"\u21F5\",\n\t\"downharpoonright;\": \"\u21C2\",\n\t\"EmptySmallSquare;\": \"\u25FB\",\n\t\"GreaterEqualLess;\": \"\u22DB\",\n\t\"GreaterFullEqual;\": \"\u2267\",\n\t\"LeftAngleBracket;\": \"\u27E8\",\n\t\"LeftUpDownVector;\": \"\u2951\",\n\t\"LessEqualGreater;\": \"\u22DA\",\n\t\"NonBreakingSpace;\": \"\u00A0\",\n\t\"NotPrecedesEqual;\": \"\u2AAF\u0338\",\n\t\"NotRightTriangle;\": \"\u22EB\",\n\t\"NotSucceedsEqual;\": \"\u2AB0\u0338\",\n\t\"NotSucceedsTilde;\": \"\u227F\u0338\",\n\t\"NotSupersetEqual;\": \"\u2289\",\n\t\"ntrianglerighteq;\": \"\u22ED\",\n\t\"rightharpoondown;\": \"\u21C1\",\n\t\"rightrightarrows;\": \"\u21C9\",\n\t\"RightTriangleBar;\": \"\u29D0\",\n\t\"RightUpTeeVector;\": \"\u295C\",\n\t\"RightUpVectorBar;\": \"\u2954\",\n\t\"twoheadleftarrow;\": \"\u219E\",\n\t\"UnderParenthesis;\": \"\u23DD\",\n\t\"UpArrowDownArrow;\": \"\u21C5\",\n\t\"vartriangleright;\": \"\u22B3\",\n\t\"blacktriangledown;\": \"\u25BE\",\n\t\"blacktriangleleft;\": \"\u25C2\",\n\t\"DoubleUpDownArrow;\": \"\u21D5\",\n\t\"DoubleVerticalBar;\": \"\u2225\",\n\t\"DownLeftTeeVector;\": \"\u295E\",\n\t\"DownLeftVectorBar;\": \"\u2956\",\n\t\"FilledSmallSquare;\": \"\u25FC\",\n\t\"GreaterSlantEqual;\": \"\u2A7E\",\n\t\"LeftDoubleBracket;\": \"\u27E6\",\n\t\"LeftDownTeeVector;\": \"\u2961\",\n\t\"LeftDownVectorBar;\": \"\u2959\",\n\t\"leftrightharpoons;\": \"\u21CB\",\n\t\"LeftTriangleEqual;\": \"\u22B4\",\n\t\"NegativeThinSpace;\": \"\u200B\",\n\t\"NotGreaterGreater;\": \"\u226B\u0338\",\n\t\"NotLessSlantEqual;\": \"\u2A7D\u0338\",\n\t\"NotNestedLessLess;\": \"\u2AA1\u0338\",\n\t\"NotReverseElement;\": \"\u220C\",\n\t\"NotSquareSuperset;\": \"\u2290\u0338\",\n\t\"NotTildeFullEqual;\": \"\u2247\",\n\t\"RightAngleBracket;\": \"\u27E9\",\n\t\"rightleftharpoons;\": \"\u21CC\",\n\t\"RightUpDownVector;\": \"\u294F\",\n\t\"SquareSubsetEqual;\": \"\u2291\",\n\t\"twoheadrightarrow;\": \"\u21A0\",\n\t\"VerticalSeparator;\": \"\u2758\",\n\t\"blacktriangleright;\": \"\u25B8\",\n\t\"DownRightTeeVector;\": \"\u295F\",\n\t\"DownRightVectorBar;\": \"\u2957\",\n\t\"LongLeftRightArrow;\": \"\u27F7\",\n\t\"Longleftrightarrow;\": \"\u27FA\",\n\t\"longleftrightarrow;\": \"\u27F7\",\n\t\"NegativeThickSpace;\": \"\u200B\",\n\t\"NotLeftTriangleBar;\": \"\u29CF\u0338\",\n\t\"PrecedesSlantEqual;\": \"\u227C\",\n\t\"ReverseEquilibrium;\": \"\u21CB\",\n\t\"RightDoubleBracket;\": \"\u27E7\",\n\t\"RightDownTeeVector;\": \"\u295D\",\n\t\"RightDownVectorBar;\": \"\u2955\",\n\t\"RightTriangleEqual;\": \"\u22B5\",\n\t\"SquareIntersection;\": \"\u2293\",\n\t\"SucceedsSlantEqual;\": \"\u227D\",\n\t\"DoubleLongLeftArrow;\": \"\u27F8\",\n\t\"DownLeftRightVector;\": \"\u2950\",\n\t\"LeftArrowRightArrow;\": \"\u21C6\",\n\t\"leftrightsquigarrow;\": \"\u21AD\",\n\t\"NegativeMediumSpace;\": \"\u200B\",\n\t\"NotGreaterFullEqual;\": \"\u2267\u0338\",\n\t\"NotRightTriangleBar;\": \"\u29D0\u0338\",\n\t\"RightArrowLeftArrow;\": \"\u21C4\",\n\t\"SquareSupersetEqual;\": \"\u2292\",\n\t\"CapitalDifferentialD;\": \"\u2145\",\n\t\"DoubleLeftRightArrow;\": \"\u21D4\",\n\t\"DoubleLongRightArrow;\": \"\u27F9\",\n\t\"EmptyVerySmallSquare;\": \"\u25AB\",\n\t\"NestedGreaterGreater;\": \"\u226B\",\n\t\"NotDoubleVerticalBar;\": \"\u2226\",\n\t\"NotGreaterSlantEqual;\": \"\u2A7E\u0338\",\n\t\"NotLeftTriangleEqual;\": \"\u22EC\",\n\t\"NotSquareSubsetEqual;\": \"\u22E2\",\n\t\"OpenCurlyDoubleQuote;\": \"\u201C\",\n\t\"ReverseUpEquilibrium;\": \"\u296F\",\n\t\"CloseCurlyDoubleQuote;\": \"\u201D\",\n\t\"DoubleContourIntegral;\": \"\u222F\",\n\t\"FilledVerySmallSquare;\": \"\u25AA\",\n\t\"NegativeVeryThinSpace;\": \"\u200B\",\n\t\"NotPrecedesSlantEqual;\": \"\u22E0\",\n\t\"NotRightTriangleEqual;\": \"\u22ED\",\n\t\"NotSucceedsSlantEqual;\": \"\u22E1\",\n\t\"DiacriticalDoubleAcute;\": \"\u02DD\",\n\t\"NotSquareSupersetEqual;\": \"\u22E3\",\n\t\"NotNestedGreaterGreater;\": \"\u2AA2\u0338\",\n\t\"ClockwiseContourIntegral;\": \"\u2232\",\n\t\"DoubleLongLeftRightArrow;\": \"\u27FA\",\n\t\"CounterClockwiseContourIntegral;\": \"\u2233\"\n};\n\nlet maxCRNameLength;\nconst decodeHtml = (rawText, asAttr) => {\n  let offset = 0;\n  const end = rawText.length;\n  let decodedText = \"\";\n  function advance(length) {\n    offset += length;\n    rawText = rawText.slice(length);\n  }\n  while (offset < end) {\n    const head = /&(?:#x?)?/i.exec(rawText);\n    if (!head || offset + head.index >= end) {\n      const remaining = end - offset;\n      decodedText += rawText.slice(0, remaining);\n      advance(remaining);\n      break;\n    }\n    decodedText += rawText.slice(0, head.index);\n    advance(head.index);\n    if (head[0] === \"&\") {\n      let name = \"\";\n      let value = void 0;\n      if (/[0-9a-z]/i.test(rawText[1])) {\n        if (!maxCRNameLength) {\n          maxCRNameLength = Object.keys(namedCharacterReferences).reduce(\n            (max, name2) => Math.max(max, name2.length),\n            0\n          );\n        }\n        for (let length = maxCRNameLength; !value && length > 0; --length) {\n          name = rawText.slice(1, 1 + length);\n          value = namedCharacterReferences[name];\n        }\n        if (value) {\n          const semi = name.endsWith(\";\");\n          if (asAttr && !semi && /[=a-z0-9]/i.test(rawText[name.length + 1] || \"\")) {\n            decodedText += \"&\" + name;\n            advance(1 + name.length);\n          } else {\n            decodedText += value;\n            advance(1 + name.length);\n          }\n        } else {\n          decodedText += \"&\" + name;\n          advance(1 + name.length);\n        }\n      } else {\n        decodedText += \"&\";\n        advance(1);\n      }\n    } else {\n      const hex = head[0] === \"&#x\";\n      const pattern = hex ? /^&#x([0-9a-f]+);?/i : /^&#([0-9]+);?/;\n      const body = pattern.exec(rawText);\n      if (!body) {\n        decodedText += head[0];\n        advance(head[0].length);\n      } else {\n        let cp = Number.parseInt(body[1], hex ? 16 : 10);\n        if (cp === 0) {\n          cp = 65533;\n        } else if (cp > 1114111) {\n          cp = 65533;\n        } else if (cp >= 55296 && cp <= 57343) {\n          cp = 65533;\n        } else if (cp >= 64976 && cp <= 65007 || (cp & 65534) === 65534) ; else if (cp >= 1 && cp <= 8 || cp === 11 || cp >= 13 && cp <= 31 || cp >= 127 && cp <= 159) {\n          cp = CCR_REPLACEMENTS[cp] || cp;\n        }\n        decodedText += String.fromCodePoint(cp);\n        advance(body[0].length);\n      }\n    }\n  }\n  return decodedText;\n};\nconst CCR_REPLACEMENTS = {\n  128: 8364,\n  130: 8218,\n  131: 402,\n  132: 8222,\n  133: 8230,\n  134: 8224,\n  135: 8225,\n  136: 710,\n  137: 8240,\n  138: 352,\n  139: 8249,\n  140: 338,\n  142: 381,\n  145: 8216,\n  146: 8217,\n  147: 8220,\n  148: 8221,\n  149: 8226,\n  150: 8211,\n  151: 8212,\n  152: 732,\n  153: 8482,\n  154: 353,\n  155: 8250,\n  156: 339,\n  158: 382,\n  159: 376\n};\n\nconst isRawTextContainer = /* @__PURE__ */ shared.makeMap(\n  \"style,iframe,script,noscript\",\n  true\n);\nconst parserOptions = {\n  isVoidTag: shared.isVoidTag,\n  isNativeTag: (tag) => shared.isHTMLTag(tag) || shared.isSVGTag(tag),\n  isPreTag: (tag) => tag === \"pre\",\n  decodeEntities: decodeHtml,\n  isBuiltInComponent: (tag) => {\n    if (compilerCore.isBuiltInType(tag, `Transition`)) {\n      return TRANSITION;\n    } else if (compilerCore.isBuiltInType(tag, `TransitionGroup`)) {\n      return TRANSITION_GROUP;\n    }\n  },\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n  getNamespace(tag, parent) {\n    let ns = parent ? parent.ns : 0;\n    if (parent && ns === 2) {\n      if (parent.tag === \"annotation-xml\") {\n        if (tag === \"svg\") {\n          return 1;\n        }\n        if (parent.props.some(\n          (a) => a.type === 6 && a.name === \"encoding\" && a.value != null && (a.value.content === \"text/html\" || a.value.content === \"application/xhtml+xml\")\n        )) {\n          ns = 0;\n        }\n      } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== \"mglyph\" && tag !== \"malignmark\") {\n        ns = 0;\n      }\n    } else if (parent && ns === 1) {\n      if (parent.tag === \"foreignObject\" || parent.tag === \"desc\" || parent.tag === \"title\") {\n        ns = 0;\n      }\n    }\n    if (ns === 0) {\n      if (tag === \"svg\") {\n        return 1;\n      }\n      if (tag === \"math\") {\n        return 2;\n      }\n    }\n    return ns;\n  },\n  // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\n  getTextMode({ tag, ns }) {\n    if (ns === 0) {\n      if (tag === \"textarea\" || tag === \"title\") {\n        return 1;\n      }\n      if (isRawTextContainer(tag)) {\n        return 2;\n      }\n    }\n    return 0;\n  }\n};\n\nconst transformStyle = (node) => {\n  if (node.type === 1) {\n    node.props.forEach((p, i) => {\n      if (p.type === 6 && p.name === \"style\" && p.value) {\n        node.props[i] = {\n          type: 7,\n          name: `bind`,\n          arg: compilerCore.createSimpleExpression(`style`, true, p.loc),\n          exp: parseInlineCSS(p.value.content, p.loc),\n          modifiers: [],\n          loc: p.loc\n        };\n      }\n    });\n  }\n};\nconst parseInlineCSS = (cssText, loc) => {\n  const normalized = shared.parseStringStyle(cssText);\n  return compilerCore.createSimpleExpression(\n    JSON.stringify(normalized),\n    false,\n    loc,\n    3\n  );\n};\n\nfunction createDOMCompilerError(code, loc) {\n  return compilerCore.createCompilerError(\n    code,\n    loc,\n    DOMErrorMessages \n  );\n}\nconst DOMErrorMessages = {\n  [53]: `v-html is missing expression.`,\n  [54]: `v-html will override element children.`,\n  [55]: `v-text is missing expression.`,\n  [56]: `v-text will override element children.`,\n  [57]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\n  [58]: `v-model argument is not supported on plain elements.`,\n  [59]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\n  [60]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\n  [61]: `v-show is missing expression.`,\n  [62]: `<Transition> expects exactly one child element or component.`,\n  [63]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\n};\n\nconst transformVHtml = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(53, loc)\n    );\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(54, loc)\n    );\n    node.children.length = 0;\n  }\n  return {\n    props: [\n      compilerCore.createObjectProperty(\n        compilerCore.createSimpleExpression(`innerHTML`, true, loc),\n        exp || compilerCore.createSimpleExpression(\"\", true)\n      )\n    ]\n  };\n};\n\nconst transformVText = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(55, loc)\n    );\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(56, loc)\n    );\n    node.children.length = 0;\n  }\n  return {\n    props: [\n      compilerCore.createObjectProperty(\n        compilerCore.createSimpleExpression(`textContent`, true),\n        exp ? compilerCore.getConstantType(exp, context) > 0 ? exp : compilerCore.createCallExpression(\n          context.helperString(compilerCore.TO_DISPLAY_STRING),\n          [exp],\n          loc\n        ) : compilerCore.createSimpleExpression(\"\", true)\n      )\n    ]\n  };\n};\n\nconst transformModel = (dir, node, context) => {\n  const baseResult = compilerCore.transformModel(dir, node, context);\n  if (!baseResult.props.length || node.tagType === 1) {\n    return baseResult;\n  }\n  if (dir.arg) {\n    context.onError(\n      createDOMCompilerError(\n        58,\n        dir.arg.loc\n      )\n    );\n  }\n  function checkDuplicatedValue() {\n    const value = compilerCore.findDir(node, \"bind\");\n    if (value && compilerCore.isStaticArgOf(value.arg, \"value\")) {\n      context.onError(\n        createDOMCompilerError(\n          60,\n          value.loc\n        )\n      );\n    }\n  }\n  const { tag } = node;\n  const isCustomElement = context.isCustomElement(tag);\n  if (tag === \"input\" || tag === \"textarea\" || tag === \"select\" || isCustomElement) {\n    let directiveToUse = V_MODEL_TEXT;\n    let isInvalidType = false;\n    if (tag === \"input\" || isCustomElement) {\n      const type = compilerCore.findProp(node, `type`);\n      if (type) {\n        if (type.type === 7) {\n          directiveToUse = V_MODEL_DYNAMIC;\n        } else if (type.value) {\n          switch (type.value.content) {\n            case \"radio\":\n              directiveToUse = V_MODEL_RADIO;\n              break;\n            case \"checkbox\":\n              directiveToUse = V_MODEL_CHECKBOX;\n              break;\n            case \"file\":\n              isInvalidType = true;\n              context.onError(\n                createDOMCompilerError(\n                  59,\n                  dir.loc\n                )\n              );\n              break;\n            default:\n              checkDuplicatedValue();\n              break;\n          }\n        }\n      } else if (compilerCore.hasDynamicKeyVBind(node)) {\n        directiveToUse = V_MODEL_DYNAMIC;\n      } else {\n        checkDuplicatedValue();\n      }\n    } else if (tag === \"select\") {\n      directiveToUse = V_MODEL_SELECT;\n    } else {\n      checkDuplicatedValue();\n    }\n    if (!isInvalidType) {\n      baseResult.needRuntime = context.helper(directiveToUse);\n    }\n  } else {\n    context.onError(\n      createDOMCompilerError(\n        57,\n        dir.loc\n      )\n    );\n  }\n  baseResult.props = baseResult.props.filter(\n    (p) => !(p.key.type === 4 && p.key.content === \"modelValue\")\n  );\n  return baseResult;\n};\n\nconst isEventOptionModifier = /* @__PURE__ */ shared.makeMap(`passive,once,capture`);\nconst isNonKeyModifier = /* @__PURE__ */ shared.makeMap(\n  // event propagation management\n  `stop,prevent,self,ctrl,shift,alt,meta,exact,middle`\n);\nconst maybeKeyModifier = /* @__PURE__ */ shared.makeMap(\"left,right\");\nconst isKeyboardEvent = /* @__PURE__ */ shared.makeMap(\n  `onkeyup,onkeydown,onkeypress`,\n  true\n);\nconst resolveModifiers = (key, modifiers, context, loc) => {\n  const keyModifiers = [];\n  const nonKeyModifiers = [];\n  const eventOptionModifiers = [];\n  for (let i = 0; i < modifiers.length; i++) {\n    const modifier = modifiers[i];\n    if (modifier === \"native\" && compilerCore.checkCompatEnabled(\n      \"COMPILER_V_ON_NATIVE\",\n      context,\n      loc\n    )) {\n      eventOptionModifiers.push(modifier);\n    } else if (isEventOptionModifier(modifier)) {\n      eventOptionModifiers.push(modifier);\n    } else {\n      if (maybeKeyModifier(modifier)) {\n        if (compilerCore.isStaticExp(key)) {\n          if (isKeyboardEvent(key.content)) {\n            keyModifiers.push(modifier);\n          } else {\n            nonKeyModifiers.push(modifier);\n          }\n        } else {\n          keyModifiers.push(modifier);\n          nonKeyModifiers.push(modifier);\n        }\n      } else {\n        if (isNonKeyModifier(modifier)) {\n          nonKeyModifiers.push(modifier);\n        } else {\n          keyModifiers.push(modifier);\n        }\n      }\n    }\n  }\n  return {\n    keyModifiers,\n    nonKeyModifiers,\n    eventOptionModifiers\n  };\n};\nconst transformClick = (key, event) => {\n  const isStaticClick = compilerCore.isStaticExp(key) && key.content.toLowerCase() === \"onclick\";\n  return isStaticClick ? compilerCore.createSimpleExpression(event, true) : key.type !== 4 ? compilerCore.createCompoundExpression([\n    `(`,\n    key,\n    `) === \"onClick\" ? \"${event}\" : (`,\n    key,\n    `)`\n  ]) : key;\n};\nconst transformOn = (dir, node, context) => {\n  return compilerCore.transformOn(dir, node, context, (baseResult) => {\n    const { modifiers } = dir;\n    if (!modifiers.length)\n      return baseResult;\n    let { key, value: handlerExp } = baseResult.props[0];\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\n    if (nonKeyModifiers.includes(\"right\")) {\n      key = transformClick(key, `onContextmenu`);\n    }\n    if (nonKeyModifiers.includes(\"middle\")) {\n      key = transformClick(key, `onMouseup`);\n    }\n    if (nonKeyModifiers.length) {\n      handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\n        handlerExp,\n        JSON.stringify(nonKeyModifiers)\n      ]);\n    }\n    if (keyModifiers.length && // if event name is dynamic, always wrap with keys guard\n    (!compilerCore.isStaticExp(key) || isKeyboardEvent(key.content))) {\n      handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_KEYS), [\n        handlerExp,\n        JSON.stringify(keyModifiers)\n      ]);\n    }\n    if (eventOptionModifiers.length) {\n      const modifierPostfix = eventOptionModifiers.map(shared.capitalize).join(\"\");\n      key = compilerCore.isStaticExp(key) ? compilerCore.createSimpleExpression(`${key.content}${modifierPostfix}`, true) : compilerCore.createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\n    }\n    return {\n      props: [compilerCore.createObjectProperty(key, handlerExp)]\n    };\n  });\n};\n\nconst transformShow = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(61, loc)\n    );\n  }\n  return {\n    props: [],\n    needRuntime: context.helper(V_SHOW)\n  };\n};\n\nconst transformTransition = (node, context) => {\n  if (node.type === 1 && node.tagType === 1) {\n    const component = context.isBuiltInComponent(node.tag);\n    if (component === TRANSITION) {\n      return () => {\n        if (!node.children.length) {\n          return;\n        }\n        if (hasMultipleChildren(node)) {\n          context.onError(\n            createDOMCompilerError(\n              62,\n              {\n                start: node.children[0].loc.start,\n                end: node.children[node.children.length - 1].loc.end,\n                source: \"\"\n              }\n            )\n          );\n        }\n        const child = node.children[0];\n        if (child.type === 1) {\n          for (const p of child.props) {\n            if (p.type === 7 && p.name === \"show\") {\n              node.props.push({\n                type: 6,\n                name: \"persisted\",\n                value: void 0,\n                loc: node.loc\n              });\n            }\n          }\n        }\n      };\n    }\n  }\n};\nfunction hasMultipleChildren(node) {\n  const children = node.children = node.children.filter(\n    (c) => c.type !== 3 && !(c.type === 2 && !c.content.trim())\n  );\n  const child = children[0];\n  return children.length !== 1 || child.type === 11 || child.type === 9 && child.branches.some(hasMultipleChildren);\n}\n\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g;\nconst stringifyStatic = (children, context, parent) => {\n  if (context.scopes.vSlot > 0) {\n    return;\n  }\n  let nc = 0;\n  let ec = 0;\n  const currentChunk = [];\n  const stringifyCurrentChunk = (currentIndex) => {\n    if (nc >= 20 || ec >= 5) {\n      const staticCall = compilerCore.createCallExpression(context.helper(compilerCore.CREATE_STATIC), [\n        JSON.stringify(\n          currentChunk.map((node) => stringifyNode(node, context)).join(\"\")\n        ).replace(expReplaceRE, `\" + $1 + \"`),\n        // the 2nd argument indicates the number of DOM nodes this static vnode\n        // will insert / hydrate\n        String(currentChunk.length)\n      ]);\n      replaceHoist(currentChunk[0], staticCall, context);\n      if (currentChunk.length > 1) {\n        for (let i2 = 1; i2 < currentChunk.length; i2++) {\n          replaceHoist(currentChunk[i2], null, context);\n        }\n        const deleteCount = currentChunk.length - 1;\n        children.splice(currentIndex - currentChunk.length + 1, deleteCount);\n        return deleteCount;\n      }\n    }\n    return 0;\n  };\n  let i = 0;\n  for (; i < children.length; i++) {\n    const child = children[i];\n    const hoisted = getHoistedNode(child);\n    if (hoisted) {\n      const node = child;\n      const result = analyzeNode(node);\n      if (result) {\n        nc += result[0];\n        ec += result[1];\n        currentChunk.push(node);\n        continue;\n      }\n    }\n    i -= stringifyCurrentChunk(i);\n    nc = 0;\n    ec = 0;\n    currentChunk.length = 0;\n  }\n  stringifyCurrentChunk(i);\n};\nconst getHoistedNode = (node) => (node.type === 1 && node.tagType === 0 || node.type == 12) && node.codegenNode && node.codegenNode.type === 4 && node.codegenNode.hoisted;\nconst dataAriaRE = /^(data|aria)-/;\nconst isStringifiableAttr = (name, ns) => {\n  return (ns === 0 ? shared.isKnownHtmlAttr(name) : ns === 1 ? shared.isKnownSvgAttr(name) : false) || dataAriaRE.test(name);\n};\nconst replaceHoist = (node, replacement, context) => {\n  const hoistToReplace = node.codegenNode.hoisted;\n  context.hoists[context.hoists.indexOf(hoistToReplace)] = replacement;\n};\nconst isNonStringifiable = /* @__PURE__ */ shared.makeMap(\n  `caption,thead,tr,th,tbody,td,tfoot,colgroup,col`\n);\nfunction analyzeNode(node) {\n  if (node.type === 1 && isNonStringifiable(node.tag)) {\n    return false;\n  }\n  if (node.type === 12) {\n    return [1, 0];\n  }\n  let nc = 1;\n  let ec = node.props.length > 0 ? 1 : 0;\n  let bailed = false;\n  const bail = () => {\n    bailed = true;\n    return false;\n  };\n  function walk(node2) {\n    for (let i = 0; i < node2.props.length; i++) {\n      const p = node2.props[i];\n      if (p.type === 6 && !isStringifiableAttr(p.name, node2.ns)) {\n        return bail();\n      }\n      if (p.type === 7 && p.name === \"bind\") {\n        if (p.arg && (p.arg.type === 8 || p.arg.isStatic && !isStringifiableAttr(p.arg.content, node2.ns))) {\n          return bail();\n        }\n        if (p.exp && (p.exp.type === 8 || p.exp.constType < 3)) {\n          return bail();\n        }\n      }\n    }\n    for (let i = 0; i < node2.children.length; i++) {\n      nc++;\n      const child = node2.children[i];\n      if (child.type === 1) {\n        if (child.props.length > 0) {\n          ec++;\n        }\n        walk(child);\n        if (bailed) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  return walk(node) ? [nc, ec] : false;\n}\nfunction stringifyNode(node, context) {\n  if (shared.isString(node)) {\n    return node;\n  }\n  if (shared.isSymbol(node)) {\n    return ``;\n  }\n  switch (node.type) {\n    case 1:\n      return stringifyElement(node, context);\n    case 2:\n      return shared.escapeHtml(node.content);\n    case 3:\n      return `<!--${shared.escapeHtml(node.content)}-->`;\n    case 5:\n      return shared.escapeHtml(shared.toDisplayString(evaluateConstant(node.content)));\n    case 8:\n      return shared.escapeHtml(evaluateConstant(node));\n    case 12:\n      return stringifyNode(node.content, context);\n    default:\n      return \"\";\n  }\n}\nfunction stringifyElement(node, context) {\n  let res = `<${node.tag}`;\n  let innerHTML = \"\";\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      res += ` ${p.name}`;\n      if (p.value) {\n        res += `=\"${shared.escapeHtml(p.value.content)}\"`;\n      }\n    } else if (p.type === 7) {\n      if (p.name === \"bind\") {\n        const exp = p.exp;\n        if (exp.content[0] === \"_\") {\n          res += ` ${p.arg.content}=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`;\n          continue;\n        }\n        if (shared.isBooleanAttr(p.arg.content) && exp.content === \"false\") {\n          continue;\n        }\n        let evaluated = evaluateConstant(exp);\n        if (evaluated != null) {\n          const arg = p.arg && p.arg.content;\n          if (arg === \"class\") {\n            evaluated = shared.normalizeClass(evaluated);\n          } else if (arg === \"style\") {\n            evaluated = shared.stringifyStyle(shared.normalizeStyle(evaluated));\n          }\n          res += ` ${p.arg.content}=\"${shared.escapeHtml(\n            evaluated\n          )}\"`;\n        }\n      } else if (p.name === \"html\") {\n        innerHTML = evaluateConstant(p.exp);\n      } else if (p.name === \"text\") {\n        innerHTML = shared.escapeHtml(\n          shared.toDisplayString(evaluateConstant(p.exp))\n        );\n      }\n    }\n  }\n  if (context.scopeId) {\n    res += ` ${context.scopeId}`;\n  }\n  res += `>`;\n  if (innerHTML) {\n    res += innerHTML;\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      res += stringifyNode(node.children[i], context);\n    }\n  }\n  if (!shared.isVoidTag(node.tag)) {\n    res += `</${node.tag}>`;\n  }\n  return res;\n}\nfunction evaluateConstant(exp) {\n  if (exp.type === 4) {\n    return new Function(`return (${exp.content})`)();\n  } else {\n    let res = ``;\n    exp.children.forEach((c) => {\n      if (shared.isString(c) || shared.isSymbol(c)) {\n        return;\n      }\n      if (c.type === 2) {\n        res += c.content;\n      } else if (c.type === 5) {\n        res += shared.toDisplayString(evaluateConstant(c.content));\n      } else {\n        res += evaluateConstant(c);\n      }\n    });\n    return res;\n  }\n}\n\nconst ignoreSideEffectTags = (node, context) => {\n  if (node.type === 1 && node.tagType === 0 && (node.tag === \"script\" || node.tag === \"style\")) {\n    context.onError(\n      createDOMCompilerError(\n        63,\n        node.loc\n      )\n    );\n    context.removeNode();\n  }\n};\n\nconst DOMNodeTransforms = [\n  transformStyle,\n  ...[transformTransition] \n];\nconst DOMDirectiveTransforms = {\n  cloak: compilerCore.noopDirectiveTransform,\n  html: transformVHtml,\n  text: transformVText,\n  model: transformModel,\n  // override compiler-core\n  on: transformOn,\n  // override compiler-core\n  show: transformShow\n};\nfunction compile(template, options = {}) {\n  return compilerCore.baseCompile(\n    template,\n    shared.extend({}, parserOptions, options, {\n      nodeTransforms: [\n        // ignore <script> and <tag>\n        // this is not put inside DOMNodeTransforms because that list is used\n        // by compiler-ssr to generate vnode fallback branches\n        ignoreSideEffectTags,\n        ...DOMNodeTransforms,\n        ...options.nodeTransforms || []\n      ],\n      directiveTransforms: shared.extend(\n        {},\n        DOMDirectiveTransforms,\n        options.directiveTransforms || {}\n      ),\n      transformHoist: stringifyStatic\n    })\n  );\n}\nfunction parse(template, options = {}) {\n  return compilerCore.baseParse(template, shared.extend({}, parserOptions, options));\n}\n\nexports.DOMDirectiveTransforms = DOMDirectiveTransforms;\nexports.DOMNodeTransforms = DOMNodeTransforms;\nexports.TRANSITION = TRANSITION;\nexports.TRANSITION_GROUP = TRANSITION_GROUP;\nexports.V_MODEL_CHECKBOX = V_MODEL_CHECKBOX;\nexports.V_MODEL_DYNAMIC = V_MODEL_DYNAMIC;\nexports.V_MODEL_RADIO = V_MODEL_RADIO;\nexports.V_MODEL_SELECT = V_MODEL_SELECT;\nexports.V_MODEL_TEXT = V_MODEL_TEXT;\nexports.V_ON_WITH_KEYS = V_ON_WITH_KEYS;\nexports.V_ON_WITH_MODIFIERS = V_ON_WITH_MODIFIERS;\nexports.V_SHOW = V_SHOW;\nexports.compile = compile;\nexports.createDOMCompilerError = createDOMCompilerError;\nexports.parse = parse;\nexports.parserOptions = parserOptions;\nexports.transformStyle = transformStyle;\nObject.keys(compilerCore).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = compilerCore[k];\n});\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/compiler-dom.cjs.prod.js')\n} else {\n  module.exports = require('./dist/compiler-dom.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\n\nfunction warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else {\n      warn(`cannot run an inactive effect scope.`);\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope to be associated with.`\n    );\n  }\n}\n\nconst createDep = (effects) => {\n  const dep = new Set(effects);\n  dep.w = 0;\n  dep.n = 0;\n  return dep;\n};\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\nconst initDepMarkers = ({ deps }) => {\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].w |= trackOpBit;\n    }\n  }\n};\nconst finalizeDepMarkers = (effect) => {\n  const { deps } = effect;\n  if (deps.length) {\n    let ptr = 0;\n    for (let i = 0; i < deps.length; i++) {\n      const dep = deps[i];\n      if (wasTracked(dep) && !newTracked(dep)) {\n        dep.delete(effect);\n      } else {\n        deps[ptr++] = dep;\n      }\n      dep.w &= ~trackOpBit;\n      dep.n &= ~trackOpBit;\n    }\n    deps.length = ptr;\n  }\n};\n\nconst targetMap = /* @__PURE__ */ new WeakMap();\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol(\"iterate\" );\nconst MAP_KEY_ITERATE_KEY = Symbol(\"Map key iterate\" );\nclass ReactiveEffect {\n  constructor(fn, scheduler = null, scope) {\n    this.fn = fn;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    this.parent = void 0;\n    recordEffectScope(this, scope);\n  }\n  run() {\n    if (!this.active) {\n      return this.fn();\n    }\n    let parent = activeEffect;\n    let lastShouldTrack = shouldTrack;\n    while (parent) {\n      if (parent === this) {\n        return;\n      }\n      parent = parent.parent;\n    }\n    try {\n      this.parent = activeEffect;\n      activeEffect = this;\n      shouldTrack = true;\n      trackOpBit = 1 << ++effectTrackDepth;\n      if (effectTrackDepth <= maxMarkerBits) {\n        initDepMarkers(this);\n      } else {\n        cleanupEffect(this);\n      }\n      return this.fn();\n    } finally {\n      if (effectTrackDepth <= maxMarkerBits) {\n        finalizeDepMarkers(this);\n      }\n      trackOpBit = 1 << --effectTrackDepth;\n      activeEffect = this.parent;\n      shouldTrack = lastShouldTrack;\n      this.parent = void 0;\n      if (this.deferStop) {\n        this.stop();\n      }\n    }\n  }\n  stop() {\n    if (activeEffect === this) {\n      this.deferStop = true;\n    } else if (this.active) {\n      cleanupEffect(this);\n      if (this.onStop) {\n        this.onStop();\n      }\n      this.active = false;\n    }\n  }\n}\nfunction cleanupEffect(effect2) {\n  const { deps } = effect2;\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect2);\n    }\n    deps.length = 0;\n  }\n}\nfunction effect(fn, options) {\n  if (fn.effect instanceof ReactiveEffect) {\n    fn = fn.effect.fn;\n  }\n  const _effect = new ReactiveEffect(fn);\n  if (options) {\n    shared.extend(_effect, options);\n    if (options.scope)\n      recordEffectScope(_effect, options.scope);\n  }\n  if (!options || !options.lazy) {\n    _effect.run();\n  }\n  const runner = _effect.run.bind(_effect);\n  runner.effect = _effect;\n  return runner;\n}\nfunction stop(runner) {\n  runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = createDep());\n    }\n    const eventInfo = { effect: activeEffect, target, type, key } ;\n    trackEffects(dep, eventInfo);\n  }\n}\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n  let shouldTrack2 = false;\n  if (effectTrackDepth <= maxMarkerBits) {\n    if (!newTracked(dep)) {\n      dep.n |= trackOpBit;\n      shouldTrack2 = !wasTracked(dep);\n    }\n  } else {\n    shouldTrack2 = !dep.has(activeEffect);\n  }\n  if (shouldTrack2) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n    if (activeEffect.onTrack) {\n      activeEffect.onTrack(\n        shared.extend(\n          {\n            effect: activeEffect\n          },\n          debuggerEventExtraInfo\n        )\n      );\n    }\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    return;\n  }\n  let deps = [];\n  if (type === \"clear\") {\n    deps = [...depsMap.values()];\n  } else if (key === \"length\" && shared.isArray(target)) {\n    const newLength = Number(newValue);\n    depsMap.forEach((dep, key2) => {\n      if (key2 === \"length\" || !shared.isSymbol(key2) && key2 >= newLength) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    }\n    switch (type) {\n      case \"add\":\n        if (!shared.isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (shared.isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (shared.isIntegerKey(key)) {\n          deps.push(depsMap.get(\"length\"));\n        }\n        break;\n      case \"delete\":\n        if (!shared.isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (shared.isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n        break;\n      case \"set\":\n        if (shared.isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n        break;\n    }\n  }\n  const eventInfo = { target, type, key, newValue, oldValue, oldTarget } ;\n  if (deps.length === 1) {\n    if (deps[0]) {\n      {\n        triggerEffects(deps[0], eventInfo);\n      }\n    }\n  } else {\n    const effects = [];\n    for (const dep of deps) {\n      if (dep) {\n        effects.push(...dep);\n      }\n    }\n    {\n      triggerEffects(createDep(effects), eventInfo);\n    }\n  }\n}\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n  const effects = shared.isArray(dep) ? dep : [...dep];\n  for (const effect2 of effects) {\n    if (effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n  for (const effect2 of effects) {\n    if (!effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n}\nfunction triggerEffect(effect2, debuggerEventExtraInfo) {\n  if (effect2 !== activeEffect || effect2.allowRecurse) {\n    if (effect2.onTrigger) {\n      effect2.onTrigger(shared.extend({ effect: effect2 }, debuggerEventExtraInfo));\n    }\n    if (effect2.scheduler) {\n      effect2.scheduler();\n    } else {\n      effect2.run();\n    }\n  }\n}\nfunction getDepFromReactive(object, key) {\n  var _a;\n  return (_a = targetMap.get(object)) == null ? void 0 : _a.get(key);\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ shared.makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(shared.isSymbol)\n);\nconst arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  [\"includes\", \"indexOf\", \"lastIndexOf\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      const arr = toRaw(this);\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\", i + \"\");\n      }\n      const res = arr[key](...args);\n      if (res === -1 || res === false) {\n        return arr[key](...args.map(toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      pauseTracking();\n      const res = toRaw(this)[key].apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\nfunction hasOwnProperty(key) {\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nclass BaseReactiveHandler {\n  constructor(_isReadonly = false, _shallow = false) {\n    this._isReadonly = _isReadonly;\n    this._shallow = _shallow;\n  }\n  get(target, key, receiver) {\n    const isReadonly2 = this._isReadonly, shallow = this._shallow;\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return shallow;\n    } else if (key === \"__v_raw\" && receiver === (isReadonly2 ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n    const targetIsArray = shared.isArray(target);\n    if (!isReadonly2) {\n      if (targetIsArray && shared.hasOwn(arrayInstrumentations, key)) {\n        return Reflect.get(arrayInstrumentations, key, receiver);\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(target, key, receiver);\n    if (shared.isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (shallow) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && shared.isIntegerKey(key) ? res : res.value;\n    }\n    if (shared.isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  }\n}\nclass MutableReactiveHandler extends BaseReactiveHandler {\n  constructor(shallow = false) {\n    super(false, shallow);\n  }\n  set(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n      return false;\n    }\n    if (!this._shallow) {\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!shared.isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n    const hadKey = shared.isArray(target) && shared.isIntegerKey(key) ? Number(key) < target.length : shared.hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver);\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (shared.hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n    return result;\n  }\n  deleteProperty(target, key) {\n    const hadKey = shared.hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n      trigger(target, \"delete\", key, void 0, oldValue);\n    }\n    return result;\n  }\n  has(target, key) {\n    const result = Reflect.has(target, key);\n    if (!shared.isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, \"has\", key);\n    }\n    return result;\n  }\n  ownKeys(target) {\n    track(\n      target,\n      \"iterate\",\n      shared.isArray(target) ? \"length\" : ITERATE_KEY\n    );\n    return Reflect.ownKeys(target);\n  }\n}\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\n  constructor(shallow = false) {\n    super(true, shallow);\n  }\n  set(target, key) {\n    {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n  deleteProperty(target, key) {\n    {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n}\nconst mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();\nconst readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();\nconst shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(\n  true\n);\nconst shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(true);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly = false, isShallow = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (shared.hasChanged(key, rawKey)) {\n      track(rawTarget, \"get\", key);\n    }\n    track(rawTarget, \"get\", rawKey);\n  }\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has(key, isReadonly = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (shared.hasChanged(key, rawKey)) {\n      track(rawTarget, \"has\", key);\n    }\n    track(rawTarget, \"has\", rawKey);\n  }\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (shared.hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value, oldValue);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2 ? get2.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget = shared.isMap(target) ? new Map(target) : new Set(target) ;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0, oldTarget);\n  }\n  return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = shared.isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      console.warn(\n        `${shared.capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this)\n      );\n    }\n    return type === \"delete\" ? false : type === \"clear\" ? void 0 : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\"keys\", \"values\", \"entries\", Symbol.iterator];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      false\n    );\n    readonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      false\n    );\n    shallowInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      true\n    );\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      true\n    );\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      shared.hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has2, key) {\n  const rawKey = toRaw(key);\n  if (rawKey !== key && has2.call(target, rawKey)) {\n    const type = shared.toRawType(target);\n    console.warn(\n      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`\n    );\n  }\n}\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(shared.toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction shallowReadonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!shared.isObject(target)) {\n    {\n      console.warn(`value cannot be made reactive: ${String(target)}`);\n    }\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  shared.def(value, \"__v_skip\", true);\n  return value;\n}\nconst toReactive = (value) => shared.isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => shared.isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref2) {\n  if (shouldTrack && activeEffect) {\n    ref2 = toRaw(ref2);\n    {\n      trackEffects(ref2.dep || (ref2.dep = createDep()), {\n        target: ref2,\n        type: \"get\",\n        key: \"value\"\n      });\n    }\n  }\n}\nfunction triggerRefValue(ref2, newVal) {\n  ref2 = toRaw(ref2);\n  const dep = ref2.dep;\n  if (dep) {\n    {\n      triggerEffects(dep, {\n        target: ref2,\n        type: \"set\",\n        key: \"value\",\n        newValue: newVal\n      });\n    }\n  }\n}\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, __v_isShallow) {\n    this.__v_isShallow = __v_isShallow;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n  get value() {\n    trackRefValue(this);\n    return this._value;\n  }\n  set value(newVal) {\n    const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n    newVal = useDirectValue ? newVal : toRaw(newVal);\n    if (shared.hasChanged(newVal, this._rawValue)) {\n      this._rawValue = newVal;\n      this._value = useDirectValue ? newVal : toReactive(newVal);\n      triggerRefValue(this, newVal);\n    }\n  }\n}\nfunction triggerRef(ref2) {\n  triggerRefValue(ref2, ref2.value );\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nfunction toValue(source) {\n  return shared.isFunction(source) ? source() : unref(source);\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n  constructor(factory) {\n    this.dep = void 0;\n    this.__v_isRef = true;\n    const { get, set } = factory(\n      () => trackRefValue(this),\n      () => triggerRefValue(this)\n    );\n    this._get = get;\n    this._set = set;\n  }\n  get value() {\n    return this._get();\n  }\n  set value(newVal) {\n    this._set(newVal);\n  }\n}\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n  if (!isProxy(object)) {\n    console.warn(`toRefs() expects a reactive object but received a plain one.`);\n  }\n  const ret = shared.isArray(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nclass GetterRefImpl {\n  constructor(_getter) {\n    this._getter = _getter;\n    this.__v_isRef = true;\n    this.__v_isReadonly = true;\n  }\n  get value() {\n    return this._getter();\n  }\n}\nfunction toRef(source, key, defaultValue) {\n  if (isRef(source)) {\n    return source;\n  } else if (shared.isFunction(source)) {\n    return new GetterRefImpl(source);\n  } else if (shared.isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key, defaultValue);\n  } else {\n    return ref(source);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(source, key, defaultValue);\n}\n\nclass ComputedRefImpl {\n  constructor(getter, _setter, isReadonly, isSSR) {\n    this._setter = _setter;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = false;\n    this._dirty = true;\n    this.effect = new ReactiveEffect(getter, () => {\n      if (!this._dirty) {\n        this._dirty = true;\n        triggerRefValue(this);\n      }\n    });\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"] = isReadonly;\n  }\n  get value() {\n    const self = toRaw(this);\n    trackRefValue(self);\n    if (self._dirty || !self._cacheable) {\n      self._dirty = false;\n      self._value = self.effect.run();\n    }\n    return self._value;\n  }\n  set value(newValue) {\n    this._setter(newValue);\n  }\n}\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  const onlyGetter = shared.isFunction(getterOrOptions);\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter = () => {\n      console.warn(\"Write operation failed: computed value is readonly\");\n    } ;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n  if (debugOptions && !isSSR) {\n    cRef.effect.onTrack = debugOptions.onTrack;\n    cRef.effect.onTrigger = debugOptions.onTrigger;\n  }\n  return cRef;\n}\n\nconst tick = /* @__PURE__ */ Promise.resolve();\nconst queue = [];\nlet queued = false;\nconst scheduler = (fn) => {\n  queue.push(fn);\n  if (!queued) {\n    queued = true;\n    tick.then(flush);\n  }\n};\nconst flush = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n  queue.length = 0;\n  queued = false;\n};\nclass DeferredComputedRefImpl {\n  constructor(getter) {\n    this.dep = void 0;\n    this._dirty = true;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = true;\n    let compareTarget;\n    let hasCompareTarget = false;\n    let scheduled = false;\n    this.effect = new ReactiveEffect(getter, (computedTrigger) => {\n      if (this.dep) {\n        if (computedTrigger) {\n          compareTarget = this._value;\n          hasCompareTarget = true;\n        } else if (!scheduled) {\n          const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n          scheduled = true;\n          hasCompareTarget = false;\n          scheduler(() => {\n            if (this.effect.active && this._get() !== valueToCompare) {\n              triggerRefValue(this);\n            }\n            scheduled = false;\n          });\n        }\n        for (const e of this.dep) {\n          if (e.computed instanceof DeferredComputedRefImpl) {\n            e.scheduler(\n              true\n              /* computedTrigger */\n            );\n          }\n        }\n      }\n      this._dirty = true;\n    });\n    this.effect.computed = this;\n  }\n  _get() {\n    if (this._dirty) {\n      this._dirty = false;\n      return this._value = this.effect.run();\n    }\n    return this._value;\n  }\n  get value() {\n    trackRefValue(this);\n    return toRaw(this)._get();\n  }\n}\nfunction deferredComputed(getter) {\n  return new DeferredComputedRefImpl(getter);\n}\n\nexports.EffectScope = EffectScope;\nexports.ITERATE_KEY = ITERATE_KEY;\nexports.ReactiveEffect = ReactiveEffect;\nexports.computed = computed;\nexports.customRef = customRef;\nexports.deferredComputed = deferredComputed;\nexports.effect = effect;\nexports.effectScope = effectScope;\nexports.enableTracking = enableTracking;\nexports.getCurrentScope = getCurrentScope;\nexports.isProxy = isProxy;\nexports.isReactive = isReactive;\nexports.isReadonly = isReadonly;\nexports.isRef = isRef;\nexports.isShallow = isShallow;\nexports.markRaw = markRaw;\nexports.onScopeDispose = onScopeDispose;\nexports.pauseTracking = pauseTracking;\nexports.proxyRefs = proxyRefs;\nexports.reactive = reactive;\nexports.readonly = readonly;\nexports.ref = ref;\nexports.resetTracking = resetTracking;\nexports.shallowReactive = shallowReactive;\nexports.shallowReadonly = shallowReadonly;\nexports.shallowRef = shallowRef;\nexports.stop = stop;\nexports.toRaw = toRaw;\nexports.toRef = toRef;\nexports.toRefs = toRefs;\nexports.toValue = toValue;\nexports.track = track;\nexports.trigger = trigger;\nexports.triggerRef = triggerRef;\nexports.unref = unref;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/reactivity.cjs.prod.js')\n} else {\n  module.exports = require('./dist/reactivity.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar reactivity = require('@vue/reactivity');\nvar shared = require('@vue/shared');\n\nconst stack = [];\nfunction pushWarningContext(vnode) {\n  stack.push(vnode);\n}\nfunction popWarningContext() {\n  stack.pop();\n}\nfunction warn(msg, ...args) {\n  reactivity.pauseTracking();\n  const instance = stack.length ? stack[stack.length - 1].component : null;\n  const appWarnHandler = instance && instance.appContext.config.warnHandler;\n  const trace = getComponentTrace();\n  if (appWarnHandler) {\n    callWithErrorHandling(\n      appWarnHandler,\n      instance,\n      11,\n      [\n        msg + args.join(\"\"),\n        instance && instance.proxy,\n        trace.map(\n          ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\n        ).join(\"\\n\"),\n        trace\n      ]\n    );\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n    if (trace.length && // avoid spamming console during tests\n    true) {\n      warnArgs.push(`\n`, ...formatTrace(trace));\n    }\n    console.warn(...warnArgs);\n  }\n  reactivity.resetTracking();\n}\nfunction getComponentTrace() {\n  let currentVNode = stack[stack.length - 1];\n  if (!currentVNode) {\n    return [];\n  }\n  const normalizedStack = [];\n  while (currentVNode) {\n    const last = normalizedStack[0];\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++;\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode,\n        recurseCount: 0\n      });\n    }\n    const parentInstance = currentVNode.component && currentVNode.component.parent;\n    currentVNode = parentInstance && parentInstance.vnode;\n  }\n  return normalizedStack;\n}\nfunction formatTrace(trace) {\n  const logs = [];\n  trace.forEach((entry, i) => {\n    logs.push(...i === 0 ? [] : [`\n`], ...formatTraceEntry(entry));\n  });\n  return logs;\n}\nfunction formatTraceEntry({ vnode, recurseCount }) {\n  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n  const isRoot = vnode.component ? vnode.component.parent == null : false;\n  const open = ` at <${formatComponentName(\n    vnode.component,\n    vnode.type,\n    isRoot\n  )}`;\n  const close = `>` + postfix;\n  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];\n}\nfunction formatProps(props) {\n  const res = [];\n  const keys = Object.keys(props);\n  keys.slice(0, 3).forEach((key) => {\n    res.push(...formatProp(key, props[key]));\n  });\n  if (keys.length > 3) {\n    res.push(` ...`);\n  }\n  return res;\n}\nfunction formatProp(key, value, raw) {\n  if (shared.isString(value)) {\n    value = JSON.stringify(value);\n    return raw ? value : [`${key}=${value}`];\n  } else if (typeof value === \"number\" || typeof value === \"boolean\" || value == null) {\n    return raw ? value : [`${key}=${value}`];\n  } else if (reactivity.isRef(value)) {\n    value = formatProp(key, reactivity.toRaw(value.value), true);\n    return raw ? value : [`${key}=Ref<`, value, `>`];\n  } else if (shared.isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n  } else {\n    value = reactivity.toRaw(value);\n    return raw ? value : [`${key}=`, value];\n  }\n}\nfunction assertNumber(val, type) {\n  if (val === void 0) {\n    return;\n  } else if (typeof val !== \"number\") {\n    warn(`${type} is not a valid number - got ${JSON.stringify(val)}.`);\n  } else if (isNaN(val)) {\n    warn(`${type} is NaN - the duration expression might be incorrect.`);\n  }\n}\n\nconst ErrorTypeStrings = {\n  [\"sp\"]: \"serverPrefetch hook\",\n  [\"bc\"]: \"beforeCreate hook\",\n  [\"c\"]: \"created hook\",\n  [\"bm\"]: \"beforeMount hook\",\n  [\"m\"]: \"mounted hook\",\n  [\"bu\"]: \"beforeUpdate hook\",\n  [\"u\"]: \"updated\",\n  [\"bum\"]: \"beforeUnmount hook\",\n  [\"um\"]: \"unmounted hook\",\n  [\"a\"]: \"activated hook\",\n  [\"da\"]: \"deactivated hook\",\n  [\"ec\"]: \"errorCaptured hook\",\n  [\"rtc\"]: \"renderTracked hook\",\n  [\"rtg\"]: \"renderTriggered hook\",\n  [0]: \"setup function\",\n  [1]: \"render function\",\n  [2]: \"watcher getter\",\n  [3]: \"watcher callback\",\n  [4]: \"watcher cleanup function\",\n  [5]: \"native event handler\",\n  [6]: \"component event handler\",\n  [7]: \"vnode hook\",\n  [8]: \"directive hook\",\n  [9]: \"transition hook\",\n  [10]: \"app errorHandler\",\n  [11]: \"app warnHandler\",\n  [12]: \"ref function\",\n  [13]: \"async component loader\",\n  [14]: \"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core\"\n};\nfunction callWithErrorHandling(fn, instance, type, args) {\n  let res;\n  try {\n    res = args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, instance, type);\n  }\n  return res;\n}\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n  if (shared.isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args);\n    if (res && shared.isPromise(res)) {\n      res.catch((err) => {\n        handleError(err, instance, type);\n      });\n    }\n    return res;\n  }\n  const values = [];\n  for (let i = 0; i < fn.length; i++) {\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n  }\n  return values;\n}\nfunction handleError(err, instance, type, throwInDev = true) {\n  const contextVNode = instance ? instance.vnode : null;\n  if (instance) {\n    let cur = instance.parent;\n    const exposedInstance = instance.proxy;\n    const errorInfo = ErrorTypeStrings[type] ;\n    while (cur) {\n      const errorCapturedHooks = cur.ec;\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n            return;\n          }\n        }\n      }\n      cur = cur.parent;\n    }\n    const appErrorHandler = instance.appContext.config.errorHandler;\n    if (appErrorHandler) {\n      callWithErrorHandling(\n        appErrorHandler,\n        null,\n        10,\n        [err, exposedInstance, errorInfo]\n      );\n      return;\n    }\n  }\n  logError(err, type, contextVNode, throwInDev);\n}\nfunction logError(err, type, contextVNode, throwInDev = true) {\n  {\n    const info = ErrorTypeStrings[type];\n    if (contextVNode) {\n      pushWarningContext(contextVNode);\n    }\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\n    if (contextVNode) {\n      popWarningContext();\n    }\n    if (throwInDev) {\n      throw err;\n    } else {\n      console.error(err);\n    }\n  }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /* @__PURE__ */ Promise.resolve();\nlet currentFlushPromise = null;\nconst RECURSION_LIMIT = 100;\nfunction nextTick(fn) {\n  const p = currentFlushPromise || resolvedPromise;\n  return fn ? p.then(this ? fn.bind(this) : fn) : p;\n}\nfunction findInsertionIndex(id) {\n  let start = flushIndex + 1;\n  let end = queue.length;\n  while (start < end) {\n    const middle = start + end >>> 1;\n    const middleJob = queue[middle];\n    const middleJobId = getId(middleJob);\n    if (middleJobId < id || middleJobId === id && middleJob.pre) {\n      start = middle + 1;\n    } else {\n      end = middle;\n    }\n  }\n  return start;\n}\nfunction queueJob(job) {\n  if (!queue.length || !queue.includes(\n    job,\n    isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\n  )) {\n    if (job.id == null) {\n      queue.push(job);\n    } else {\n      queue.splice(findInsertionIndex(job.id), 0, job);\n    }\n    queueFlush();\n  }\n}\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true;\n    currentFlushPromise = resolvedPromise.then(flushJobs);\n  }\n}\nfunction invalidateJob(job) {\n  const i = queue.indexOf(job);\n  if (i > flushIndex) {\n    queue.splice(i, 1);\n  }\n}\nfunction queuePostFlushCb(cb) {\n  if (!shared.isArray(cb)) {\n    if (!activePostFlushCbs || !activePostFlushCbs.includes(\n      cb,\n      cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex\n    )) {\n      pendingPostFlushCbs.push(cb);\n    }\n  } else {\n    pendingPostFlushCbs.push(...cb);\n  }\n  queueFlush();\n}\nfunction flushPreFlushCbs(seen, i = isFlushing ? flushIndex + 1 : 0) {\n  {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  for (; i < queue.length; i++) {\n    const cb = queue[i];\n    if (cb && cb.pre) {\n      if (checkRecursiveUpdates(seen, cb)) {\n        continue;\n      }\n      queue.splice(i, 1);\n      i--;\n      cb();\n    }\n  }\n}\nfunction flushPostFlushCbs(seen) {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)];\n    pendingPostFlushCbs.length = 0;\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped);\n      return;\n    }\n    activePostFlushCbs = deduped;\n    {\n      seen = seen || /* @__PURE__ */ new Map();\n    }\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\n    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n      if (checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\n        continue;\n      }\n      activePostFlushCbs[postFlushIndex]();\n    }\n    activePostFlushCbs = null;\n    postFlushIndex = 0;\n  }\n}\nconst getId = (job) => job.id == null ? Infinity : job.id;\nconst comparator = (a, b) => {\n  const diff = getId(a) - getId(b);\n  if (diff === 0) {\n    if (a.pre && !b.pre)\n      return -1;\n    if (b.pre && !a.pre)\n      return 1;\n  }\n  return diff;\n};\nfunction flushJobs(seen) {\n  isFlushPending = false;\n  isFlushing = true;\n  {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  queue.sort(comparator);\n  const check = (job) => checkRecursiveUpdates(seen, job) ;\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n      if (job && job.active !== false) {\n        if (check(job)) {\n          continue;\n        }\n        callWithErrorHandling(job, null, 14);\n      }\n    }\n  } finally {\n    flushIndex = 0;\n    queue.length = 0;\n    flushPostFlushCbs(seen);\n    isFlushing = false;\n    currentFlushPromise = null;\n    if (queue.length || pendingPostFlushCbs.length) {\n      flushJobs(seen);\n    }\n  }\n}\nfunction checkRecursiveUpdates(seen, fn) {\n  if (!seen.has(fn)) {\n    seen.set(fn, 1);\n  } else {\n    const count = seen.get(fn);\n    if (count > RECURSION_LIMIT) {\n      const instance = fn.ownerInstance;\n      const componentName = instance && getComponentName(instance.type);\n      warn(\n        `Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`\n      );\n      return true;\n    } else {\n      seen.set(fn, count + 1);\n    }\n  }\n}\n\nlet isHmrUpdating = false;\nconst hmrDirtyComponents = /* @__PURE__ */ new Set();\n{\n  shared.getGlobalThis().__VUE_HMR_RUNTIME__ = {\n    createRecord: tryWrap(createRecord),\n    rerender: tryWrap(rerender),\n    reload: tryWrap(reload)\n  };\n}\nconst map = /* @__PURE__ */ new Map();\nfunction registerHMR(instance) {\n  const id = instance.type.__hmrId;\n  let record = map.get(id);\n  if (!record) {\n    createRecord(id, instance.type);\n    record = map.get(id);\n  }\n  record.instances.add(instance);\n}\nfunction unregisterHMR(instance) {\n  map.get(instance.type.__hmrId).instances.delete(instance);\n}\nfunction createRecord(id, initialDef) {\n  if (map.has(id)) {\n    return false;\n  }\n  map.set(id, {\n    initialDef: normalizeClassComponent(initialDef),\n    instances: /* @__PURE__ */ new Set()\n  });\n  return true;\n}\nfunction normalizeClassComponent(component) {\n  return isClassComponent(component) ? component.__vccOpts : component;\n}\nfunction rerender(id, newRender) {\n  const record = map.get(id);\n  if (!record) {\n    return;\n  }\n  record.initialDef.render = newRender;\n  [...record.instances].forEach((instance) => {\n    if (newRender) {\n      instance.render = newRender;\n      normalizeClassComponent(instance.type).render = newRender;\n    }\n    instance.renderCache = [];\n    isHmrUpdating = true;\n    instance.update();\n    isHmrUpdating = false;\n  });\n}\nfunction reload(id, newComp) {\n  const record = map.get(id);\n  if (!record)\n    return;\n  newComp = normalizeClassComponent(newComp);\n  updateComponentDef(record.initialDef, newComp);\n  const instances = [...record.instances];\n  for (const instance of instances) {\n    const oldComp = normalizeClassComponent(instance.type);\n    if (!hmrDirtyComponents.has(oldComp)) {\n      if (oldComp !== record.initialDef) {\n        updateComponentDef(oldComp, newComp);\n      }\n      hmrDirtyComponents.add(oldComp);\n    }\n    instance.appContext.propsCache.delete(instance.type);\n    instance.appContext.emitsCache.delete(instance.type);\n    instance.appContext.optionsCache.delete(instance.type);\n    if (instance.ceReload) {\n      hmrDirtyComponents.add(oldComp);\n      instance.ceReload(newComp.styles);\n      hmrDirtyComponents.delete(oldComp);\n    } else if (instance.parent) {\n      queueJob(instance.parent.update);\n    } else if (instance.appContext.reload) {\n      instance.appContext.reload();\n    } else if (typeof window !== \"undefined\") {\n      window.location.reload();\n    } else {\n      console.warn(\n        \"[HMR] Root or manually mounted instance modified. Full reload required.\"\n      );\n    }\n  }\n  queuePostFlushCb(() => {\n    for (const instance of instances) {\n      hmrDirtyComponents.delete(\n        normalizeClassComponent(instance.type)\n      );\n    }\n  });\n}\nfunction updateComponentDef(oldComp, newComp) {\n  shared.extend(oldComp, newComp);\n  for (const key in oldComp) {\n    if (key !== \"__file\" && !(key in newComp)) {\n      delete oldComp[key];\n    }\n  }\n}\nfunction tryWrap(fn) {\n  return (id, arg) => {\n    try {\n      return fn(id, arg);\n    } catch (e) {\n      console.error(e);\n      console.warn(\n        `[HMR] Something went wrong during Vue component hot-reload. Full reload required.`\n      );\n    }\n  };\n}\n\nexports.devtools = void 0;\nlet buffer = [];\nlet devtoolsNotInstalled = false;\nfunction emit$1(event, ...args) {\n  if (exports.devtools) {\n    exports.devtools.emit(event, ...args);\n  } else if (!devtoolsNotInstalled) {\n    buffer.push({ event, args });\n  }\n}\nfunction setDevtoolsHook(hook, target) {\n  var _a, _b;\n  exports.devtools = hook;\n  if (exports.devtools) {\n    exports.devtools.enabled = true;\n    buffer.forEach(({ event, args }) => exports.devtools.emit(event, ...args));\n    buffer = [];\n  } else if (\n    // handle late devtools injection - only do this if we are in an actual\n    // browser environment to avoid the timer handle stalling test runner exit\n    // (#4815)\n    typeof window !== \"undefined\" && // some envs mock window but not fully\n    window.HTMLElement && // also exclude jsdom\n    !((_b = (_a = window.navigator) == null ? void 0 : _a.userAgent) == null ? void 0 : _b.includes(\"jsdom\"))\n  ) {\n    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];\n    replay.push((newHook) => {\n      setDevtoolsHook(newHook, target);\n    });\n    setTimeout(() => {\n      if (!exports.devtools) {\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\n        devtoolsNotInstalled = true;\n        buffer = [];\n      }\n    }, 3e3);\n  } else {\n    devtoolsNotInstalled = true;\n    buffer = [];\n  }\n}\nfunction devtoolsInitApp(app, version) {\n  emit$1(\"app:init\" /* APP_INIT */, app, version, {\n    Fragment,\n    Text,\n    Comment,\n    Static\n  });\n}\nfunction devtoolsUnmountApp(app) {\n  emit$1(\"app:unmount\" /* APP_UNMOUNT */, app);\n}\nconst devtoolsComponentAdded = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:added\" /* COMPONENT_ADDED */\n);\nconst devtoolsComponentUpdated = /* @__PURE__ */ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\nconst _devtoolsComponentRemoved = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:removed\" /* COMPONENT_REMOVED */\n);\nconst devtoolsComponentRemoved = (component) => {\n  if (exports.devtools && typeof exports.devtools.cleanupBuffer === \"function\" && // remove the component if it wasn't buffered\n  !exports.devtools.cleanupBuffer(component)) {\n    _devtoolsComponentRemoved(component);\n  }\n};\nfunction createDevtoolsComponentHook(hook) {\n  return (component) => {\n    emit$1(\n      hook,\n      component.appContext.app,\n      component.uid,\n      component.parent ? component.parent.uid : void 0,\n      component\n    );\n  };\n}\nconst devtoolsPerfStart = /* @__PURE__ */ createDevtoolsPerformanceHook(\n  \"perf:start\" /* PERFORMANCE_START */\n);\nconst devtoolsPerfEnd = /* @__PURE__ */ createDevtoolsPerformanceHook(\n  \"perf:end\" /* PERFORMANCE_END */\n);\nfunction createDevtoolsPerformanceHook(hook) {\n  return (component, type, time) => {\n    emit$1(hook, component.appContext.app, component.uid, component, type, time);\n  };\n}\nfunction devtoolsComponentEmit(component, event, params) {\n  emit$1(\n    \"component:emit\" /* COMPONENT_EMIT */,\n    component.appContext.app,\n    component,\n    event,\n    params\n  );\n}\n\nfunction emit(instance, event, ...rawArgs) {\n  if (instance.isUnmounted)\n    return;\n  const props = instance.vnode.props || shared.EMPTY_OBJ;\n  {\n    const {\n      emitsOptions,\n      propsOptions: [propsOptions]\n    } = instance;\n    if (emitsOptions) {\n      if (!(event in emitsOptions) && true) {\n        if (!propsOptions || !(shared.toHandlerKey(event) in propsOptions)) {\n          warn(\n            `Component emitted event \"${event}\" but it is neither declared in the emits option nor as an \"${shared.toHandlerKey(event)}\" prop.`\n          );\n        }\n      } else {\n        const validator = emitsOptions[event];\n        if (shared.isFunction(validator)) {\n          const isValid = validator(...rawArgs);\n          if (!isValid) {\n            warn(\n              `Invalid event arguments: event validation failed for event \"${event}\".`\n            );\n          }\n        }\n      }\n    }\n  }\n  let args = rawArgs;\n  const isModelListener = event.startsWith(\"update:\");\n  const modelArg = isModelListener && event.slice(7);\n  if (modelArg && modelArg in props) {\n    const modifiersKey = `${modelArg === \"modelValue\" ? \"model\" : modelArg}Modifiers`;\n    const { number, trim } = props[modifiersKey] || shared.EMPTY_OBJ;\n    if (trim) {\n      args = rawArgs.map((a) => shared.isString(a) ? a.trim() : a);\n    }\n    if (number) {\n      args = rawArgs.map(shared.looseToNumber);\n    }\n  }\n  {\n    devtoolsComponentEmit(instance, event, args);\n  }\n  {\n    const lowerCaseEvent = event.toLowerCase();\n    if (lowerCaseEvent !== event && props[shared.toHandlerKey(lowerCaseEvent)]) {\n      warn(\n        `Event \"${lowerCaseEvent}\" is emitted in component ${formatComponentName(\n          instance,\n          instance.type\n        )} but the handler is registered for \"${event}\". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use \"${shared.hyphenate(event)}\" instead of \"${event}\".`\n      );\n    }\n  }\n  let handlerName;\n  let handler = props[handlerName = shared.toHandlerKey(event)] || // also try camelCase event handler (#2249)\n  props[handlerName = shared.toHandlerKey(shared.camelize(event))];\n  if (!handler && isModelListener) {\n    handler = props[handlerName = shared.toHandlerKey(shared.hyphenate(event))];\n  }\n  if (handler) {\n    callWithAsyncErrorHandling(\n      handler,\n      instance,\n      6,\n      args\n    );\n  }\n  const onceHandler = props[handlerName + `Once`];\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {};\n    } else if (instance.emitted[handlerName]) {\n      return;\n    }\n    instance.emitted[handlerName] = true;\n    callWithAsyncErrorHandling(\n      onceHandler,\n      instance,\n      6,\n      args\n    );\n  }\n}\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.emitsCache;\n  const cached = cache.get(comp);\n  if (cached !== void 0) {\n    return cached;\n  }\n  const raw = comp.emits;\n  let normalized = {};\n  let hasExtends = false;\n  if (!shared.isFunction(comp)) {\n    const extendEmits = (raw2) => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);\n      if (normalizedFromExtend) {\n        hasExtends = true;\n        shared.extend(normalized, normalizedFromExtend);\n      }\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits);\n    }\n    if (comp.extends) {\n      extendEmits(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (shared.isObject(comp)) {\n      cache.set(comp, null);\n    }\n    return null;\n  }\n  if (shared.isArray(raw)) {\n    raw.forEach((key) => normalized[key] = null);\n  } else {\n    shared.extend(normalized, raw);\n  }\n  if (shared.isObject(comp)) {\n    cache.set(comp, normalized);\n  }\n  return normalized;\n}\nfunction isEmitListener(options, key) {\n  if (!options || !shared.isOn(key)) {\n    return false;\n  }\n  key = key.slice(2).replace(/Once$/, \"\");\n  return shared.hasOwn(options, key[0].toLowerCase() + key.slice(1)) || shared.hasOwn(options, shared.hyphenate(key)) || shared.hasOwn(options, key);\n}\n\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\nfunction setCurrentRenderingInstance(instance) {\n  const prev = currentRenderingInstance;\n  currentRenderingInstance = instance;\n  currentScopeId = instance && instance.type.__scopeId || null;\n  return prev;\n}\nfunction pushScopeId(id) {\n  currentScopeId = id;\n}\nfunction popScopeId() {\n  currentScopeId = null;\n}\nconst withScopeId = (_id) => withCtx;\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot) {\n  if (!ctx)\n    return fn;\n  if (fn._n) {\n    return fn;\n  }\n  const renderFnWithContext = (...args) => {\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1);\n    }\n    const prevInstance = setCurrentRenderingInstance(ctx);\n    let res;\n    try {\n      res = fn(...args);\n    } finally {\n      setCurrentRenderingInstance(prevInstance);\n      if (renderFnWithContext._d) {\n        setBlockTracking(1);\n      }\n    }\n    {\n      devtoolsComponentUpdated(ctx);\n    }\n    return res;\n  };\n  renderFnWithContext._n = true;\n  renderFnWithContext._c = true;\n  renderFnWithContext._d = true;\n  return renderFnWithContext;\n}\n\nlet accessedAttrs = false;\nfunction markAttrsAccessed() {\n  accessedAttrs = true;\n}\nfunction renderComponentRoot(instance) {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    props,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance;\n  let result;\n  let fallthroughAttrs;\n  const prev = setCurrentRenderingInstance(instance);\n  {\n    accessedAttrs = false;\n  }\n  try {\n    if (vnode.shapeFlag & 4) {\n      const proxyToUse = withProxy || proxy;\n      const thisProxy = setupState.__isScriptSetup ? new Proxy(proxyToUse, {\n        get(target, key, receiver) {\n          warn(\n            `Property '${String(\n              key\n            )}' was accessed via 'this'. Avoid using 'this' in templates.`\n          );\n          return Reflect.get(target, key, receiver);\n        }\n      }) : proxyToUse;\n      result = normalizeVNode(\n        render.call(\n          thisProxy,\n          proxyToUse,\n          renderCache,\n          props,\n          setupState,\n          data,\n          ctx\n        )\n      );\n      fallthroughAttrs = attrs;\n    } else {\n      const render2 = Component;\n      if (attrs === props) {\n        markAttrsAccessed();\n      }\n      result = normalizeVNode(\n        render2.length > 1 ? render2(\n          props,\n          true ? {\n            get attrs() {\n              markAttrsAccessed();\n              return attrs;\n            },\n            slots,\n            emit\n          } : { attrs, slots, emit }\n        ) : render2(\n          props,\n          null\n          /* we know it doesn't need it */\n        )\n      );\n      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);\n    }\n  } catch (err) {\n    blockStack.length = 0;\n    handleError(err, instance, 1);\n    result = createVNode(Comment);\n  }\n  let root = result;\n  let setRoot = void 0;\n  if (result.patchFlag > 0 && result.patchFlag & 2048) {\n    [root, setRoot] = getChildRoot(result);\n  }\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs);\n    const { shapeFlag } = root;\n    if (keys.length) {\n      if (shapeFlag & (1 | 6)) {\n        if (propsOptions && keys.some(shared.isModelListener)) {\n          fallthroughAttrs = filterModelListeners(\n            fallthroughAttrs,\n            propsOptions\n          );\n        }\n        root = cloneVNode(root, fallthroughAttrs);\n      } else if (!accessedAttrs && root.type !== Comment) {\n        const allAttrs = Object.keys(attrs);\n        const eventAttrs = [];\n        const extraAttrs = [];\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\n          const key = allAttrs[i];\n          if (shared.isOn(key)) {\n            if (!shared.isModelListener(key)) {\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3));\n            }\n          } else {\n            extraAttrs.push(key);\n          }\n        }\n        if (extraAttrs.length) {\n          warn(\n            `Extraneous non-props attributes (${extraAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.`\n          );\n        }\n        if (eventAttrs.length) {\n          warn(\n            `Extraneous non-emits event listeners (${eventAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the \"emits\" option.`\n          );\n        }\n      }\n    }\n  }\n  if (vnode.dirs) {\n    if (!isElementRoot(root)) {\n      warn(\n        `Runtime directive used on component with non-element root node. The directives will not function as intended.`\n      );\n    }\n    root = cloneVNode(root);\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n  }\n  if (vnode.transition) {\n    if (!isElementRoot(root)) {\n      warn(\n        `Component inside <Transition> renders non-element root node that cannot be animated.`\n      );\n    }\n    root.transition = vnode.transition;\n  }\n  if (setRoot) {\n    setRoot(root);\n  } else {\n    result = root;\n  }\n  setCurrentRenderingInstance(prev);\n  return result;\n}\nconst getChildRoot = (vnode) => {\n  const rawChildren = vnode.children;\n  const dynamicChildren = vnode.dynamicChildren;\n  const childRoot = filterSingleRoot(rawChildren);\n  if (!childRoot) {\n    return [vnode, void 0];\n  }\n  const index = rawChildren.indexOf(childRoot);\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\n  const setRoot = (updatedRoot) => {\n    rawChildren[index] = updatedRoot;\n    if (dynamicChildren) {\n      if (dynamicIndex > -1) {\n        dynamicChildren[dynamicIndex] = updatedRoot;\n      } else if (updatedRoot.patchFlag > 0) {\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\n      }\n    }\n  };\n  return [normalizeVNode(childRoot), setRoot];\n};\nfunction filterSingleRoot(children) {\n  let singleRoot;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (isVNode(child)) {\n      if (child.type !== Comment || child.children === \"v-if\") {\n        if (singleRoot) {\n          return;\n        } else {\n          singleRoot = child;\n        }\n      }\n    } else {\n      return;\n    }\n  }\n  return singleRoot;\n}\nconst getFunctionalFallthrough = (attrs) => {\n  let res;\n  for (const key in attrs) {\n    if (key === \"class\" || key === \"style\" || shared.isOn(key)) {\n      (res || (res = {}))[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst filterModelListeners = (attrs, props) => {\n  const res = {};\n  for (const key in attrs) {\n    if (!shared.isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst isElementRoot = (vnode) => {\n  return vnode.shapeFlag & (6 | 1) || vnode.type === Comment;\n};\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n  const { props: prevProps, children: prevChildren, component } = prevVNode;\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\n  const emits = component.emitsOptions;\n  if ((prevChildren || nextChildren) && isHmrUpdating) {\n    return true;\n  }\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true;\n  }\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & 1024) {\n      return true;\n    }\n    if (patchFlag & 16) {\n      if (!prevProps) {\n        return !!nextProps;\n      }\n      return hasPropsChanged(prevProps, nextProps, emits);\n    } else if (patchFlag & 8) {\n      const dynamicProps = nextVNode.dynamicProps;\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i];\n        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {\n          return true;\n        }\n      }\n    }\n  } else {\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !nextChildren.$stable) {\n        return true;\n      }\n    }\n    if (prevProps === nextProps) {\n      return false;\n    }\n    if (!prevProps) {\n      return !!nextProps;\n    }\n    if (!nextProps) {\n      return true;\n    }\n    return hasPropsChanged(prevProps, nextProps, emits);\n  }\n  return false;\n}\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n  const nextKeys = Object.keys(nextProps);\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true;\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i];\n    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction updateHOCHostEl({ vnode, parent }, el) {\n  while (parent && parent.subTree === vnode) {\n    (vnode = parent.vnode).el = el;\n    parent = parent.parent;\n  }\n}\n\nconst COMPONENTS = \"components\";\nconst DIRECTIVES = \"directives\";\nfunction resolveComponent(name, maybeSelfReference) {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\nconst NULL_DYNAMIC_COMPONENT = Symbol.for(\"v-ndc\");\nfunction resolveDynamicComponent(component) {\n  if (shared.isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component;\n  } else {\n    return component || NULL_DYNAMIC_COMPONENT;\n  }\n}\nfunction resolveDirective(name) {\n  return resolveAsset(DIRECTIVES, name);\n}\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n  const instance = currentRenderingInstance || currentInstance;\n  if (instance) {\n    const Component = instance.type;\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(\n        Component,\n        false\n        /* do not include inferred name to avoid breaking existing code */\n      );\n      if (selfName && (selfName === name || selfName === shared.camelize(name) || selfName === shared.capitalize(shared.camelize(name)))) {\n        return Component;\n      }\n    }\n    const res = (\n      // local registration\n      // check instance[type] first which is resolved for options API\n      resolve(instance[type] || Component[type], name) || // global registration\n      resolve(instance.appContext[type], name)\n    );\n    if (!res && maybeSelfReference) {\n      return Component;\n    }\n    if (warnMissing && !res) {\n      const extra = type === COMPONENTS ? `\nIf this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.` : ``;\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\n    }\n    return res;\n  } else {\n    warn(\n      `resolve${shared.capitalize(type.slice(0, -1))} can only be used in render() or setup().`\n    );\n  }\n}\nfunction resolve(registry, name) {\n  return registry && (registry[name] || registry[shared.camelize(name)] || registry[shared.capitalize(shared.camelize(name))]);\n}\n\nconst isSuspense = (type) => type.__isSuspense;\nconst SuspenseImpl = {\n  name: \"Suspense\",\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n    if (n1 == null) {\n      mountSuspense(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    } else {\n      patchSuspense(\n        n1,\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    }\n  },\n  hydrate: hydrateSuspense,\n  create: createSuspenseBoundary,\n  normalize: normalizeSuspenseChildren\n};\nconst Suspense = SuspenseImpl ;\nfunction triggerEvent(vnode, name) {\n  const eventListener = vnode.props && vnode.props[name];\n  if (shared.isFunction(eventListener)) {\n    eventListener();\n  }\n}\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n  const {\n    p: patch,\n    o: { createElement }\n  } = rendererInternals;\n  const hiddenContainer = createElement(\"div\");\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    container,\n    hiddenContainer,\n    anchor,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    rendererInternals\n  );\n  patch(\n    null,\n    suspense.pendingBranch = vnode.ssContent,\n    hiddenContainer,\n    null,\n    parentComponent,\n    suspense,\n    isSVG,\n    slotScopeIds\n  );\n  if (suspense.deps > 0) {\n    triggerEvent(vnode, \"onPending\");\n    triggerEvent(vnode, \"onFallback\");\n    patch(\n      null,\n      vnode.ssFallback,\n      container,\n      anchor,\n      parentComponent,\n      null,\n      // fallback tree will not have suspense context\n      isSVG,\n      slotScopeIds\n    );\n    setActiveBranch(suspense, vnode.ssFallback);\n  } else {\n    suspense.resolve(false, true);\n  }\n}\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\n  const suspense = n2.suspense = n1.suspense;\n  suspense.vnode = n2;\n  n2.el = n1.el;\n  const newBranch = n2.ssContent;\n  const newFallback = n2.ssFallback;\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch;\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      patch(\n        pendingBranch,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else if (isInFallback) {\n        patch(\n          activeBranch,\n          newFallback,\n          container,\n          anchor,\n          parentComponent,\n          null,\n          // fallback tree will not have suspense context\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, newFallback);\n      }\n    } else {\n      suspense.pendingId++;\n      if (isHydrating) {\n        suspense.isHydrating = false;\n        suspense.activeBranch = pendingBranch;\n      } else {\n        unmount(pendingBranch, parentComponent, suspense);\n      }\n      suspense.deps = 0;\n      suspense.effects.length = 0;\n      suspense.hiddenContainer = createElement(\"div\");\n      if (isInFallback) {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        } else {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null,\n            // fallback tree will not have suspense context\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          setActiveBranch(suspense, newFallback);\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        patch(\n          activeBranch,\n          newBranch,\n          container,\n          anchor,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        suspense.resolve(true);\n      } else {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      patch(\n        activeBranch,\n        newBranch,\n        container,\n        anchor,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      setActiveBranch(suspense, newBranch);\n    } else {\n      triggerEvent(n2, \"onPending\");\n      suspense.pendingBranch = newBranch;\n      suspense.pendingId++;\n      patch(\n        null,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else {\n        const { timeout, pendingId } = suspense;\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback);\n            }\n          }, timeout);\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback);\n        }\n      }\n    }\n  }\n}\nlet hasWarned = false;\nfunction createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n  if (!hasWarned) {\n    hasWarned = true;\n    console[console.info ? \"info\" : \"log\"](\n      `<Suspense> is an experimental feature and its API will likely change.`\n    );\n  }\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: { parentNode, remove }\n  } = rendererInternals;\n  let parentSuspenseId;\n  const isSuspensible = isVNodeSuspensible(vnode);\n  if (isSuspensible) {\n    if (parentSuspense == null ? void 0 : parentSuspense.pendingBranch) {\n      parentSuspenseId = parentSuspense.pendingId;\n      parentSuspense.deps++;\n    }\n  }\n  const timeout = vnode.props ? shared.toNumber(vnode.props.timeout) : void 0;\n  {\n    assertNumber(timeout, `Suspense timeout`);\n  }\n  const suspense = {\n    vnode,\n    parent: parentSuspense,\n    parentComponent,\n    isSVG,\n    container,\n    hiddenContainer,\n    anchor,\n    deps: 0,\n    pendingId: 0,\n    timeout: typeof timeout === \"number\" ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: true,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n    resolve(resume = false, sync = false) {\n      {\n        if (!resume && !suspense.pendingBranch) {\n          throw new Error(\n            `suspense.resolve() is called without a pending branch.`\n          );\n        }\n        if (suspense.isUnmounted) {\n          throw new Error(\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\n          );\n        }\n      }\n      const {\n        vnode: vnode2,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent: parentComponent2,\n        container: container2\n      } = suspense;\n      let delayEnter = false;\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false;\n      } else if (!resume) {\n        delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === \"out-in\";\n        if (delayEnter) {\n          activeBranch.transition.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(pendingBranch, container2, anchor2, 0);\n              queuePostFlushCb(effects);\n            }\n          };\n        }\n        let { anchor: anchor2 } = suspense;\n        if (activeBranch) {\n          anchor2 = next(activeBranch);\n          unmount(activeBranch, parentComponent2, suspense, true);\n        }\n        if (!delayEnter) {\n          move(pendingBranch, container2, anchor2, 0);\n        }\n      }\n      setActiveBranch(suspense, pendingBranch);\n      suspense.pendingBranch = null;\n      suspense.isInFallback = false;\n      let parent = suspense.parent;\n      let hasUnresolvedAncestor = false;\n      while (parent) {\n        if (parent.pendingBranch) {\n          parent.effects.push(...effects);\n          hasUnresolvedAncestor = true;\n          break;\n        }\n        parent = parent.parent;\n      }\n      if (!hasUnresolvedAncestor && !delayEnter) {\n        queuePostFlushCb(effects);\n      }\n      suspense.effects = [];\n      if (isSuspensible) {\n        if (parentSuspense && parentSuspense.pendingBranch && parentSuspenseId === parentSuspense.pendingId) {\n          parentSuspense.deps--;\n          if (parentSuspense.deps === 0 && !sync) {\n            parentSuspense.resolve();\n          }\n        }\n      }\n      triggerEvent(vnode2, \"onResolve\");\n    },\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return;\n      }\n      const { vnode: vnode2, activeBranch, parentComponent: parentComponent2, container: container2, isSVG: isSVG2 } = suspense;\n      triggerEvent(vnode2, \"onFallback\");\n      const anchor2 = next(activeBranch);\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return;\n        }\n        patch(\n          null,\n          fallbackVNode,\n          container2,\n          anchor2,\n          parentComponent2,\n          null,\n          // fallback tree will not have suspense context\n          isSVG2,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, fallbackVNode);\n      };\n      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === \"out-in\";\n      if (delayEnter) {\n        activeBranch.transition.afterLeave = mountFallback;\n      }\n      suspense.isInFallback = true;\n      unmount(\n        activeBranch,\n        parentComponent2,\n        null,\n        // no suspense so unmount hooks fire now\n        true\n        // shouldRemove\n      );\n      if (!delayEnter) {\n        mountFallback();\n      }\n    },\n    move(container2, anchor2, type) {\n      suspense.activeBranch && move(suspense.activeBranch, container2, anchor2, type);\n      suspense.container = container2;\n    },\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch);\n    },\n    registerDep(instance, setupRenderEffect) {\n      const isInPendingSuspense = !!suspense.pendingBranch;\n      if (isInPendingSuspense) {\n        suspense.deps++;\n      }\n      const hydratedEl = instance.vnode.el;\n      instance.asyncDep.catch((err) => {\n        handleError(err, instance, 0);\n      }).then((asyncSetupResult) => {\n        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {\n          return;\n        }\n        instance.asyncResolved = true;\n        const { vnode: vnode2 } = instance;\n        {\n          pushWarningContext(vnode2);\n        }\n        handleSetupResult(instance, asyncSetupResult, false);\n        if (hydratedEl) {\n          vnode2.el = hydratedEl;\n        }\n        const placeholder = !hydratedEl && instance.subTree.el;\n        setupRenderEffect(\n          instance,\n          vnode2,\n          // component may have been moved before resolve.\n          // if this is not a hydration, instance.subTree will be the comment\n          // placeholder.\n          parentNode(hydratedEl || instance.subTree.el),\n          // anchor will not be used if this is hydration, so only need to\n          // consider the comment placeholder case.\n          hydratedEl ? null : next(instance.subTree),\n          suspense,\n          isSVG,\n          optimized\n        );\n        if (placeholder) {\n          remove(placeholder);\n        }\n        updateHOCHostEl(instance, vnode2.el);\n        {\n          popWarningContext();\n        }\n        if (isInPendingSuspense && --suspense.deps === 0) {\n          suspense.resolve();\n        }\n      });\n    },\n    unmount(parentSuspense2, doRemove) {\n      suspense.isUnmounted = true;\n      if (suspense.activeBranch) {\n        unmount(\n          suspense.activeBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n      if (suspense.pendingBranch) {\n        unmount(\n          suspense.pendingBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n    }\n  };\n  return suspense;\n}\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    node.parentNode,\n    document.createElement(\"div\"),\n    null,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    rendererInternals,\n    true\n    /* hydrating */\n  );\n  const result = hydrateNode(\n    node,\n    suspense.pendingBranch = vnode.ssContent,\n    parentComponent,\n    suspense,\n    slotScopeIds,\n    optimized\n  );\n  if (suspense.deps === 0) {\n    suspense.resolve(false, true);\n  }\n  return result;\n}\nfunction normalizeSuspenseChildren(vnode) {\n  const { shapeFlag, children } = vnode;\n  const isSlotChildren = shapeFlag & 32;\n  vnode.ssContent = normalizeSuspenseSlot(\n    isSlotChildren ? children.default : children\n  );\n  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);\n}\nfunction normalizeSuspenseSlot(s) {\n  let block;\n  if (shared.isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c;\n    if (trackBlock) {\n      s._d = false;\n      openBlock();\n    }\n    s = s();\n    if (trackBlock) {\n      s._d = true;\n      block = currentBlock;\n      closeBlock();\n    }\n  }\n  if (shared.isArray(s)) {\n    const singleChild = filterSingleRoot(s);\n    if (!singleChild && s.filter((child) => child !== NULL_DYNAMIC_COMPONENT).length > 0) {\n      warn(`<Suspense> slots expect a single root node.`);\n    }\n    s = singleChild;\n  }\n  s = normalizeVNode(s);\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter((c) => c !== s);\n  }\n  return s;\n}\nfunction queueEffectWithSuspense(fn, suspense) {\n  if (suspense && suspense.pendingBranch) {\n    if (shared.isArray(fn)) {\n      suspense.effects.push(...fn);\n    } else {\n      suspense.effects.push(fn);\n    }\n  } else {\n    queuePostFlushCb(fn);\n  }\n}\nfunction setActiveBranch(suspense, branch) {\n  suspense.activeBranch = branch;\n  const { vnode, parentComponent } = suspense;\n  const el = vnode.el = branch.el;\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el;\n    updateHOCHostEl(parentComponent, el);\n  }\n}\nfunction isVNodeSuspensible(vnode) {\n  var _a;\n  return ((_a = vnode.props) == null ? void 0 : _a.suspensible) != null && vnode.props.suspensible !== false;\n}\n\nfunction watchEffect(effect, options) {\n  return doWatch(effect, null, options);\n}\nfunction watchPostEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    shared.extend({}, options, { flush: \"post\" }) \n  );\n}\nfunction watchSyncEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    shared.extend({}, options, { flush: \"sync\" }) \n  );\n}\nconst INITIAL_WATCHER_VALUE = {};\nfunction watch(source, cb, options) {\n  if (!shared.isFunction(cb)) {\n    warn(\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only supports \\`watch(source, cb, options?) signature.`\n    );\n  }\n  return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = shared.EMPTY_OBJ) {\n  var _a;\n  if (!cb) {\n    if (immediate !== void 0) {\n      warn(\n        `watch() \"immediate\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n    if (deep !== void 0) {\n      warn(\n        `watch() \"deep\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n  }\n  const warnInvalidSource = (s) => {\n    warn(\n      `Invalid watch source: `,\n      s,\n      `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`\n    );\n  };\n  const instance = reactivity.getCurrentScope() === ((_a = currentInstance) == null ? void 0 : _a.scope) ? currentInstance : null;\n  let getter;\n  let forceTrigger = false;\n  let isMultiSource = false;\n  if (reactivity.isRef(source)) {\n    getter = () => source.value;\n    forceTrigger = reactivity.isShallow(source);\n  } else if (reactivity.isReactive(source)) {\n    getter = () => source;\n    deep = true;\n  } else if (shared.isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some((s) => reactivity.isReactive(s) || reactivity.isShallow(s));\n    getter = () => source.map((s) => {\n      if (reactivity.isRef(s)) {\n        return s.value;\n      } else if (reactivity.isReactive(s)) {\n        return traverse(s);\n      } else if (shared.isFunction(s)) {\n        return callWithErrorHandling(s, instance, 2);\n      } else {\n        warnInvalidSource(s);\n      }\n    });\n  } else if (shared.isFunction(source)) {\n    if (cb) {\n      getter = () => callWithErrorHandling(source, instance, 2);\n    } else {\n      getter = () => {\n        if (instance && instance.isUnmounted) {\n          return;\n        }\n        if (cleanup) {\n          cleanup();\n        }\n        return callWithAsyncErrorHandling(\n          source,\n          instance,\n          3,\n          [onCleanup]\n        );\n      };\n    }\n  } else {\n    getter = shared.NOOP;\n    warnInvalidSource(source);\n  }\n  if (cb && deep) {\n    const baseGetter = getter;\n    getter = () => traverse(baseGetter());\n  }\n  let cleanup;\n  let onCleanup = (fn) => {\n    cleanup = effect.onStop = () => {\n      callWithErrorHandling(fn, instance, 4);\n      cleanup = effect.onStop = void 0;\n    };\n  };\n  let ssrCleanup;\n  if (isInSSRComponentSetup) {\n    onCleanup = shared.NOOP;\n    if (!cb) {\n      getter();\n    } else if (immediate) {\n      callWithAsyncErrorHandling(cb, instance, 3, [\n        getter(),\n        isMultiSource ? [] : void 0,\n        onCleanup\n      ]);\n    }\n    if (flush === \"sync\") {\n      const ctx = useSSRContext();\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);\n    } else {\n      return shared.NOOP;\n    }\n  }\n  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;\n  const job = () => {\n    if (!effect.active) {\n      return;\n    }\n    if (cb) {\n      const newValue = effect.run();\n      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i) => shared.hasChanged(v, oldValue[i])) : shared.hasChanged(newValue, oldValue)) || false) {\n        if (cleanup) {\n          cleanup();\n        }\n        callWithAsyncErrorHandling(cb, instance, 3, [\n          newValue,\n          // pass undefined as the old value when it's changed for the first time\n          oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,\n          onCleanup\n        ]);\n        oldValue = newValue;\n      }\n    } else {\n      effect.run();\n    }\n  };\n  job.allowRecurse = !!cb;\n  let scheduler;\n  if (flush === \"sync\") {\n    scheduler = job;\n  } else if (flush === \"post\") {\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\n  } else {\n    job.pre = true;\n    if (instance)\n      job.id = instance.uid;\n    scheduler = () => queueJob(job);\n  }\n  const effect = new reactivity.ReactiveEffect(getter, scheduler);\n  {\n    effect.onTrack = onTrack;\n    effect.onTrigger = onTrigger;\n  }\n  if (cb) {\n    if (immediate) {\n      job();\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (flush === \"post\") {\n    queuePostRenderEffect(\n      effect.run.bind(effect),\n      instance && instance.suspense\n    );\n  } else {\n    effect.run();\n  }\n  const unwatch = () => {\n    effect.stop();\n    if (instance && instance.scope) {\n      shared.remove(instance.scope.effects, effect);\n    }\n  };\n  if (ssrCleanup)\n    ssrCleanup.push(unwatch);\n  return unwatch;\n}\nfunction instanceWatch(source, value, options) {\n  const publicThis = this.proxy;\n  const getter = shared.isString(source) ? source.includes(\".\") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);\n  let cb;\n  if (shared.isFunction(value)) {\n    cb = value;\n  } else {\n    cb = value.handler;\n    options = value;\n  }\n  const cur = currentInstance;\n  setCurrentInstance(this);\n  const res = doWatch(getter, cb.bind(publicThis), options);\n  if (cur) {\n    setCurrentInstance(cur);\n  } else {\n    unsetCurrentInstance();\n  }\n  return res;\n}\nfunction createPathGetter(ctx, path) {\n  const segments = path.split(\".\");\n  return () => {\n    let cur = ctx;\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]];\n    }\n    return cur;\n  };\n}\nfunction traverse(value, seen) {\n  if (!shared.isObject(value) || value[\"__v_skip\"]) {\n    return value;\n  }\n  seen = seen || /* @__PURE__ */ new Set();\n  if (seen.has(value)) {\n    return value;\n  }\n  seen.add(value);\n  if (reactivity.isRef(value)) {\n    traverse(value.value, seen);\n  } else if (shared.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], seen);\n    }\n  } else if (shared.isSet(value) || shared.isMap(value)) {\n    value.forEach((v) => {\n      traverse(v, seen);\n    });\n  } else if (shared.isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], seen);\n    }\n  }\n  return value;\n}\n\nfunction validateDirectiveName(name) {\n  if (shared.isBuiltInDirective(name)) {\n    warn(\"Do not use built-in directive ids as custom directive id: \" + name);\n  }\n}\nfunction withDirectives(vnode, directives) {\n  const internalInstance = currentRenderingInstance;\n  if (internalInstance === null) {\n    warn(`withDirectives can only be used inside render functions.`);\n    return vnode;\n  }\n  const instance = getExposeProxy(internalInstance) || internalInstance.proxy;\n  const bindings = vnode.dirs || (vnode.dirs = []);\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = shared.EMPTY_OBJ] = directives[i];\n    if (dir) {\n      if (shared.isFunction(dir)) {\n        dir = {\n          mounted: dir,\n          updated: dir\n        };\n      }\n      if (dir.deep) {\n        traverse(value);\n      }\n      bindings.push({\n        dir,\n        instance,\n        value,\n        oldValue: void 0,\n        arg,\n        modifiers\n      });\n    }\n  }\n  return vnode;\n}\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n  const bindings = vnode.dirs;\n  const oldBindings = prevVNode && prevVNode.dirs;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value;\n    }\n    let hook = binding.dir[name];\n    if (hook) {\n      reactivity.pauseTracking();\n      callWithAsyncErrorHandling(hook, instance, 8, [\n        vnode.el,\n        binding,\n        vnode,\n        prevVNode\n      ]);\n      reactivity.resetTracking();\n    }\n  }\n}\n\nconst leaveCbKey = Symbol(\"_leaveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nfunction useTransitionState() {\n  const state = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: /* @__PURE__ */ new Map()\n  };\n  onMounted(() => {\n    state.isMounted = true;\n  });\n  onBeforeUnmount(() => {\n    state.isUnmounting = true;\n  });\n  return state;\n}\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionPropsValidators = {\n  mode: String,\n  appear: Boolean,\n  persisted: Boolean,\n  // enter\n  onBeforeEnter: TransitionHookValidator,\n  onEnter: TransitionHookValidator,\n  onAfterEnter: TransitionHookValidator,\n  onEnterCancelled: TransitionHookValidator,\n  // leave\n  onBeforeLeave: TransitionHookValidator,\n  onLeave: TransitionHookValidator,\n  onAfterLeave: TransitionHookValidator,\n  onLeaveCancelled: TransitionHookValidator,\n  // appear\n  onBeforeAppear: TransitionHookValidator,\n  onAppear: TransitionHookValidator,\n  onAfterAppear: TransitionHookValidator,\n  onAppearCancelled: TransitionHookValidator\n};\nconst BaseTransitionImpl = {\n  name: `BaseTransition`,\n  props: BaseTransitionPropsValidators,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevTransitionKey;\n    return () => {\n      const children = slots.default && getTransitionRawChildren(slots.default(), true);\n      if (!children || !children.length) {\n        return;\n      }\n      let child = children[0];\n      if (children.length > 1) {\n        let hasFound = false;\n        for (const c of children) {\n          if (c.type !== Comment) {\n            if (hasFound) {\n              warn(\n                \"<transition> can only be used on a single element or component. Use <transition-group> for lists.\"\n              );\n              break;\n            }\n            child = c;\n            hasFound = true;\n          }\n        }\n      }\n      const rawProps = reactivity.toRaw(props);\n      const { mode } = rawProps;\n      if (mode && mode !== \"in-out\" && mode !== \"out-in\" && mode !== \"default\") {\n        warn(`invalid <transition> mode: ${mode}`);\n      }\n      if (state.isLeaving) {\n        return emptyPlaceholder(child);\n      }\n      const innerChild = getKeepAliveChild(child);\n      if (!innerChild) {\n        return emptyPlaceholder(child);\n      }\n      const enterHooks = resolveTransitionHooks(\n        innerChild,\n        rawProps,\n        state,\n        instance\n      );\n      setTransitionHooks(innerChild, enterHooks);\n      const oldChild = instance.subTree;\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\n      let transitionKeyChanged = false;\n      const { getTransitionKey } = innerChild.type;\n      if (getTransitionKey) {\n        const key = getTransitionKey();\n        if (prevTransitionKey === void 0) {\n          prevTransitionKey = key;\n        } else if (key !== prevTransitionKey) {\n          prevTransitionKey = key;\n          transitionKeyChanged = true;\n        }\n      }\n      if (oldInnerChild && oldInnerChild.type !== Comment && (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\n        const leavingHooks = resolveTransitionHooks(\n          oldInnerChild,\n          rawProps,\n          state,\n          instance\n        );\n        setTransitionHooks(oldInnerChild, leavingHooks);\n        if (mode === \"out-in\") {\n          state.isLeaving = true;\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false;\n            if (instance.update.active !== false) {\n              instance.update();\n            }\n          };\n          return emptyPlaceholder(child);\n        } else if (mode === \"in-out\" && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n            const leavingVNodesCache = getLeavingNodesForType(\n              state,\n              oldInnerChild\n            );\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\n            el[leaveCbKey] = () => {\n              earlyRemove();\n              el[leaveCbKey] = void 0;\n              delete enterHooks.delayedLeave;\n            };\n            enterHooks.delayedLeave = delayedLeave;\n          };\n        }\n      }\n      return child;\n    };\n  }\n};\nconst BaseTransition = BaseTransitionImpl;\nfunction getLeavingNodesForType(state, vnode) {\n  const { leavingVNodes } = state;\n  let leavingVNodesCache = leavingVNodes.get(vnode.type);\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = /* @__PURE__ */ Object.create(null);\n    leavingVNodes.set(vnode.type, leavingVNodesCache);\n  }\n  return leavingVNodesCache;\n}\nfunction resolveTransitionHooks(vnode, props, state, instance) {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props;\n  const key = String(vnode.key);\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n  const callHook = (hook, args) => {\n    hook && callWithAsyncErrorHandling(\n      hook,\n      instance,\n      9,\n      args\n    );\n  };\n  const callAsyncHook = (hook, args) => {\n    const done = args[1];\n    callHook(hook, args);\n    if (shared.isArray(hook)) {\n      if (hook.every((hook2) => hook2.length <= 1))\n        done();\n    } else if (hook.length <= 1) {\n      done();\n    }\n  };\n  const hooks = {\n    mode,\n    persisted,\n    beforeEnter(el) {\n      let hook = onBeforeEnter;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter;\n        } else {\n          return;\n        }\n      }\n      if (el[leaveCbKey]) {\n        el[leaveCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      const leavingVNode = leavingVNodesCache[key];\n      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el[leaveCbKey]) {\n        leavingVNode.el[leaveCbKey]();\n      }\n      callHook(hook, [el]);\n    },\n    enter(el) {\n      let hook = onEnter;\n      let afterHook = onAfterEnter;\n      let cancelHook = onEnterCancelled;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter;\n          afterHook = onAfterAppear || onAfterEnter;\n          cancelHook = onAppearCancelled || onEnterCancelled;\n        } else {\n          return;\n        }\n      }\n      let called = false;\n      const done = el[enterCbKey] = (cancelled) => {\n        if (called)\n          return;\n        called = true;\n        if (cancelled) {\n          callHook(cancelHook, [el]);\n        } else {\n          callHook(afterHook, [el]);\n        }\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave();\n        }\n        el[enterCbKey] = void 0;\n      };\n      if (hook) {\n        callAsyncHook(hook, [el, done]);\n      } else {\n        done();\n      }\n    },\n    leave(el, remove) {\n      const key2 = String(vnode.key);\n      if (el[enterCbKey]) {\n        el[enterCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      if (state.isUnmounting) {\n        return remove();\n      }\n      callHook(onBeforeLeave, [el]);\n      let called = false;\n      const done = el[leaveCbKey] = (cancelled) => {\n        if (called)\n          return;\n        called = true;\n        remove();\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el]);\n        } else {\n          callHook(onAfterLeave, [el]);\n        }\n        el[leaveCbKey] = void 0;\n        if (leavingVNodesCache[key2] === vnode) {\n          delete leavingVNodesCache[key2];\n        }\n      };\n      leavingVNodesCache[key2] = vnode;\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done]);\n      } else {\n        done();\n      }\n    },\n    clone(vnode2) {\n      return resolveTransitionHooks(vnode2, props, state, instance);\n    }\n  };\n  return hooks;\n}\nfunction emptyPlaceholder(vnode) {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode);\n    vnode.children = null;\n    return vnode;\n  }\n}\nfunction getKeepAliveChild(vnode) {\n  return isKeepAlive(vnode) ? (\n    // #7121 ensure get the child component subtree in case\n    // it's been replaced during HMR\n    vnode.component ? vnode.component.subTree : vnode.children ? vnode.children[0] : void 0\n  ) : vnode;\n}\nfunction setTransitionHooks(vnode, hooks) {\n  if (vnode.shapeFlag & 6 && vnode.component) {\n    setTransitionHooks(vnode.component.subTree, hooks);\n  } else if (vnode.shapeFlag & 128) {\n    vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n  } else {\n    vnode.transition = hooks;\n  }\n}\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n  let ret = [];\n  let keyedFragmentCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i);\n    if (child.type === Fragment) {\n      if (child.patchFlag & 128)\n        keyedFragmentCount++;\n      ret = ret.concat(\n        getTransitionRawChildren(child.children, keepComment, key)\n      );\n    } else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, { key }) : child);\n    }\n  }\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = -2;\n    }\n  }\n  return ret;\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineComponent(options, extraOptions) {\n  return shared.isFunction(options) ? (\n    // #8326: extend call and options.name access are considered side-effects\n    // by Rollup, so we have to wrap it in a pure-annotated IIFE.\n    /* @__PURE__ */ (() => shared.extend({ name: options.name }, extraOptions, { setup: options }))()\n  ) : options;\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineAsyncComponent(source) {\n  if (shared.isFunction(source)) {\n    source = { loader: source };\n  }\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    timeout,\n    // undefined = never times out\n    suspensible = true,\n    onError: userOnError\n  } = source;\n  let pendingRequest = null;\n  let resolvedComp;\n  let retries = 0;\n  const retry = () => {\n    retries++;\n    pendingRequest = null;\n    return load();\n  };\n  const load = () => {\n    let thisRequest;\n    return pendingRequest || (thisRequest = pendingRequest = loader().catch((err) => {\n      err = err instanceof Error ? err : new Error(String(err));\n      if (userOnError) {\n        return new Promise((resolve, reject) => {\n          const userRetry = () => resolve(retry());\n          const userFail = () => reject(err);\n          userOnError(err, userRetry, userFail, retries + 1);\n        });\n      } else {\n        throw err;\n      }\n    }).then((comp) => {\n      if (thisRequest !== pendingRequest && pendingRequest) {\n        return pendingRequest;\n      }\n      if (!comp) {\n        warn(\n          `Async component loader resolved to undefined. If you are using retry(), make sure to return its return value.`\n        );\n      }\n      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === \"Module\")) {\n        comp = comp.default;\n      }\n      if (comp && !shared.isObject(comp) && !shared.isFunction(comp)) {\n        throw new Error(`Invalid async component load result: ${comp}`);\n      }\n      resolvedComp = comp;\n      return comp;\n    }));\n  };\n  return defineComponent({\n    name: \"AsyncComponentWrapper\",\n    __asyncLoader: load,\n    get __asyncResolved() {\n      return resolvedComp;\n    },\n    setup() {\n      const instance = currentInstance;\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp, instance);\n      }\n      const onError = (err) => {\n        pendingRequest = null;\n        handleError(\n          err,\n          instance,\n          13,\n          !errorComponent\n          /* do not throw in dev if user provided error component */\n        );\n      };\n      if (suspensible && instance.suspense || isInSSRComponentSetup) {\n        return load().then((comp) => {\n          return () => createInnerComp(comp, instance);\n        }).catch((err) => {\n          onError(err);\n          return () => errorComponent ? createVNode(errorComponent, {\n            error: err\n          }) : null;\n        });\n      }\n      const loaded = reactivity.ref(false);\n      const error = reactivity.ref();\n      const delayed = reactivity.ref(!!delay);\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false;\n        }, delay);\n      }\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(\n              `Async component timed out after ${timeout}ms.`\n            );\n            onError(err);\n            error.value = err;\n          }\n        }, timeout);\n      }\n      load().then(() => {\n        loaded.value = true;\n        if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n          queueJob(instance.parent.update);\n        }\n      }).catch((err) => {\n        onError(err);\n        error.value = err;\n      });\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance);\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value\n          });\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent);\n        }\n      };\n    }\n  });\n}\nfunction createInnerComp(comp, parent) {\n  const { ref: ref2, props, children, ce } = parent.vnode;\n  const vnode = createVNode(comp, props, children);\n  vnode.ref = ref2;\n  vnode.ce = ce;\n  delete parent.vnode.ce;\n  return vnode;\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\nconst KeepAliveImpl = {\n  name: `KeepAlive`,\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number]\n  },\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const sharedContext = instance.ctx;\n    if (!sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default();\n        return children && children.length === 1 ? children[0] : children;\n      };\n    }\n    const cache = /* @__PURE__ */ new Map();\n    const keys = /* @__PURE__ */ new Set();\n    let current = null;\n    {\n      instance.__v_cache = cache;\n    }\n    const parentSuspense = instance.suspense;\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: { createElement }\n      }\n    } = sharedContext;\n    const storageContainer = createElement(\"div\");\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\n      const instance2 = vnode.component;\n      move(vnode, container, anchor, 0, parentSuspense);\n      patch(\n        instance2.vnode,\n        vnode,\n        container,\n        anchor,\n        instance2,\n        parentSuspense,\n        isSVG,\n        vnode.slotScopeIds,\n        optimized\n      );\n      queuePostRenderEffect(() => {\n        instance2.isDeactivated = false;\n        if (instance2.a) {\n          shared.invokeArrayFns(instance2.a);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n      }, parentSuspense);\n      {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    sharedContext.deactivate = (vnode) => {\n      const instance2 = vnode.component;\n      move(vnode, storageContainer, null, 1, parentSuspense);\n      queuePostRenderEffect(() => {\n        if (instance2.da) {\n          shared.invokeArrayFns(instance2.da);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n        instance2.isDeactivated = true;\n      }, parentSuspense);\n      {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    function unmount(vnode) {\n      resetShapeFlag(vnode);\n      _unmount(vnode, instance, parentSuspense, true);\n    }\n    function pruneCache(filter) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type);\n        if (name && (!filter || !filter(name))) {\n          pruneCacheEntry(key);\n        }\n      });\n    }\n    function pruneCacheEntry(key) {\n      const cached = cache.get(key);\n      if (!current || !isSameVNodeType(cached, current)) {\n        unmount(cached);\n      } else if (current) {\n        resetShapeFlag(current);\n      }\n      cache.delete(key);\n      keys.delete(key);\n    }\n    watch(\n      () => [props.include, props.exclude],\n      ([include, exclude]) => {\n        include && pruneCache((name) => matches(include, name));\n        exclude && pruneCache((name) => !matches(exclude, name));\n      },\n      // prune post-render after `current` has been updated\n      { flush: \"post\", deep: true }\n    );\n    let pendingCacheKey = null;\n    const cacheSubtree = () => {\n      if (pendingCacheKey != null) {\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n      }\n    };\n    onMounted(cacheSubtree);\n    onUpdated(cacheSubtree);\n    onBeforeUnmount(() => {\n      cache.forEach((cached) => {\n        const { subTree, suspense } = instance;\n        const vnode = getInnerChild(subTree);\n        if (cached.type === vnode.type && cached.key === vnode.key) {\n          resetShapeFlag(vnode);\n          const da = vnode.component.da;\n          da && queuePostRenderEffect(da, suspense);\n          return;\n        }\n        unmount(cached);\n      });\n    });\n    return () => {\n      pendingCacheKey = null;\n      if (!slots.default) {\n        return null;\n      }\n      const children = slots.default();\n      const rawVNode = children[0];\n      if (children.length > 1) {\n        {\n          warn(`KeepAlive should contain exactly one component child.`);\n        }\n        current = null;\n        return children;\n      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4) && !(rawVNode.shapeFlag & 128)) {\n        current = null;\n        return rawVNode;\n      }\n      let vnode = getInnerChild(rawVNode);\n      const comp = vnode.type;\n      const name = getComponentName(\n        isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp\n      );\n      const { include, exclude, max } = props;\n      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {\n        current = vnode;\n        return rawVNode;\n      }\n      const key = vnode.key == null ? comp : vnode.key;\n      const cachedVNode = cache.get(key);\n      if (vnode.el) {\n        vnode = cloneVNode(vnode);\n        if (rawVNode.shapeFlag & 128) {\n          rawVNode.ssContent = vnode;\n        }\n      }\n      pendingCacheKey = key;\n      if (cachedVNode) {\n        vnode.el = cachedVNode.el;\n        vnode.component = cachedVNode.component;\n        if (vnode.transition) {\n          setTransitionHooks(vnode, vnode.transition);\n        }\n        vnode.shapeFlag |= 512;\n        keys.delete(key);\n        keys.add(key);\n      } else {\n        keys.add(key);\n        if (max && keys.size > parseInt(max, 10)) {\n          pruneCacheEntry(keys.values().next().value);\n        }\n      }\n      vnode.shapeFlag |= 256;\n      current = vnode;\n      return isSuspense(rawVNode.type) ? rawVNode : vnode;\n    };\n  }\n};\nconst KeepAlive = KeepAliveImpl;\nfunction matches(pattern, name) {\n  if (shared.isArray(pattern)) {\n    return pattern.some((p) => matches(p, name));\n  } else if (shared.isString(pattern)) {\n    return pattern.split(\",\").includes(name);\n  } else if (shared.isRegExp(pattern)) {\n    return pattern.test(name);\n  }\n  return false;\n}\nfunction onActivated(hook, target) {\n  registerKeepAliveHook(hook, \"a\", target);\n}\nfunction onDeactivated(hook, target) {\n  registerKeepAliveHook(hook, \"da\", target);\n}\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n  const wrappedHook = hook.__wdc || (hook.__wdc = () => {\n    let current = target;\n    while (current) {\n      if (current.isDeactivated) {\n        return;\n      }\n      current = current.parent;\n    }\n    return hook();\n  });\n  injectHook(type, wrappedHook, target);\n  if (target) {\n    let current = target.parent;\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current);\n      }\n      current = current.parent;\n    }\n  }\n}\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n  const injected = injectHook(\n    type,\n    hook,\n    keepAliveRoot,\n    true\n    /* prepend */\n  );\n  onUnmounted(() => {\n    shared.remove(keepAliveRoot[type], injected);\n  }, target);\n}\nfunction resetShapeFlag(vnode) {\n  vnode.shapeFlag &= ~256;\n  vnode.shapeFlag &= ~512;\n}\nfunction getInnerChild(vnode) {\n  return vnode.shapeFlag & 128 ? vnode.ssContent : vnode;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n  if (target) {\n    const hooks = target[type] || (target[type] = []);\n    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {\n      if (target.isUnmounted) {\n        return;\n      }\n      reactivity.pauseTracking();\n      setCurrentInstance(target);\n      const res = callWithAsyncErrorHandling(hook, target, type, args);\n      unsetCurrentInstance();\n      reactivity.resetTracking();\n      return res;\n    });\n    if (prepend) {\n      hooks.unshift(wrappedHook);\n    } else {\n      hooks.push(wrappedHook);\n    }\n    return wrappedHook;\n  } else {\n    const apiName = shared.toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, \"\"));\n    warn(\n      `${apiName} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup().` + (` If you are using async setup(), make sure to register lifecycle hooks before the first await statement.` )\n    );\n  }\n}\nconst createHook = (lifecycle) => (hook, target = currentInstance) => (\n  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n  (!isInSSRComponentSetup || lifecycle === \"sp\") && injectHook(lifecycle, (...args) => hook(...args), target)\n);\nconst onBeforeMount = createHook(\"bm\");\nconst onMounted = createHook(\"m\");\nconst onBeforeUpdate = createHook(\"bu\");\nconst onUpdated = createHook(\"u\");\nconst onBeforeUnmount = createHook(\"bum\");\nconst onUnmounted = createHook(\"um\");\nconst onServerPrefetch = createHook(\"sp\");\nconst onRenderTriggered = createHook(\n  \"rtg\"\n);\nconst onRenderTracked = createHook(\n  \"rtc\"\n);\nfunction onErrorCaptured(hook, target = currentInstance) {\n  injectHook(\"ec\", hook, target);\n}\n\nfunction renderList(source, renderItem, cache, index) {\n  let ret;\n  const cached = cache && cache[index];\n  if (shared.isArray(source) || shared.isString(source)) {\n    ret = new Array(source.length);\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(source[i], i, void 0, cached && cached[i]);\n    }\n  } else if (typeof source === \"number\") {\n    if (!Number.isInteger(source)) {\n      warn(`The v-for range expect an integer value but got ${source}.`);\n    }\n    ret = new Array(source);\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, void 0, cached && cached[i]);\n    }\n  } else if (shared.isObject(source)) {\n    if (source[Symbol.iterator]) {\n      ret = Array.from(\n        source,\n        (item, i) => renderItem(item, i, void 0, cached && cached[i])\n      );\n    } else {\n      const keys = Object.keys(source);\n      ret = new Array(keys.length);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n      }\n    }\n  } else {\n    ret = [];\n  }\n  if (cache) {\n    cache[index] = ret;\n  }\n  return ret;\n}\n\nfunction createSlots(slots, dynamicSlots) {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i];\n    if (shared.isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn;\n      }\n    } else if (slot) {\n      slots[slot.name] = slot.key ? (...args) => {\n        const res = slot.fn(...args);\n        if (res)\n          res.key = slot.key;\n        return res;\n      } : slot.fn;\n    }\n  }\n  return slots;\n}\n\nfunction renderSlot(slots, name, props = {}, fallback, noSlotted) {\n  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE) {\n    if (name !== \"default\")\n      props.name = name;\n    return createVNode(\"slot\", props, fallback && fallback());\n  }\n  let slot = slots[name];\n  if (slot && slot.length > 1) {\n    warn(\n      `SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template.`\n    );\n    slot = () => [];\n  }\n  if (slot && slot._c) {\n    slot._d = false;\n  }\n  openBlock();\n  const validSlotContent = slot && ensureValidVNode(slot(props));\n  const rendered = createBlock(\n    Fragment,\n    {\n      key: props.key || // slot content array of a dynamic conditional slot may have a branch\n      // key attached in the `createSlots` helper, respect that\n      validSlotContent && validSlotContent.key || `_${name}`\n    },\n    validSlotContent || (fallback ? fallback() : []),\n    validSlotContent && slots._ === 1 ? 64 : -2\n  );\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + \"-s\"];\n  }\n  if (slot && slot._c) {\n    slot._d = true;\n  }\n  return rendered;\n}\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some((child) => {\n    if (!isVNode(child))\n      return true;\n    if (child.type === Comment)\n      return false;\n    if (child.type === Fragment && !ensureValidVNode(child.children))\n      return false;\n    return true;\n  }) ? vnodes : null;\n}\n\nfunction toHandlers(obj, preserveCaseIfNecessary) {\n  const ret = {};\n  if (!shared.isObject(obj)) {\n    warn(`v-on with no argument expects an object value.`);\n    return ret;\n  }\n  for (const key in obj) {\n    ret[preserveCaseIfNecessary && /[A-Z]/.test(key) ? `on:${key}` : shared.toHandlerKey(key)] = obj[key];\n  }\n  return ret;\n}\n\nconst getPublicInstance = (i) => {\n  if (!i)\n    return null;\n  if (isStatefulComponent(i))\n    return getExposeProxy(i) || i.proxy;\n  return getPublicInstance(i.parent);\n};\nconst publicPropertiesMap = (\n  // Move PURE marker to new line to workaround compiler discarding it\n  // due to type annotation\n  /* @__PURE__ */ shared.extend(/* @__PURE__ */ Object.create(null), {\n    $: (i) => i,\n    $el: (i) => i.vnode.el,\n    $data: (i) => i.data,\n    $props: (i) => reactivity.shallowReadonly(i.props) ,\n    $attrs: (i) => reactivity.shallowReadonly(i.attrs) ,\n    $slots: (i) => reactivity.shallowReadonly(i.slots) ,\n    $refs: (i) => reactivity.shallowReadonly(i.refs) ,\n    $parent: (i) => getPublicInstance(i.parent),\n    $root: (i) => getPublicInstance(i.root),\n    $emit: (i) => i.emit,\n    $options: (i) => resolveMergedOptions(i) ,\n    $forceUpdate: (i) => i.f || (i.f = () => queueJob(i.update)),\n    $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),\n    $watch: (i) => instanceWatch.bind(i) \n  })\n);\nconst isReservedPrefix = (key) => key === \"_\" || key === \"$\";\nconst hasSetupBinding = (state, key) => state !== shared.EMPTY_OBJ && !state.__isScriptSetup && shared.hasOwn(state, key);\nconst PublicInstanceProxyHandlers = {\n  get({ _: instance }, key) {\n    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\n    if (key === \"__isVue\") {\n      return true;\n    }\n    let normalizedProps;\n    if (key[0] !== \"$\") {\n      const n = accessCache[key];\n      if (n !== void 0) {\n        switch (n) {\n          case 1 /* SETUP */:\n            return setupState[key];\n          case 2 /* DATA */:\n            return data[key];\n          case 4 /* CONTEXT */:\n            return ctx[key];\n          case 3 /* PROPS */:\n            return props[key];\n        }\n      } else if (hasSetupBinding(setupState, key)) {\n        accessCache[key] = 1 /* SETUP */;\n        return setupState[key];\n      } else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\n        accessCache[key] = 2 /* DATA */;\n        return data[key];\n      } else if (\n        // only cache other properties when instance has declared (thus stable)\n        // props\n        (normalizedProps = instance.propsOptions[0]) && shared.hasOwn(normalizedProps, key)\n      ) {\n        accessCache[key] = 3 /* PROPS */;\n        return props[key];\n      } else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\n        accessCache[key] = 4 /* CONTEXT */;\n        return ctx[key];\n      } else if (shouldCacheAccess) {\n        accessCache[key] = 0 /* OTHER */;\n      }\n    }\n    const publicGetter = publicPropertiesMap[key];\n    let cssModule, globalProperties;\n    if (publicGetter) {\n      if (key === \"$attrs\") {\n        reactivity.track(instance, \"get\", key);\n        markAttrsAccessed();\n      } else if (key === \"$slots\") {\n        reactivity.track(instance, \"get\", key);\n      }\n      return publicGetter(instance);\n    } else if (\n      // css module (injected by vue-loader)\n      (cssModule = type.__cssModules) && (cssModule = cssModule[key])\n    ) {\n      return cssModule;\n    } else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\n      accessCache[key] = 4 /* CONTEXT */;\n      return ctx[key];\n    } else if (\n      // global properties\n      globalProperties = appContext.config.globalProperties, shared.hasOwn(globalProperties, key)\n    ) {\n      {\n        return globalProperties[key];\n      }\n    } else if (currentRenderingInstance && (!shared.isString(key) || // #1091 avoid internal isRef/isVNode checks on component instance leading\n    // to infinite warning loop\n    key.indexOf(\"__v\") !== 0)) {\n      if (data !== shared.EMPTY_OBJ && isReservedPrefix(key[0]) && shared.hasOwn(data, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key\n          )} must be accessed via $data because it starts with a reserved character (\"$\" or \"_\") and is not proxied on the render context.`\n        );\n      } else if (instance === currentRenderingInstance) {\n        warn(\n          `Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.`\n        );\n      }\n    }\n  },\n  set({ _: instance }, key, value) {\n    const { data, setupState, ctx } = instance;\n    if (hasSetupBinding(setupState, key)) {\n      setupState[key] = value;\n      return true;\n    } else if (setupState.__isScriptSetup && shared.hasOwn(setupState, key)) {\n      warn(`Cannot mutate <script setup> binding \"${key}\" from Options API.`);\n      return false;\n    } else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\n      data[key] = value;\n      return true;\n    } else if (shared.hasOwn(instance.props, key)) {\n      warn(`Attempting to mutate prop \"${key}\". Props are readonly.`);\n      return false;\n    }\n    if (key[0] === \"$\" && key.slice(1) in instance) {\n      warn(\n        `Attempting to mutate public property \"${key}\". Properties starting with $ are reserved and readonly.`\n      );\n      return false;\n    } else {\n      if (key in instance.appContext.config.globalProperties) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          value\n        });\n      } else {\n        ctx[key] = value;\n      }\n    }\n    return true;\n  },\n  has({\n    _: { data, setupState, accessCache, ctx, appContext, propsOptions }\n  }, key) {\n    let normalizedProps;\n    return !!accessCache[key] || data !== shared.EMPTY_OBJ && shared.hasOwn(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && shared.hasOwn(normalizedProps, key) || shared.hasOwn(ctx, key) || shared.hasOwn(publicPropertiesMap, key) || shared.hasOwn(appContext.config.globalProperties, key);\n  },\n  defineProperty(target, key, descriptor) {\n    if (descriptor.get != null) {\n      target._.accessCache[key] = 0;\n    } else if (shared.hasOwn(descriptor, \"value\")) {\n      this.set(target, key, descriptor.value, null);\n    }\n    return Reflect.defineProperty(target, key, descriptor);\n  }\n};\n{\n  PublicInstanceProxyHandlers.ownKeys = (target) => {\n    warn(\n      `Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead.`\n    );\n    return Reflect.ownKeys(target);\n  };\n}\nconst RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ shared.extend(\n  {},\n  PublicInstanceProxyHandlers,\n  {\n    get(target, key) {\n      if (key === Symbol.unscopables) {\n        return;\n      }\n      return PublicInstanceProxyHandlers.get(target, key, target);\n    },\n    has(_, key) {\n      const has = key[0] !== \"_\" && !shared.isGloballyAllowed(key);\n      if (!has && PublicInstanceProxyHandlers.has(_, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key\n          )} should not start with _ which is a reserved prefix for Vue internals.`\n        );\n      }\n      return has;\n    }\n  }\n);\nfunction createDevRenderContext(instance) {\n  const target = {};\n  Object.defineProperty(target, `_`, {\n    configurable: true,\n    enumerable: false,\n    get: () => instance\n  });\n  Object.keys(publicPropertiesMap).forEach((key) => {\n    Object.defineProperty(target, key, {\n      configurable: true,\n      enumerable: false,\n      get: () => publicPropertiesMap[key](instance),\n      // intercepted by the proxy so no need for implementation,\n      // but needed to prevent set errors\n      set: shared.NOOP\n    });\n  });\n  return target;\n}\nfunction exposePropsOnRenderContext(instance) {\n  const {\n    ctx,\n    propsOptions: [propsOptions]\n  } = instance;\n  if (propsOptions) {\n    Object.keys(propsOptions).forEach((key) => {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => instance.props[key],\n        set: shared.NOOP\n      });\n    });\n  }\n}\nfunction exposeSetupStateOnRenderContext(instance) {\n  const { ctx, setupState } = instance;\n  Object.keys(reactivity.toRaw(setupState)).forEach((key) => {\n    if (!setupState.__isScriptSetup) {\n      if (isReservedPrefix(key[0])) {\n        warn(\n          `setup() return property ${JSON.stringify(\n            key\n          )} should not start with \"$\" or \"_\" which are reserved prefixes for Vue internals.`\n        );\n        return;\n      }\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => setupState[key],\n        set: shared.NOOP\n      });\n    }\n  });\n}\n\nconst warnRuntimeUsage = (method) => warn(\n  `${method}() is a compiler-hint helper that is only usable inside <script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.`\n);\nfunction defineProps() {\n  {\n    warnRuntimeUsage(`defineProps`);\n  }\n  return null;\n}\nfunction defineEmits() {\n  {\n    warnRuntimeUsage(`defineEmits`);\n  }\n  return null;\n}\nfunction defineExpose(exposed) {\n  {\n    warnRuntimeUsage(`defineExpose`);\n  }\n}\nfunction defineOptions(options) {\n  {\n    warnRuntimeUsage(`defineOptions`);\n  }\n}\nfunction defineSlots() {\n  {\n    warnRuntimeUsage(`defineSlots`);\n  }\n  return null;\n}\nfunction defineModel() {\n  {\n    warnRuntimeUsage(\"defineModel\");\n  }\n}\nfunction withDefaults(props, defaults) {\n  {\n    warnRuntimeUsage(`withDefaults`);\n  }\n  return null;\n}\nfunction useSlots() {\n  return getContext().slots;\n}\nfunction useAttrs() {\n  return getContext().attrs;\n}\nfunction useModel(props, name, options) {\n  const i = getCurrentInstance();\n  if (!i) {\n    warn(`useModel() called without active instance.`);\n    return reactivity.ref();\n  }\n  if (!i.propsOptions[0][name]) {\n    warn(`useModel() called with prop \"${name}\" which is not declared.`);\n    return reactivity.ref();\n  }\n  if (options && options.local) {\n    const proxy = reactivity.ref(props[name]);\n    watch(\n      () => props[name],\n      (v) => proxy.value = v\n    );\n    watch(proxy, (value) => {\n      if (value !== props[name]) {\n        i.emit(`update:${name}`, value);\n      }\n    });\n    return proxy;\n  } else {\n    return {\n      __v_isRef: true,\n      get value() {\n        return props[name];\n      },\n      set value(value) {\n        i.emit(`update:${name}`, value);\n      }\n    };\n  }\n}\nfunction getContext() {\n  const i = getCurrentInstance();\n  if (!i) {\n    warn(`useContext() called without active instance.`);\n  }\n  return i.setupContext || (i.setupContext = createSetupContext(i));\n}\nfunction normalizePropsOrEmits(props) {\n  return shared.isArray(props) ? props.reduce(\n    (normalized, p) => (normalized[p] = null, normalized),\n    {}\n  ) : props;\n}\nfunction mergeDefaults(raw, defaults) {\n  const props = normalizePropsOrEmits(raw);\n  for (const key in defaults) {\n    if (key.startsWith(\"__skip\"))\n      continue;\n    let opt = props[key];\n    if (opt) {\n      if (shared.isArray(opt) || shared.isFunction(opt)) {\n        opt = props[key] = { type: opt, default: defaults[key] };\n      } else {\n        opt.default = defaults[key];\n      }\n    } else if (opt === null) {\n      opt = props[key] = { default: defaults[key] };\n    } else {\n      warn(`props default key \"${key}\" has no corresponding declaration.`);\n    }\n    if (opt && defaults[`__skip_${key}`]) {\n      opt.skipFactory = true;\n    }\n  }\n  return props;\n}\nfunction mergeModels(a, b) {\n  if (!a || !b)\n    return a || b;\n  if (shared.isArray(a) && shared.isArray(b))\n    return a.concat(b);\n  return shared.extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b));\n}\nfunction createPropsRestProxy(props, excludedKeys) {\n  const ret = {};\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key]\n      });\n    }\n  }\n  return ret;\n}\nfunction withAsyncContext(getAwaitable) {\n  const ctx = getCurrentInstance();\n  if (!ctx) {\n    warn(\n      `withAsyncContext called without active current instance. This is likely a bug.`\n    );\n  }\n  let awaitable = getAwaitable();\n  unsetCurrentInstance();\n  if (shared.isPromise(awaitable)) {\n    awaitable = awaitable.catch((e) => {\n      setCurrentInstance(ctx);\n      throw e;\n    });\n  }\n  return [awaitable, () => setCurrentInstance(ctx)];\n}\n\nfunction createDuplicateChecker() {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (type, key) => {\n    if (cache[key]) {\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\n    } else {\n      cache[key] = type;\n    }\n  };\n}\nlet shouldCacheAccess = true;\nfunction applyOptions(instance) {\n  const options = resolveMergedOptions(instance);\n  const publicThis = instance.proxy;\n  const ctx = instance.ctx;\n  shouldCacheAccess = false;\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, \"bc\");\n  }\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options;\n  const checkDuplicateProperties = createDuplicateChecker() ;\n  {\n    const [propsOptions] = instance.propsOptions;\n    if (propsOptions) {\n      for (const key in propsOptions) {\n        checkDuplicateProperties(\"Props\" /* PROPS */, key);\n      }\n    }\n  }\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties);\n  }\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = methods[key];\n      if (shared.isFunction(methodHandler)) {\n        {\n          Object.defineProperty(ctx, key, {\n            value: methodHandler.bind(publicThis),\n            configurable: true,\n            enumerable: true,\n            writable: true\n          });\n        }\n        {\n          checkDuplicateProperties(\"Methods\" /* METHODS */, key);\n        }\n      } else {\n        warn(\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. Did you reference the function correctly?`\n        );\n      }\n    }\n  }\n  if (dataOptions) {\n    if (!shared.isFunction(dataOptions)) {\n      warn(\n        `The data option must be a function. Plain object usage is no longer supported.`\n      );\n    }\n    const data = dataOptions.call(publicThis, publicThis);\n    if (shared.isPromise(data)) {\n      warn(\n        `data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>.`\n      );\n    }\n    if (!shared.isObject(data)) {\n      warn(`data() should return an object.`);\n    } else {\n      instance.data = reactivity.reactive(data);\n      {\n        for (const key in data) {\n          checkDuplicateProperties(\"Data\" /* DATA */, key);\n          if (!isReservedPrefix(key[0])) {\n            Object.defineProperty(ctx, key, {\n              configurable: true,\n              enumerable: true,\n              get: () => data[key],\n              set: shared.NOOP\n            });\n          }\n        }\n      }\n    }\n  }\n  shouldCacheAccess = true;\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = computedOptions[key];\n      const get = shared.isFunction(opt) ? opt.bind(publicThis, publicThis) : shared.isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : shared.NOOP;\n      if (get === shared.NOOP) {\n        warn(`Computed property \"${key}\" has no getter.`);\n      }\n      const set = !shared.isFunction(opt) && shared.isFunction(opt.set) ? opt.set.bind(publicThis) : () => {\n        warn(\n          `Write operation failed: computed property \"${key}\" is readonly.`\n        );\n      } ;\n      const c = computed({\n        get,\n        set\n      });\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: (v) => c.value = v\n      });\n      {\n        checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\n      }\n    }\n  }\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key);\n    }\n  }\n  if (provideOptions) {\n    const provides = shared.isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;\n    Reflect.ownKeys(provides).forEach((key) => {\n      provide(key, provides[key]);\n    });\n  }\n  if (created) {\n    callHook(created, instance, \"c\");\n  }\n  function registerLifecycleHook(register, hook) {\n    if (shared.isArray(hook)) {\n      hook.forEach((_hook) => register(_hook.bind(publicThis)));\n    } else if (hook) {\n      register(hook.bind(publicThis));\n    }\n  }\n  registerLifecycleHook(onBeforeMount, beforeMount);\n  registerLifecycleHook(onMounted, mounted);\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n  registerLifecycleHook(onUpdated, updated);\n  registerLifecycleHook(onActivated, activated);\n  registerLifecycleHook(onDeactivated, deactivated);\n  registerLifecycleHook(onErrorCaptured, errorCaptured);\n  registerLifecycleHook(onRenderTracked, renderTracked);\n  registerLifecycleHook(onRenderTriggered, renderTriggered);\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n  registerLifecycleHook(onUnmounted, unmounted);\n  registerLifecycleHook(onServerPrefetch, serverPrefetch);\n  if (shared.isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {});\n      expose.forEach((key) => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: (val) => publicThis[key] = val\n        });\n      });\n    } else if (!instance.exposed) {\n      instance.exposed = {};\n    }\n  }\n  if (render && instance.render === shared.NOOP) {\n    instance.render = render;\n  }\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs;\n  }\n  if (components)\n    instance.components = components;\n  if (directives)\n    instance.directives = directives;\n}\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = shared.NOOP) {\n  if (shared.isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions);\n  }\n  for (const key in injectOptions) {\n    const opt = injectOptions[key];\n    let injected;\n    if (shared.isObject(opt)) {\n      if (\"default\" in opt) {\n        injected = inject(\n          opt.from || key,\n          opt.default,\n          true\n          /* treat default function as factory */\n        );\n      } else {\n        injected = inject(opt.from || key);\n      }\n    } else {\n      injected = inject(opt);\n    }\n    if (reactivity.isRef(injected)) {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => injected.value,\n        set: (v) => injected.value = v\n      });\n    } else {\n      ctx[key] = injected;\n    }\n    {\n      checkDuplicateProperties(\"Inject\" /* INJECT */, key);\n    }\n  }\n}\nfunction callHook(hook, instance, type) {\n  callWithAsyncErrorHandling(\n    shared.isArray(hook) ? hook.map((h) => h.bind(instance.proxy)) : hook.bind(instance.proxy),\n    instance,\n    type\n  );\n}\nfunction createWatcher(raw, ctx, publicThis, key) {\n  const getter = key.includes(\".\") ? createPathGetter(publicThis, key) : () => publicThis[key];\n  if (shared.isString(raw)) {\n    const handler = ctx[raw];\n    if (shared.isFunction(handler)) {\n      watch(getter, handler);\n    } else {\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\n    }\n  } else if (shared.isFunction(raw)) {\n    watch(getter, raw.bind(publicThis));\n  } else if (shared.isObject(raw)) {\n    if (shared.isArray(raw)) {\n      raw.forEach((r) => createWatcher(r, ctx, publicThis, key));\n    } else {\n      const handler = shared.isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];\n      if (shared.isFunction(handler)) {\n        watch(getter, handler, raw);\n      } else {\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\n      }\n    }\n  } else {\n    warn(`Invalid watch option: \"${key}\"`, raw);\n  }\n}\nfunction resolveMergedOptions(instance) {\n  const base = instance.type;\n  const { mixins, extends: extendsOptions } = base;\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: { optionMergeStrategies }\n  } = instance.appContext;\n  const cached = cache.get(base);\n  let resolved;\n  if (cached) {\n    resolved = cached;\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    {\n      resolved = base;\n    }\n  } else {\n    resolved = {};\n    if (globalMixins.length) {\n      globalMixins.forEach(\n        (m) => mergeOptions(resolved, m, optionMergeStrategies, true)\n      );\n    }\n    mergeOptions(resolved, base, optionMergeStrategies);\n  }\n  if (shared.isObject(base)) {\n    cache.set(base, resolved);\n  }\n  return resolved;\n}\nfunction mergeOptions(to, from, strats, asMixin = false) {\n  const { mixins, extends: extendsOptions } = from;\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true);\n  }\n  if (mixins) {\n    mixins.forEach(\n      (m) => mergeOptions(to, m, strats, true)\n    );\n  }\n  for (const key in from) {\n    if (asMixin && key === \"expose\") {\n      warn(\n        `\"expose\" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.`\n      );\n    } else {\n      const strat = internalOptionMergeStrats[key] || strats && strats[key];\n      to[key] = strat ? strat(to[key], from[key]) : from[key];\n    }\n  }\n  return to;\n}\nconst internalOptionMergeStrats = {\n  data: mergeDataFn,\n  props: mergeEmitsOrPropsOptions,\n  emits: mergeEmitsOrPropsOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n};\nfunction mergeDataFn(to, from) {\n  if (!from) {\n    return to;\n  }\n  if (!to) {\n    return from;\n  }\n  return function mergedDataFn() {\n    return (shared.extend)(\n      shared.isFunction(to) ? to.call(this, this) : to,\n      shared.isFunction(from) ? from.call(this, this) : from\n    );\n  };\n}\nfunction mergeInject(to, from) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\nfunction normalizeInject(raw) {\n  if (shared.isArray(raw)) {\n    const res = {};\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i];\n    }\n    return res;\n  }\n  return raw;\n}\nfunction mergeAsArray(to, from) {\n  return to ? [...new Set([].concat(to, from))] : from;\n}\nfunction mergeObjectOptions(to, from) {\n  return to ? shared.extend(/* @__PURE__ */ Object.create(null), to, from) : from;\n}\nfunction mergeEmitsOrPropsOptions(to, from) {\n  if (to) {\n    if (shared.isArray(to) && shared.isArray(from)) {\n      return [.../* @__PURE__ */ new Set([...to, ...from])];\n    }\n    return shared.extend(\n      /* @__PURE__ */ Object.create(null),\n      normalizePropsOrEmits(to),\n      normalizePropsOrEmits(from != null ? from : {})\n    );\n  } else {\n    return from;\n  }\n}\nfunction mergeWatchOptions(to, from) {\n  if (!to)\n    return from;\n  if (!from)\n    return to;\n  const merged = shared.extend(/* @__PURE__ */ Object.create(null), to);\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key]);\n  }\n  return merged;\n}\n\nfunction createAppContext() {\n  return {\n    app: null,\n    config: {\n      isNativeTag: shared.NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: void 0,\n      warnHandler: void 0,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: /* @__PURE__ */ Object.create(null),\n    optionsCache: /* @__PURE__ */ new WeakMap(),\n    propsCache: /* @__PURE__ */ new WeakMap(),\n    emitsCache: /* @__PURE__ */ new WeakMap()\n  };\n}\nlet uid$1 = 0;\nfunction createAppAPI(render, hydrate) {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!shared.isFunction(rootComponent)) {\n      rootComponent = shared.extend({}, rootComponent);\n    }\n    if (rootProps != null && !shared.isObject(rootProps)) {\n      warn(`root props passed to app.mount() must be an object.`);\n      rootProps = null;\n    }\n    const context = createAppContext();\n    {\n      Object.defineProperty(context.config, \"unwrapInjectedRef\", {\n        get() {\n          return true;\n        },\n        set() {\n          warn(\n            `app.config.unwrapInjectedRef has been deprecated. 3.3 now always unwraps injected refs in Options API.`\n          );\n        }\n      });\n    }\n    const installedPlugins = /* @__PURE__ */ new WeakSet();\n    let isMounted = false;\n    const app = context.app = {\n      _uid: uid$1++,\n      _component: rootComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n      version,\n      get config() {\n        return context.config;\n      },\n      set config(v) {\n        {\n          warn(\n            `app.config cannot be replaced. Modify individual options instead.`\n          );\n        }\n      },\n      use(plugin, ...options) {\n        if (installedPlugins.has(plugin)) {\n          warn(`Plugin has already been applied to target app.`);\n        } else if (plugin && shared.isFunction(plugin.install)) {\n          installedPlugins.add(plugin);\n          plugin.install(app, ...options);\n        } else if (shared.isFunction(plugin)) {\n          installedPlugins.add(plugin);\n          plugin(app, ...options);\n        } else {\n          warn(\n            `A plugin must either be a function or an object with an \"install\" function.`\n          );\n        }\n        return app;\n      },\n      mixin(mixin) {\n        {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin);\n          } else {\n            warn(\n              \"Mixin has already been applied to target app\" + (mixin.name ? `: ${mixin.name}` : \"\")\n            );\n          }\n        }\n        return app;\n      },\n      component(name, component) {\n        {\n          validateComponentName(name, context.config);\n        }\n        if (!component) {\n          return context.components[name];\n        }\n        if (context.components[name]) {\n          warn(`Component \"${name}\" has already been registered in target app.`);\n        }\n        context.components[name] = component;\n        return app;\n      },\n      directive(name, directive) {\n        {\n          validateDirectiveName(name);\n        }\n        if (!directive) {\n          return context.directives[name];\n        }\n        if (context.directives[name]) {\n          warn(`Directive \"${name}\" has already been registered in target app.`);\n        }\n        context.directives[name] = directive;\n        return app;\n      },\n      mount(rootContainer, isHydrate, isSVG) {\n        if (!isMounted) {\n          if (rootContainer.__vue_app__) {\n            warn(\n              `There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling \\`app.unmount()\\` first.`\n            );\n          }\n          const vnode = createVNode(rootComponent, rootProps);\n          vnode.appContext = context;\n          {\n            context.reload = () => {\n              render(cloneVNode(vnode), rootContainer, isSVG);\n            };\n          }\n          if (isHydrate && hydrate) {\n            hydrate(vnode, rootContainer);\n          } else {\n            render(vnode, rootContainer, isSVG);\n          }\n          isMounted = true;\n          app._container = rootContainer;\n          rootContainer.__vue_app__ = app;\n          {\n            app._instance = vnode.component;\n            devtoolsInitApp(app, version);\n          }\n          return getExposeProxy(vnode.component) || vnode.component.proxy;\n        } else {\n          warn(\n            `App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. \\`const createMyApp = () => createApp(App)\\``\n          );\n        }\n      },\n      unmount() {\n        if (isMounted) {\n          render(null, app._container);\n          {\n            app._instance = null;\n            devtoolsUnmountApp(app);\n          }\n          delete app._container.__vue_app__;\n        } else {\n          warn(`Cannot unmount an app that is not mounted.`);\n        }\n      },\n      provide(key, value) {\n        if (key in context.provides) {\n          warn(\n            `App already provides property with key \"${String(key)}\". It will be overwritten with the new value.`\n          );\n        }\n        context.provides[key] = value;\n        return app;\n      },\n      runWithContext(fn) {\n        currentApp = app;\n        try {\n          return fn();\n        } finally {\n          currentApp = null;\n        }\n      }\n    };\n    return app;\n  };\n}\nlet currentApp = null;\n\nfunction provide(key, value) {\n  if (!currentInstance) {\n    {\n      warn(`provide() can only be used inside setup().`);\n    }\n  } else {\n    let provides = currentInstance.provides;\n    const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    }\n    provides[key] = value;\n  }\n}\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n  const instance = currentInstance || currentRenderingInstance;\n  if (instance || currentApp) {\n    const provides = instance ? instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : currentApp._context.provides;\n    if (provides && key in provides) {\n      return provides[key];\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && shared.isFunction(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;\n    } else {\n      warn(`injection \"${String(key)}\" not found.`);\n    }\n  } else {\n    warn(`inject() can only be used inside setup() or functional components.`);\n  }\n}\nfunction hasInjectionContext() {\n  return !!(currentInstance || currentRenderingInstance || currentApp);\n}\n\nfunction initProps(instance, rawProps, isStateful, isSSR = false) {\n  const props = {};\n  const attrs = {};\n  shared.def(attrs, InternalObjectKey, 1);\n  instance.propsDefaults = /* @__PURE__ */ Object.create(null);\n  setFullProps(instance, rawProps, props, attrs);\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = void 0;\n    }\n  }\n  {\n    validateProps(rawProps || {}, props, instance);\n  }\n  if (isStateful) {\n    instance.props = isSSR ? props : reactivity.shallowReactive(props);\n  } else {\n    if (!instance.type.props) {\n      instance.props = attrs;\n    } else {\n      instance.props = props;\n    }\n  }\n  instance.attrs = attrs;\n}\nfunction isInHmrContext(instance) {\n  while (instance) {\n    if (instance.type.__hmrId)\n      return true;\n    instance = instance.parent;\n  }\n}\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n  const {\n    props,\n    attrs,\n    vnode: { patchFlag }\n  } = instance;\n  const rawCurrentProps = reactivity.toRaw(props);\n  const [options] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    !isInHmrContext(instance) && (optimized || patchFlag > 0) && !(patchFlag & 16)\n  ) {\n    if (patchFlag & 8) {\n      const propsToUpdate = instance.vnode.dynamicProps;\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i];\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue;\n        }\n        const value = rawProps[key];\n        if (options) {\n          if (shared.hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value;\n              hasAttrsChanged = true;\n            }\n          } else {\n            const camelizedKey = shared.camelize(key);\n            props[camelizedKey] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              camelizedKey,\n              value,\n              instance,\n              false\n              /* isAbsent */\n            );\n          }\n        } else {\n          if (value !== attrs[key]) {\n            attrs[key] = value;\n            hasAttrsChanged = true;\n          }\n        }\n      }\n    }\n  } else {\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true;\n    }\n    let kebabKey;\n    for (const key in rawCurrentProps) {\n      if (!rawProps || // for camelCase\n      !shared.hasOwn(rawProps, key) && // it's possible the original props was passed in as kebab-case\n      // and converted to camelCase (#955)\n      ((kebabKey = shared.hyphenate(key)) === key || !shared.hasOwn(rawProps, kebabKey))) {\n        if (options) {\n          if (rawPrevProps && // for camelCase\n          (rawPrevProps[key] !== void 0 || // for kebab-case\n          rawPrevProps[kebabKey] !== void 0)) {\n            props[key] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              key,\n              void 0,\n              instance,\n              true\n              /* isAbsent */\n            );\n          }\n        } else {\n          delete props[key];\n        }\n      }\n    }\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (!rawProps || !shared.hasOwn(rawProps, key) && true) {\n          delete attrs[key];\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (hasAttrsChanged) {\n    reactivity.trigger(instance, \"set\", \"$attrs\");\n  }\n  {\n    validateProps(rawProps || {}, props, instance);\n  }\n}\nfunction setFullProps(instance, rawProps, props, attrs) {\n  const [options, needCastKeys] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  let rawCastValues;\n  if (rawProps) {\n    for (let key in rawProps) {\n      if (shared.isReservedProp(key)) {\n        continue;\n      }\n      const value = rawProps[key];\n      let camelKey;\n      if (options && shared.hasOwn(options, camelKey = shared.camelize(key))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value;\n        } else {\n          (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value;\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (needCastKeys) {\n    const rawCurrentProps = reactivity.toRaw(props);\n    const castValues = rawCastValues || shared.EMPTY_OBJ;\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i];\n      props[key] = resolvePropValue(\n        options,\n        rawCurrentProps,\n        key,\n        castValues[key],\n        instance,\n        !shared.hasOwn(castValues, key)\n      );\n    }\n  }\n  return hasAttrsChanged;\n}\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n  const opt = options[key];\n  if (opt != null) {\n    const hasDefault = shared.hasOwn(opt, \"default\");\n    if (hasDefault && value === void 0) {\n      const defaultValue = opt.default;\n      if (opt.type !== Function && !opt.skipFactory && shared.isFunction(defaultValue)) {\n        const { propsDefaults } = instance;\n        if (key in propsDefaults) {\n          value = propsDefaults[key];\n        } else {\n          setCurrentInstance(instance);\n          value = propsDefaults[key] = defaultValue.call(\n            null,\n            props\n          );\n          unsetCurrentInstance();\n        }\n      } else {\n        value = defaultValue;\n      }\n    }\n    if (opt[0 /* shouldCast */]) {\n      if (isAbsent && !hasDefault) {\n        value = false;\n      } else if (opt[1 /* shouldCastTrue */] && (value === \"\" || value === shared.hyphenate(key))) {\n        value = true;\n      }\n    }\n  }\n  return value;\n}\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.propsCache;\n  const cached = cache.get(comp);\n  if (cached) {\n    return cached;\n  }\n  const raw = comp.props;\n  const normalized = {};\n  const needCastKeys = [];\n  let hasExtends = false;\n  if (!shared.isFunction(comp)) {\n    const extendProps = (raw2) => {\n      hasExtends = true;\n      const [props, keys] = normalizePropsOptions(raw2, appContext, true);\n      shared.extend(normalized, props);\n      if (keys)\n        needCastKeys.push(...keys);\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps);\n    }\n    if (comp.extends) {\n      extendProps(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (shared.isObject(comp)) {\n      cache.set(comp, shared.EMPTY_ARR);\n    }\n    return shared.EMPTY_ARR;\n  }\n  if (shared.isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (!shared.isString(raw[i])) {\n        warn(`props must be strings when using array syntax.`, raw[i]);\n      }\n      const normalizedKey = shared.camelize(raw[i]);\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = shared.EMPTY_OBJ;\n      }\n    }\n  } else if (raw) {\n    if (!shared.isObject(raw)) {\n      warn(`invalid props options`, raw);\n    }\n    for (const key in raw) {\n      const normalizedKey = shared.camelize(key);\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key];\n        const prop = normalized[normalizedKey] = shared.isArray(opt) || shared.isFunction(opt) ? { type: opt } : shared.extend({}, opt);\n        if (prop) {\n          const booleanIndex = getTypeIndex(Boolean, prop.type);\n          const stringIndex = getTypeIndex(String, prop.type);\n          prop[0 /* shouldCast */] = booleanIndex > -1;\n          prop[1 /* shouldCastTrue */] = stringIndex < 0 || booleanIndex < stringIndex;\n          if (booleanIndex > -1 || shared.hasOwn(prop, \"default\")) {\n            needCastKeys.push(normalizedKey);\n          }\n        }\n      }\n    }\n  }\n  const res = [normalized, needCastKeys];\n  if (shared.isObject(comp)) {\n    cache.set(comp, res);\n  }\n  return res;\n}\nfunction validatePropName(key) {\n  if (key[0] !== \"$\") {\n    return true;\n  } else {\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`);\n  }\n  return false;\n}\nfunction getType(ctor) {\n  const match = ctor && ctor.toString().match(/^\\s*(function|class) (\\w+)/);\n  return match ? match[2] : ctor === null ? \"null\" : \"\";\n}\nfunction isSameType(a, b) {\n  return getType(a) === getType(b);\n}\nfunction getTypeIndex(type, expectedTypes) {\n  if (shared.isArray(expectedTypes)) {\n    return expectedTypes.findIndex((t) => isSameType(t, type));\n  } else if (shared.isFunction(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1;\n  }\n  return -1;\n}\nfunction validateProps(rawProps, props, instance) {\n  const resolvedValues = reactivity.toRaw(props);\n  const options = instance.propsOptions[0];\n  for (const key in options) {\n    let opt = options[key];\n    if (opt == null)\n      continue;\n    validateProp(\n      key,\n      resolvedValues[key],\n      opt,\n      !shared.hasOwn(rawProps, key) && !shared.hasOwn(rawProps, shared.hyphenate(key))\n    );\n  }\n}\nfunction validateProp(name, value, prop, isAbsent) {\n  const { type, required, validator, skipCheck } = prop;\n  if (required && isAbsent) {\n    warn('Missing required prop: \"' + name + '\"');\n    return;\n  }\n  if (value == null && !required) {\n    return;\n  }\n  if (type != null && type !== true && !skipCheck) {\n    let isValid = false;\n    const types = shared.isArray(type) ? type : [type];\n    const expectedTypes = [];\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const { valid, expectedType } = assertType(value, types[i]);\n      expectedTypes.push(expectedType || \"\");\n      isValid = valid;\n    }\n    if (!isValid) {\n      warn(getInvalidTypeMessage(name, value, expectedTypes));\n      return;\n    }\n  }\n  if (validator && !validator(value)) {\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\n  }\n}\nconst isSimpleType = /* @__PURE__ */ shared.makeMap(\n  \"String,Number,Boolean,Function,Symbol,BigInt\"\n);\nfunction assertType(value, type) {\n  let valid;\n  const expectedType = getType(type);\n  if (isSimpleType(expectedType)) {\n    const t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    if (!valid && t === \"object\") {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === \"Object\") {\n    valid = shared.isObject(value);\n  } else if (expectedType === \"Array\") {\n    valid = shared.isArray(value);\n  } else if (expectedType === \"null\") {\n    valid = value === null;\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid,\n    expectedType\n  };\n}\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n  if (expectedTypes.length === 0) {\n    return `Prop type [] for prop \"${name}\" won't match anything. Did you mean to use type Array instead?`;\n  }\n  let message = `Invalid prop: type check failed for prop \"${name}\". Expected ${expectedTypes.map(shared.capitalize).join(\" | \")}`;\n  const expectedType = expectedTypes[0];\n  const receivedType = shared.toRawType(value);\n  const expectedValue = styleValue(value, expectedType);\n  const receivedValue = styleValue(value, receivedType);\n  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {\n    message += ` with value ${expectedValue}`;\n  }\n  message += `, got ${receivedType} `;\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`;\n  }\n  return message;\n}\nfunction styleValue(value, type) {\n  if (type === \"String\") {\n    return `\"${value}\"`;\n  } else if (type === \"Number\") {\n    return `${Number(value)}`;\n  } else {\n    return `${value}`;\n  }\n}\nfunction isExplicable(type) {\n  const explicitTypes = [\"string\", \"number\", \"boolean\"];\n  return explicitTypes.some((elem) => type.toLowerCase() === elem);\n}\nfunction isBoolean(...args) {\n  return args.some((elem) => elem.toLowerCase() === \"boolean\");\n}\n\nconst isInternalKey = (key) => key[0] === \"_\" || key === \"$stable\";\nconst normalizeSlotValue = (value) => shared.isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];\nconst normalizeSlot = (key, rawSlot, ctx) => {\n  if (rawSlot._n) {\n    return rawSlot;\n  }\n  const normalized = withCtx((...args) => {\n    if (currentInstance) {\n      warn(\n        `Slot \"${key}\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`\n      );\n    }\n    return normalizeSlotValue(rawSlot(...args));\n  }, ctx);\n  normalized._c = false;\n  return normalized;\n};\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n  const ctx = rawSlots._ctx;\n  for (const key in rawSlots) {\n    if (isInternalKey(key))\n      continue;\n    const value = rawSlots[key];\n    if (shared.isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx);\n    } else if (value != null) {\n      {\n        warn(\n          `Non-function value encountered for slot \"${key}\". Prefer function slots for better performance.`\n        );\n      }\n      const normalized = normalizeSlotValue(value);\n      slots[key] = () => normalized;\n    }\n  }\n};\nconst normalizeVNodeSlots = (instance, children) => {\n  if (!isKeepAlive(instance.vnode) && true) {\n    warn(\n      `Non-function value encountered for default slot. Prefer function slots for better performance.`\n    );\n  }\n  const normalized = normalizeSlotValue(children);\n  instance.slots.default = () => normalized;\n};\nconst initSlots = (instance, children) => {\n  if (instance.vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      instance.slots = reactivity.toRaw(children);\n      shared.def(children, \"_\", type);\n    } else {\n      normalizeObjectSlots(\n        children,\n        instance.slots = {});\n    }\n  } else {\n    instance.slots = {};\n    if (children) {\n      normalizeVNodeSlots(instance, children);\n    }\n  }\n  shared.def(instance.slots, InternalObjectKey, 1);\n};\nconst updateSlots = (instance, children, optimized) => {\n  const { vnode, slots } = instance;\n  let needDeletionCheck = true;\n  let deletionComparisonTarget = shared.EMPTY_OBJ;\n  if (vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      if (isHmrUpdating) {\n        shared.extend(slots, children);\n        reactivity.trigger(instance, \"set\", \"$slots\");\n      } else if (optimized && type === 1) {\n        needDeletionCheck = false;\n      } else {\n        shared.extend(slots, children);\n        if (!optimized && type === 1) {\n          delete slots._;\n        }\n      }\n    } else {\n      needDeletionCheck = !children.$stable;\n      normalizeObjectSlots(children, slots);\n    }\n    deletionComparisonTarget = children;\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n    deletionComparisonTarget = { default: 1 };\n  }\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && deletionComparisonTarget[key] == null) {\n        delete slots[key];\n      }\n    }\n  }\n};\n\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n  if (shared.isArray(rawRef)) {\n    rawRef.forEach(\n      (r, i) => setRef(\n        r,\n        oldRawRef && (shared.isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\n        parentSuspense,\n        vnode,\n        isUnmount\n      )\n    );\n    return;\n  }\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    return;\n  }\n  const refValue = vnode.shapeFlag & 4 ? getExposeProxy(vnode.component) || vnode.component.proxy : vnode.el;\n  const value = isUnmount ? null : refValue;\n  const { i: owner, r: ref } = rawRef;\n  if (!owner) {\n    warn(\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.`\n    );\n    return;\n  }\n  const oldRef = oldRawRef && oldRawRef.r;\n  const refs = owner.refs === shared.EMPTY_OBJ ? owner.refs = {} : owner.refs;\n  const setupState = owner.setupState;\n  if (oldRef != null && oldRef !== ref) {\n    if (shared.isString(oldRef)) {\n      refs[oldRef] = null;\n      if (shared.hasOwn(setupState, oldRef)) {\n        setupState[oldRef] = null;\n      }\n    } else if (reactivity.isRef(oldRef)) {\n      oldRef.value = null;\n    }\n  }\n  if (shared.isFunction(ref)) {\n    callWithErrorHandling(ref, owner, 12, [value, refs]);\n  } else {\n    const _isString = shared.isString(ref);\n    const _isRef = reactivity.isRef(ref);\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString ? shared.hasOwn(setupState, ref) ? setupState[ref] : refs[ref] : ref.value;\n          if (isUnmount) {\n            shared.isArray(existing) && shared.remove(existing, refValue);\n          } else {\n            if (!shared.isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue];\n                if (shared.hasOwn(setupState, ref)) {\n                  setupState[ref] = refs[ref];\n                }\n              } else {\n                ref.value = [refValue];\n                if (rawRef.k)\n                  refs[rawRef.k] = ref.value;\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue);\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value;\n          if (shared.hasOwn(setupState, ref)) {\n            setupState[ref] = value;\n          }\n        } else if (_isRef) {\n          ref.value = value;\n          if (rawRef.k)\n            refs[rawRef.k] = value;\n        } else {\n          warn(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n        }\n      };\n      if (value) {\n        doSet.id = -1;\n        queuePostRenderEffect(doSet, parentSuspense);\n      } else {\n        doSet();\n      }\n    } else {\n      warn(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n    }\n  }\n}\n\nlet hasMismatch = false;\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== \"foreignObject\";\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\nfunction createHydrationFunctions(rendererInternals) {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      createText,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment\n    }\n  } = rendererInternals;\n  const hydrate = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n      warn(\n        `Attempting to hydrate existing markup but container is empty. Performing full mount instead.`\n      );\n      patch(null, vnode, container);\n      flushPostFlushCbs();\n      container._vnode = vnode;\n      return;\n    }\n    hasMismatch = false;\n    hydrateNode(container.firstChild, vnode, null, null, null);\n    flushPostFlushCbs();\n    container._vnode = vnode;\n    if (hasMismatch && true) {\n      console.error(`Hydration completed but contains mismatches.`);\n    }\n  };\n  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n    const isFragmentStart = isComment(node) && node.data === \"[\";\n    const onMismatch = () => handleMismatch(\n      node,\n      vnode,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      isFragmentStart\n    );\n    const { type, ref, shapeFlag, patchFlag } = vnode;\n    let domType = node.nodeType;\n    vnode.el = node;\n    {\n      if (!(\"__vnode\" in node)) {\n        Object.defineProperty(node, \"__vnode\", {\n          value: vnode,\n          enumerable: false\n        });\n      }\n      if (!(\"__vueParentComponent\" in node)) {\n        Object.defineProperty(node, \"__vueParentComponent\", {\n          value: parentComponent,\n          enumerable: false\n        });\n      }\n    }\n    if (patchFlag === -2) {\n      optimized = false;\n      vnode.dynamicChildren = null;\n    }\n    let nextNode = null;\n    switch (type) {\n      case Text:\n        if (domType !== 3 /* TEXT */) {\n          if (vnode.children === \"\") {\n            insert(vnode.el = createText(\"\"), parentNode(node), node);\n            nextNode = node;\n          } else {\n            nextNode = onMismatch();\n          }\n        } else {\n          if (node.data !== vnode.children) {\n            hasMismatch = true;\n            warn(\n              `Hydration text mismatch:\n- Server rendered: ${JSON.stringify(\n                node.data\n              )}\n- Client rendered: ${JSON.stringify(vnode.children)}`\n            );\n            node.data = vnode.children;\n          }\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Comment:\n        if (isTemplateNode(node)) {\n          nextNode = nextSibling(node);\n          replaceNode(\n            vnode.el = node.content.firstChild,\n            node,\n            parentComponent\n          );\n        } else if (domType !== 8 /* COMMENT */ || isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Static:\n        if (isFragmentStart) {\n          node = nextSibling(node);\n          domType = node.nodeType;\n        }\n        if (domType === 1 /* ELEMENT */ || domType === 3 /* TEXT */) {\n          nextNode = node;\n          const needToAdoptContent = !vnode.children.length;\n          for (let i = 0; i < vnode.staticCount; i++) {\n            if (needToAdoptContent)\n              vnode.children += nextNode.nodeType === 1 /* ELEMENT */ ? nextNode.outerHTML : nextNode.data;\n            if (i === vnode.staticCount - 1) {\n              vnode.anchor = nextNode;\n            }\n            nextNode = nextSibling(nextNode);\n          }\n          return isFragmentStart ? nextSibling(nextNode) : nextNode;\n        } else {\n          onMismatch();\n        }\n        break;\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = hydrateFragment(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            slotScopeIds,\n            optimized\n          );\n        }\n        break;\n      default:\n        if (shapeFlag & 1) {\n          if ((domType !== 1 /* ELEMENT */ || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) && !isTemplateNode(node)) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = hydrateElement(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized\n            );\n          }\n        } else if (shapeFlag & 6) {\n          vnode.slotScopeIds = slotScopeIds;\n          const container = parentNode(node);\n          if (isFragmentStart) {\n            nextNode = locateClosingAnchor(node);\n          } else if (isComment(node) && node.data === \"teleport start\") {\n            nextNode = locateClosingAnchor(node, node.data, \"teleport end\");\n          } else {\n            nextNode = nextSibling(node);\n          }\n          mountComponent(\n            vnode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVGContainer(container),\n            optimized\n          );\n          if (isAsyncWrapper(vnode)) {\n            let subTree;\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment);\n              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;\n            } else {\n              subTree = node.nodeType === 3 ? createTextVNode(\"\") : createVNode(\"div\");\n            }\n            subTree.el = node;\n            vnode.component.subTree = subTree;\n          }\n        } else if (shapeFlag & 64) {\n          if (domType !== 8 /* COMMENT */) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = vnode.type.hydrate(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized,\n              rendererInternals,\n              hydrateChildren\n            );\n          }\n        } else if (shapeFlag & 128) {\n          nextNode = vnode.type.hydrate(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            isSVGContainer(parentNode(node)),\n            slotScopeIds,\n            optimized,\n            rendererInternals,\n            hydrateNode\n          );\n        } else {\n          warn(\"Invalid HostVNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode);\n    }\n    return nextNode;\n  };\n  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode;\n    const forcePatch = type === \"input\" || type === \"option\";\n    {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n      }\n      if (props) {\n        if (forcePatch || !optimized || patchFlag & (16 | 32)) {\n          for (const key in props) {\n            if (forcePatch && (key.endsWith(\"value\") || key === \"indeterminate\") || shared.isOn(key) && !shared.isReservedProp(key) || // force hydrate v-bind with .prop modifiers\n            key[0] === \".\") {\n              patchProp(\n                el,\n                key,\n                null,\n                props[key],\n                false,\n                void 0,\n                parentComponent\n              );\n            }\n          }\n        } else if (props.onClick) {\n          patchProp(\n            el,\n            \"onClick\",\n            null,\n            props.onClick,\n            false,\n            void 0,\n            parentComponent\n          );\n        }\n      }\n      let vnodeHooks;\n      if (vnodeHooks = props && props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n      }\n      let needCallTransitionHooks = false;\n      if (isTemplateNode(el)) {\n        needCallTransitionHooks = needTransition(parentSuspense, transition) && parentComponent && parentComponent.vnode.props && parentComponent.vnode.props.appear;\n        const content = el.content.firstChild;\n        if (needCallTransitionHooks) {\n          transition.beforeEnter(content);\n        }\n        replaceNode(content, el, parentComponent);\n        vnode.el = el = content;\n      }\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n      }\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs || needCallTransitionHooks) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n          needCallTransitionHooks && transition.enter(el);\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n        }, parentSuspense);\n      }\n      if (shapeFlag & 16 && // skip if element has innerHTML / textContent\n      !(props && (props.innerHTML || props.textContent))) {\n        let next = hydrateChildren(\n          el.firstChild,\n          vnode,\n          el,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        let hasWarned = false;\n        while (next) {\n          hasMismatch = true;\n          if (!hasWarned) {\n            warn(\n              `Hydration children mismatch in <${vnode.type}>: server rendered element contains more child nodes than client vdom.`\n            );\n            hasWarned = true;\n          }\n          const cur = next;\n          next = next.nextSibling;\n          remove(cur);\n        }\n      } else if (shapeFlag & 8) {\n        if (el.textContent !== vnode.children) {\n          hasMismatch = true;\n          warn(\n            `Hydration text content mismatch in <${vnode.type}>:\n- Server rendered: ${el.textContent}\n- Client rendered: ${vnode.children}`\n          );\n          el.textContent = vnode.children;\n        }\n      }\n    }\n    return el.nextSibling;\n  };\n  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!parentVNode.dynamicChildren;\n    const children = parentVNode.children;\n    const l = children.length;\n    let hasWarned = false;\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);\n      if (node) {\n        node = hydrateNode(\n          node,\n          vnode,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      } else if (vnode.type === Text && !vnode.children) {\n        continue;\n      } else {\n        hasMismatch = true;\n        if (!hasWarned) {\n          warn(\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: server rendered element contains fewer child nodes than client vdom.`\n          );\n          hasWarned = true;\n        }\n        patch(\n          null,\n          vnode,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVGContainer(container),\n          slotScopeIds\n        );\n      }\n    }\n    return node;\n  };\n  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode;\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    const container = parentNode(node);\n    const next = hydrateChildren(\n      nextSibling(node),\n      vnode,\n      container,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      optimized\n    );\n    if (next && isComment(next) && next.data === \"]\") {\n      return nextSibling(vnode.anchor = next);\n    } else {\n      hasMismatch = true;\n      insert(vnode.anchor = createComment(`]`), container, next);\n      return next;\n    }\n  };\n  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n    hasMismatch = true;\n    warn(\n      `Hydration node mismatch:\n- Client vnode:`,\n      vnode.type,\n      `\n- Server rendered DOM:`,\n      node,\n      node.nodeType === 3 /* TEXT */ ? `(text)` : isComment(node) && node.data === \"[\" ? `(start of fragment)` : ``\n    );\n    vnode.el = null;\n    if (isFragment) {\n      const end = locateClosingAnchor(node);\n      while (true) {\n        const next2 = nextSibling(node);\n        if (next2 && next2 !== end) {\n          remove(next2);\n        } else {\n          break;\n        }\n      }\n    }\n    const next = nextSibling(node);\n    const container = parentNode(node);\n    remove(node);\n    patch(\n      null,\n      vnode,\n      container,\n      next,\n      parentComponent,\n      parentSuspense,\n      isSVGContainer(container),\n      slotScopeIds\n    );\n    return next;\n  };\n  const locateClosingAnchor = (node, open = \"[\", close = \"]\") => {\n    let match = 0;\n    while (node) {\n      node = nextSibling(node);\n      if (node && isComment(node)) {\n        if (node.data === open)\n          match++;\n        if (node.data === close) {\n          if (match === 0) {\n            return nextSibling(node);\n          } else {\n            match--;\n          }\n        }\n      }\n    }\n    return node;\n  };\n  const replaceNode = (newNode, oldNode, parentComponent) => {\n    const parentNode2 = oldNode.parentNode;\n    if (parentNode2) {\n      parentNode2.replaceChild(newNode, oldNode);\n    }\n    let parent = parentComponent;\n    while (parent) {\n      if (parent.vnode.el === oldNode) {\n        parent.vnode.el = parent.subTree.el = newNode;\n      }\n      parent = parent.parent;\n    }\n  };\n  const isTemplateNode = (node) => {\n    return node.nodeType === 1 /* ELEMENT */ && node.tagName.toLowerCase() === \"template\";\n  };\n  return [hydrate, hydrateNode];\n}\n\nlet supported;\nlet perf;\nfunction startMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    perf.mark(`vue-${type}-${instance.uid}`);\n  }\n  {\n    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction endMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    const startTag = `vue-${type}-${instance.uid}`;\n    const endTag = startTag + `:end`;\n    perf.mark(endTag);\n    perf.measure(\n      `<${formatComponentName(instance, instance.type)}> ${type}`,\n      startTag,\n      endTag\n    );\n    perf.clearMarks(startTag);\n    perf.clearMarks(endTag);\n  }\n  {\n    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction isSupported() {\n  if (supported !== void 0) {\n    return supported;\n  }\n  if (typeof window !== \"undefined\" && window.performance) {\n    supported = true;\n    perf = window.performance;\n  } else {\n    supported = false;\n  }\n  return supported;\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense ;\nfunction createRenderer(options) {\n  return baseCreateRenderer(options);\n}\nfunction createHydrationRenderer(options) {\n  return baseCreateRenderer(options, createHydrationFunctions);\n}\nfunction baseCreateRenderer(options, createHydrationFns) {\n  const target = shared.getGlobalThis();\n  target.__VUE__ = true;\n  {\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\n  }\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = shared.NOOP,\n    insertStaticContent: hostInsertStaticContent\n  } = options;\n  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = isHmrUpdating ? false : !!n2.dynamicChildren) => {\n    if (n1 === n2) {\n      return;\n    }\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1);\n      unmount(n1, parentComponent, parentSuspense, true);\n      n1 = null;\n    }\n    if (n2.patchFlag === -2) {\n      optimized = false;\n      n2.dynamicChildren = null;\n    }\n    const { type, ref, shapeFlag } = n2;\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor);\n        break;\n      case Comment:\n        processCommentNode(n1, n2, container, anchor);\n        break;\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, isSVG);\n        } else {\n          patchStaticNode(n1, n2, container, isSVG);\n        }\n        break;\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        break;\n      default:\n        if (shapeFlag & 1) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 6) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 64) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (shapeFlag & 128) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else {\n          warn(\"Invalid VNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n    }\n  };\n  const processText = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateText(n2.children),\n        container,\n        anchor\n      );\n    } else {\n      const el = n2.el = n1.el;\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children);\n      }\n    }\n  };\n  const processCommentNode = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateComment(n2.children || \"\"),\n        container,\n        anchor\n      );\n    } else {\n      n2.el = n1.el;\n    }\n  };\n  const mountStaticNode = (n2, container, anchor, isSVG) => {\n    [n2.el, n2.anchor] = hostInsertStaticContent(\n      n2.children,\n      container,\n      anchor,\n      isSVG,\n      n2.el,\n      n2.anchor\n    );\n  };\n  const patchStaticNode = (n1, n2, container, isSVG) => {\n    if (n2.children !== n1.children) {\n      const anchor = hostNextSibling(n1.anchor);\n      removeStaticNode(n1);\n      [n2.el, n2.anchor] = hostInsertStaticContent(\n        n2.children,\n        container,\n        anchor,\n        isSVG\n      );\n    } else {\n      n2.el = n1.el;\n      n2.anchor = n1.anchor;\n    }\n  };\n  const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostInsert(el, container, nextSibling);\n      el = next;\n    }\n    hostInsert(anchor, container, nextSibling);\n  };\n  const removeStaticNode = ({ el, anchor }) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostRemove(el);\n      el = next;\n    }\n    hostRemove(anchor);\n  };\n  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    isSVG = isSVG || n2.type === \"svg\";\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      patchElement(\n        n1,\n        n2,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let el;\n    let vnodeHook;\n    const { type, props, shapeFlag, transition, dirs } = vnode;\n    el = vnode.el = hostCreateElement(\n      vnode.type,\n      isSVG,\n      props && props.is,\n      props\n    );\n    if (shapeFlag & 8) {\n      hostSetElementText(el, vnode.children);\n    } else if (shapeFlag & 16) {\n      mountChildren(\n        vnode.children,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG && type !== \"foreignObject\",\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n    }\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n    if (props) {\n      for (const key in props) {\n        if (key !== \"value\" && !shared.isReservedProp(key)) {\n          hostPatchProp(\n            el,\n            key,\n            null,\n            props[key],\n            isSVG,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in props) {\n        hostPatchProp(el, \"value\", null, props.value);\n      }\n      if (vnodeHook = props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHook, parentComponent, vnode);\n      }\n    }\n    {\n      Object.defineProperty(el, \"__vnode\", {\n        value: vnode,\n        enumerable: false\n      });\n      Object.defineProperty(el, \"__vueParentComponent\", {\n        value: parentComponent,\n        enumerable: false\n      });\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n    }\n    const needCallTransitionHooks = needTransition(parentSuspense, transition);\n    if (needCallTransitionHooks) {\n      transition.beforeEnter(el);\n    }\n    hostInsert(el, container, anchor);\n    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        needCallTransitionHooks && transition.enter(el);\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n      }, parentSuspense);\n    }\n  };\n  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId);\n    }\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i]);\n      }\n    }\n    if (parentComponent) {\n      let subTree = parentComponent.subTree;\n      if (subTree.patchFlag > 0 && subTree.patchFlag & 2048) {\n        subTree = filterSingleRoot(subTree.children) || subTree;\n      }\n      if (vnode === subTree) {\n        const parentVNode = parentComponent.vnode;\n        setScopeId(\n          el,\n          parentVNode,\n          parentVNode.scopeId,\n          parentVNode.slotScopeIds,\n          parentComponent.parent\n        );\n      }\n    }\n  };\n  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const el = n2.el = n1.el;\n    let { patchFlag, dynamicChildren, dirs } = n2;\n    patchFlag |= n1.patchFlag & 16;\n    const oldProps = n1.props || shared.EMPTY_OBJ;\n    const newProps = n2.props || shared.EMPTY_OBJ;\n    let vnodeHook;\n    parentComponent && toggleRecurse(parentComponent, false);\n    if (vnodeHook = newProps.onVnodeBeforeUpdate) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n    }\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, \"beforeUpdate\");\n    }\n    parentComponent && toggleRecurse(parentComponent, true);\n    if (isHmrUpdating) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    const areChildrenSVG = isSVG && n2.type !== \"foreignObject\";\n    if (dynamicChildren) {\n      patchBlockChildren(\n        n1.dynamicChildren,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        areChildrenSVG,\n        slotScopeIds\n      );\n      {\n        traverseStaticChildren(n1, n2);\n      }\n    } else if (!optimized) {\n      patchChildren(\n        n1,\n        n2,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        areChildrenSVG,\n        slotScopeIds,\n        false\n      );\n    }\n    if (patchFlag > 0) {\n      if (patchFlag & 16) {\n        patchProps(\n          el,\n          n2,\n          oldProps,\n          newProps,\n          parentComponent,\n          parentSuspense,\n          isSVG\n        );\n      } else {\n        if (patchFlag & 2) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, \"class\", null, newProps.class, isSVG);\n          }\n        }\n        if (patchFlag & 4) {\n          hostPatchProp(el, \"style\", oldProps.style, newProps.style, isSVG);\n        }\n        if (patchFlag & 8) {\n          const propsToUpdate = n2.dynamicProps;\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i];\n            const prev = oldProps[key];\n            const next = newProps[key];\n            if (next !== prev || key === \"value\") {\n              hostPatchProp(\n                el,\n                key,\n                prev,\n                next,\n                isSVG,\n                n1.children,\n                parentComponent,\n                parentSuspense,\n                unmountChildren\n              );\n            }\n          }\n        }\n      }\n      if (patchFlag & 1) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children);\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      patchProps(\n        el,\n        n2,\n        oldProps,\n        newProps,\n        parentComponent,\n        parentSuspense,\n        isSVG\n      );\n    }\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, \"updated\");\n      }, parentSuspense);\n    }\n  };\n  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i];\n      const newVNode = newChildren[i];\n      const container = (\n        // oldVNode may be an errored async setup() component inside Suspense\n        // which will not have a mounted element\n        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children.\n        (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement\n        // which also requires the correct parent container\n        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.\n        oldVNode.shapeFlag & (6 | 64)) ? hostParentNode(oldVNode.el) : (\n          // In other cases, the parent container is not actually used so we\n          // just pass the block element here to avoid a DOM parentNode call.\n          fallbackContainer\n        )\n      );\n      patch(\n        oldVNode,\n        newVNode,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        true\n      );\n    }\n  };\n  const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\n    if (oldProps !== newProps) {\n      if (oldProps !== shared.EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!shared.isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              oldProps[key],\n              null,\n              isSVG,\n              vnode.children,\n              parentComponent,\n              parentSuspense,\n              unmountChildren\n            );\n          }\n        }\n      }\n      for (const key in newProps) {\n        if (shared.isReservedProp(key))\n          continue;\n        const next = newProps[key];\n        const prev = oldProps[key];\n        if (next !== prev && key !== \"value\") {\n          hostPatchProp(\n            el,\n            key,\n            prev,\n            next,\n            isSVG,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in newProps) {\n        hostPatchProp(el, \"value\", oldProps.value, newProps.value);\n      }\n    }\n  };\n  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText(\"\");\n    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText(\"\");\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\n    if (\n      // #5523 dev root fragment may inherit directives\n      isHmrUpdating || patchFlag & 2048\n    ) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor);\n      hostInsert(fragmentEndAnchor, container, anchor);\n      mountChildren(\n        n2.children,\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result\n      // of renderSlot() with no valid children\n      n1.dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds\n        );\n        {\n          traverseStaticChildren(n1, n2);\n        }\n      } else {\n        patchChildren(\n          n1,\n          n2,\n          container,\n          fragmentEndAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n  };\n  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    n2.slotScopeIds = slotScopeIds;\n    if (n1 == null) {\n      if (n2.shapeFlag & 512) {\n        parentComponent.ctx.activate(\n          n2,\n          container,\n          anchor,\n          isSVG,\n          optimized\n        );\n      } else {\n        mountComponent(\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        );\n      }\n    } else {\n      updateComponent(n1, n2, optimized);\n    }\n  };\n  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\n    const instance = (initialVNode.component = createComponentInstance(\n      initialVNode,\n      parentComponent,\n      parentSuspense\n    ));\n    if (instance.type.__hmrId) {\n      registerHMR(instance);\n    }\n    {\n      pushWarningContext(initialVNode);\n      startMeasure(instance, `mount`);\n    }\n    if (isKeepAlive(initialVNode)) {\n      instance.ctx.renderer = internals;\n    }\n    {\n      {\n        startMeasure(instance, `init`);\n      }\n      setupComponent(instance);\n      {\n        endMeasure(instance, `init`);\n      }\n    }\n    if (instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\n      if (!initialVNode.el) {\n        const placeholder = instance.subTree = createVNode(Comment);\n        processCommentNode(null, placeholder, container, anchor);\n      }\n      return;\n    }\n    setupRenderEffect(\n      instance,\n      initialVNode,\n      container,\n      anchor,\n      parentSuspense,\n      isSVG,\n      optimized\n    );\n    {\n      popWarningContext();\n      endMeasure(instance, `mount`);\n    }\n  };\n  const updateComponent = (n1, n2, optimized) => {\n    const instance = n2.component = n1.component;\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (instance.asyncDep && !instance.asyncResolved) {\n        {\n          pushWarningContext(n2);\n        }\n        updateComponentPreRender(instance, n2, optimized);\n        {\n          popWarningContext();\n        }\n        return;\n      } else {\n        instance.next = n2;\n        invalidateJob(instance.update);\n        instance.update();\n      }\n    } else {\n      n2.el = n1.el;\n      instance.vnode = n2;\n    }\n  };\n  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook;\n        const { el, props } = initialVNode;\n        const { bm, m, parent } = instance;\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n        toggleRecurse(instance, false);\n        if (bm) {\n          shared.invokeArrayFns(bm);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode);\n        }\n        toggleRecurse(instance, true);\n        if (el && hydrateNode) {\n          const hydrateSubTree = () => {\n            {\n              startMeasure(instance, `render`);\n            }\n            instance.subTree = renderComponentRoot(instance);\n            {\n              endMeasure(instance, `render`);\n            }\n            {\n              startMeasure(instance, `hydrate`);\n            }\n            hydrateNode(\n              el,\n              instance.subTree,\n              instance,\n              parentSuspense,\n              null\n            );\n            {\n              endMeasure(instance, `hydrate`);\n            }\n          };\n          if (isAsyncWrapperVNode) {\n            initialVNode.type.__asyncLoader().then(\n              // note: we are moving the render call into an async callback,\n              // which means it won't track dependencies - but it's ok because\n              // a server-rendered async wrapper is already in resolved state\n              // and it will never need to change.\n              () => !instance.isUnmounted && hydrateSubTree()\n            );\n          } else {\n            hydrateSubTree();\n          }\n        } else {\n          {\n            startMeasure(instance, `render`);\n          }\n          const subTree = instance.subTree = renderComponentRoot(instance);\n          {\n            endMeasure(instance, `render`);\n          }\n          {\n            startMeasure(instance, `patch`);\n          }\n          patch(\n            null,\n            subTree,\n            container,\n            anchor,\n            instance,\n            parentSuspense,\n            isSVG\n          );\n          {\n            endMeasure(instance, `patch`);\n          }\n          initialVNode.el = subTree.el;\n        }\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {\n          const scopedInitialVNode = initialVNode;\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),\n            parentSuspense\n          );\n        }\n        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n        }\n        instance.isMounted = true;\n        {\n          devtoolsComponentAdded(instance);\n        }\n        initialVNode = container = anchor = null;\n      } else {\n        let { next, bu, u, parent, vnode } = instance;\n        let originNext = next;\n        let vnodeHook;\n        {\n          pushWarningContext(next || instance.vnode);\n        }\n        toggleRecurse(instance, false);\n        if (next) {\n          next.el = vnode.el;\n          updateComponentPreRender(instance, next, optimized);\n        } else {\n          next = vnode;\n        }\n        if (bu) {\n          shared.invokeArrayFns(bu);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode);\n        }\n        toggleRecurse(instance, true);\n        {\n          startMeasure(instance, `render`);\n        }\n        const nextTree = renderComponentRoot(instance);\n        {\n          endMeasure(instance, `render`);\n        }\n        const prevTree = instance.subTree;\n        instance.subTree = nextTree;\n        {\n          startMeasure(instance, `patch`);\n        }\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a teleport\n          hostParentNode(prevTree.el),\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          isSVG\n        );\n        {\n          endMeasure(instance, `patch`);\n        }\n        next.el = nextTree.el;\n        if (originNext === null) {\n          updateHOCHostEl(instance, nextTree.el);\n        }\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeUpdated) {\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, next, vnode),\n            parentSuspense\n          );\n        }\n        {\n          devtoolsComponentUpdated(instance);\n        }\n        {\n          popWarningContext();\n        }\n      }\n    };\n    const effect = instance.effect = new reactivity.ReactiveEffect(\n      componentUpdateFn,\n      () => queueJob(update),\n      instance.scope\n      // track it in component's effect scope\n    );\n    const update = instance.update = () => effect.run();\n    update.id = instance.uid;\n    toggleRecurse(instance, true);\n    {\n      effect.onTrack = instance.rtc ? (e) => shared.invokeArrayFns(instance.rtc, e) : void 0;\n      effect.onTrigger = instance.rtg ? (e) => shared.invokeArrayFns(instance.rtg, e) : void 0;\n      update.ownerInstance = instance;\n    }\n    update();\n  };\n  const updateComponentPreRender = (instance, nextVNode, optimized) => {\n    nextVNode.component = instance;\n    const prevProps = instance.vnode.props;\n    instance.vnode = nextVNode;\n    instance.next = null;\n    updateProps(instance, nextVNode.props, prevProps, optimized);\n    updateSlots(instance, nextVNode.children, optimized);\n    reactivity.pauseTracking();\n    flushPreFlushCbs();\n    reactivity.resetTracking();\n  };\n  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\n    const c1 = n1 && n1.children;\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n    const c2 = n2.children;\n    const { patchFlag, shapeFlag } = n2;\n    if (patchFlag > 0) {\n      if (patchFlag & 128) {\n        patchKeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      } else if (patchFlag & 256) {\n        patchUnkeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      }\n    }\n    if (shapeFlag & 8) {\n      if (prevShapeFlag & 16) {\n        unmountChildren(c1, parentComponent, parentSuspense);\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2);\n      }\n    } else {\n      if (prevShapeFlag & 16) {\n        if (shapeFlag & 16) {\n          patchKeyedChildren(\n            c1,\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else {\n          unmountChildren(c1, parentComponent, parentSuspense, true);\n        }\n      } else {\n        if (prevShapeFlag & 8) {\n          hostSetElementText(container, \"\");\n        }\n        if (shapeFlag & 16) {\n          mountChildren(\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        }\n      }\n    }\n  };\n  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    c1 = c1 || shared.EMPTY_ARR;\n    c2 = c2 || shared.EMPTY_ARR;\n    const oldLength = c1.length;\n    const newLength = c2.length;\n    const commonLength = Math.min(oldLength, newLength);\n    let i;\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (oldLength > newLength) {\n      unmountChildren(\n        c1,\n        parentComponent,\n        parentSuspense,\n        true,\n        false,\n        commonLength\n      );\n    } else {\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        commonLength\n      );\n    }\n  };\n  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1;\n    let e2 = l2 - 1;\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      i++;\n    }\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      e1--;\n      e2--;\n    }\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1;\n        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n        while (i <= e2) {\n          patch(\n            null,\n            c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          i++;\n        }\n      }\n    } else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true);\n        i++;\n      }\n    } else {\n      const s1 = i;\n      const s2 = i;\n      const keyToNewIndexMap = /* @__PURE__ */ new Map();\n      for (i = s2; i <= e2; i++) {\n        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n        if (nextChild.key != null) {\n          if (keyToNewIndexMap.has(nextChild.key)) {\n            warn(\n              `Duplicate keys found during update:`,\n              JSON.stringify(nextChild.key),\n              `Make sure keys are unique.`\n            );\n          }\n          keyToNewIndexMap.set(nextChild.key, i);\n        }\n      }\n      let j;\n      let patched = 0;\n      const toBePatched = e2 - s2 + 1;\n      let moved = false;\n      let maxNewIndexSoFar = 0;\n      const newIndexToOldIndexMap = new Array(toBePatched);\n      for (i = 0; i < toBePatched; i++)\n        newIndexToOldIndexMap[i] = 0;\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i];\n        if (patched >= toBePatched) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n          continue;\n        }\n        let newIndex;\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key);\n        } else {\n          for (j = s2; j <= e2; j++) {\n            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {\n              newIndex = j;\n              break;\n            }\n          }\n        }\n        if (newIndex === void 0) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex;\n          } else {\n            moved = true;\n          }\n          patch(\n            prevChild,\n            c2[newIndex],\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          patched++;\n        }\n      }\n      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : shared.EMPTY_ARR;\n      j = increasingNewIndexSequence.length - 1;\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i;\n        const nextChild = c2[nextIndex];\n        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n        if (newIndexToOldIndexMap[i] === 0) {\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (moved) {\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, 2);\n          } else {\n            j--;\n          }\n        }\n      }\n    }\n  };\n  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n    const { el, type, transition, children, shapeFlag } = vnode;\n    if (shapeFlag & 6) {\n      move(vnode.component.subTree, container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 128) {\n      vnode.suspense.move(container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 64) {\n      type.move(vnode, container, anchor, internals);\n      return;\n    }\n    if (type === Fragment) {\n      hostInsert(el, container, anchor);\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor, moveType);\n      }\n      hostInsert(vnode.anchor, container, anchor);\n      return;\n    }\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor);\n      return;\n    }\n    const needTransition2 = moveType !== 2 && shapeFlag & 1 && transition;\n    if (needTransition2) {\n      if (moveType === 0) {\n        transition.beforeEnter(el);\n        hostInsert(el, container, anchor);\n        queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n      } else {\n        const { leave, delayLeave, afterLeave } = transition;\n        const remove2 = () => hostInsert(el, container, anchor);\n        const performLeave = () => {\n          leave(el, () => {\n            remove2();\n            afterLeave && afterLeave();\n          });\n        };\n        if (delayLeave) {\n          delayLeave(el, remove2, performLeave);\n        } else {\n          performLeave();\n        }\n      }\n    } else {\n      hostInsert(el, container, anchor);\n    }\n  };\n  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs\n    } = vnode;\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true);\n    }\n    if (shapeFlag & 256) {\n      parentComponent.ctx.deactivate(vnode);\n      return;\n    }\n    const shouldInvokeDirs = shapeFlag & 1 && dirs;\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n    let vnodeHook;\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode);\n    }\n    if (shapeFlag & 6) {\n      unmountComponent(vnode.component, parentSuspense, doRemove);\n    } else {\n      if (shapeFlag & 128) {\n        vnode.suspense.unmount(parentSuspense, doRemove);\n        return;\n      }\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeUnmount\");\n      }\n      if (shapeFlag & 64) {\n        vnode.type.remove(\n          vnode,\n          parentComponent,\n          parentSuspense,\n          optimized,\n          internals,\n          doRemove\n        );\n      } else if (dynamicChildren && // #1153: fast path should not be taken for non-stable (v-for) fragments\n      (type !== Fragment || patchFlag > 0 && patchFlag & 64)) {\n        unmountChildren(\n          dynamicChildren,\n          parentComponent,\n          parentSuspense,\n          false,\n          true\n        );\n      } else if (type === Fragment && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {\n        unmountChildren(children, parentComponent, parentSuspense);\n      }\n      if (doRemove) {\n        remove(vnode);\n      }\n    }\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, \"unmounted\");\n      }, parentSuspense);\n    }\n  };\n  const remove = (vnode) => {\n    const { type, el, anchor, transition } = vnode;\n    if (type === Fragment) {\n      if (vnode.patchFlag > 0 && vnode.patchFlag & 2048 && transition && !transition.persisted) {\n        vnode.children.forEach((child) => {\n          if (child.type === Comment) {\n            hostRemove(child.el);\n          } else {\n            remove(child);\n          }\n        });\n      } else {\n        removeFragment(el, anchor);\n      }\n      return;\n    }\n    if (type === Static) {\n      removeStaticNode(vnode);\n      return;\n    }\n    const performRemove = () => {\n      hostRemove(el);\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave();\n      }\n    };\n    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {\n      const { leave, delayLeave } = transition;\n      const performLeave = () => leave(el, performRemove);\n      if (delayLeave) {\n        delayLeave(vnode.el, performRemove, performLeave);\n      } else {\n        performLeave();\n      }\n    } else {\n      performRemove();\n    }\n  };\n  const removeFragment = (cur, end) => {\n    let next;\n    while (cur !== end) {\n      next = hostNextSibling(cur);\n      hostRemove(cur);\n      cur = next;\n    }\n    hostRemove(end);\n  };\n  const unmountComponent = (instance, parentSuspense, doRemove) => {\n    if (instance.type.__hmrId) {\n      unregisterHMR(instance);\n    }\n    const { bum, scope, update, subTree, um } = instance;\n    if (bum) {\n      shared.invokeArrayFns(bum);\n    }\n    scope.stop();\n    if (update) {\n      update.active = false;\n      unmount(subTree, instance, parentSuspense, doRemove);\n    }\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense);\n    }\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true;\n    }, parentSuspense);\n    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {\n      parentSuspense.deps--;\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve();\n      }\n    }\n    {\n      devtoolsComponentRemoved(instance);\n    }\n  };\n  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n    }\n  };\n  const getNextHostNode = (vnode) => {\n    if (vnode.shapeFlag & 6) {\n      return getNextHostNode(vnode.component.subTree);\n    }\n    if (vnode.shapeFlag & 128) {\n      return vnode.suspense.next();\n    }\n    return hostNextSibling(vnode.anchor || vnode.el);\n  };\n  const render = (vnode, container, isSVG) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true);\n      }\n    } else {\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG);\n    }\n    flushPreFlushCbs();\n    flushPostFlushCbs();\n    container._vnode = vnode;\n  };\n  const internals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  };\n  let hydrate;\n  let hydrateNode;\n  if (createHydrationFns) {\n    [hydrate, hydrateNode] = createHydrationFns(\n      internals\n    );\n  }\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  };\n}\nfunction toggleRecurse({ effect, update }, allowed) {\n  effect.allowRecurse = update.allowRecurse = allowed;\n}\nfunction needTransition(parentSuspense, transition) {\n  return (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;\n}\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n  const ch1 = n1.children;\n  const ch2 = n2.children;\n  if (shared.isArray(ch1) && shared.isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      const c1 = ch1[i];\n      let c2 = ch2[i];\n      if (c2.shapeFlag & 1 && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === 32) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i]);\n          c2.el = c1.el;\n        }\n        if (!shallow)\n          traverseStaticChildren(c1, c2);\n      }\n      if (c2.type === Text) {\n        c2.el = c1.el;\n      }\n      if (c2.type === Comment && !c2.el) {\n        c2.el = c1.el;\n      }\n    }\n  }\n}\nfunction getSequence(arr) {\n  const p = arr.slice();\n  const result = [0];\n  let i, j, u, v, c;\n  const len = arr.length;\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i];\n    if (arrI !== 0) {\n      j = result[result.length - 1];\n      if (arr[j] < arrI) {\n        p[i] = j;\n        result.push(i);\n        continue;\n      }\n      u = 0;\n      v = result.length - 1;\n      while (u < v) {\n        c = u + v >> 1;\n        if (arr[result[c]] < arrI) {\n          u = c + 1;\n        } else {\n          v = c;\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1];\n        }\n        result[u] = i;\n      }\n    }\n  }\n  u = result.length;\n  v = result[u - 1];\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n  return result;\n}\n\nconst isTeleport = (type) => type.__isTeleport;\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === \"\");\nconst isTargetSVG = (target) => typeof SVGElement !== \"undefined\" && target instanceof SVGElement;\nconst resolveTarget = (props, select) => {\n  const targetSelector = props && props.to;\n  if (shared.isString(targetSelector)) {\n    if (!select) {\n      warn(\n        `Current renderer does not support string target for Teleports. (missing querySelector renderer option)`\n      );\n      return null;\n    } else {\n      const target = select(targetSelector);\n      if (!target) {\n        warn(\n          `Failed to locate Teleport target with selector \"${targetSelector}\". Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree.`\n        );\n      }\n      return target;\n    }\n  } else {\n    if (!targetSelector && !isTeleportDisabled(props)) {\n      warn(`Invalid Teleport target: ${targetSelector}`);\n    }\n    return targetSelector;\n  }\n};\nconst TeleportImpl = {\n  name: \"Teleport\",\n  __isTeleport: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: { insert, querySelector, createText, createComment }\n    } = internals;\n    const disabled = isTeleportDisabled(n2.props);\n    let { shapeFlag, children, dynamicChildren } = n2;\n    if (isHmrUpdating) {\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (n1 == null) {\n      const placeholder = n2.el = createComment(\"teleport start\") ;\n      const mainAnchor = n2.anchor = createComment(\"teleport end\") ;\n      insert(placeholder, container, anchor);\n      insert(mainAnchor, container, anchor);\n      const target = n2.target = resolveTarget(n2.props, querySelector);\n      const targetAnchor = n2.targetAnchor = createText(\"\");\n      if (target) {\n        insert(targetAnchor, target);\n        isSVG = isSVG || isTargetSVG(target);\n      } else if (!disabled) {\n        warn(\"Invalid Teleport target on mount:\", target, `(${typeof target})`);\n      }\n      const mount = (container2, anchor2) => {\n        if (shapeFlag & 16) {\n          mountChildren(\n            children,\n            container2,\n            anchor2,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        }\n      };\n      if (disabled) {\n        mount(container, mainAnchor);\n      } else if (target) {\n        mount(target, targetAnchor);\n      }\n    } else {\n      n2.el = n1.el;\n      const mainAnchor = n2.anchor = n1.anchor;\n      const target = n2.target = n1.target;\n      const targetAnchor = n2.targetAnchor = n1.targetAnchor;\n      const wasDisabled = isTeleportDisabled(n1.props);\n      const currentContainer = wasDisabled ? container : target;\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n      isSVG = isSVG || isTargetSVG(target);\n      if (dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          currentContainer,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds\n        );\n        traverseStaticChildren(n1, n2, true);\n      } else if (!optimized) {\n        patchChildren(\n          n1,\n          n2,\n          currentContainer,\n          currentAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          false\n        );\n      }\n      if (disabled) {\n        if (!wasDisabled) {\n          moveTeleport(\n            n2,\n            container,\n            mainAnchor,\n            internals,\n            1\n          );\n        } else {\n          if (n2.props && n1.props && n2.props.to !== n1.props.to) {\n            n2.props.to = n1.props.to;\n          }\n        }\n      } else {\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = n2.target = resolveTarget(\n            n2.props,\n            querySelector\n          );\n          if (nextTarget) {\n            moveTeleport(\n              n2,\n              nextTarget,\n              null,\n              internals,\n              0\n            );\n          } else {\n            warn(\n              \"Invalid Teleport target on update:\",\n              target,\n              `(${typeof target})`\n            );\n          }\n        } else if (wasDisabled) {\n          moveTeleport(\n            n2,\n            target,\n            targetAnchor,\n            internals,\n            1\n          );\n        }\n      }\n    }\n    updateCssVars(n2);\n  },\n  remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\n    if (target) {\n      hostRemove(targetAnchor);\n    }\n    doRemove && hostRemove(anchor);\n    if (shapeFlag & 16) {\n      const shouldRemove = doRemove || !isTeleportDisabled(props);\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        unmount(\n          child,\n          parentComponent,\n          parentSuspense,\n          shouldRemove,\n          !!child.dynamicChildren\n        );\n      }\n    }\n  },\n  move: moveTeleport,\n  hydrate: hydrateTeleport\n};\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2) {\n  if (moveType === 0) {\n    insert(vnode.targetAnchor, container, parentAnchor);\n  }\n  const { el, anchor, shapeFlag, children, props } = vnode;\n  const isReorder = moveType === 2;\n  if (isReorder) {\n    insert(el, container, parentAnchor);\n  }\n  if (!isReorder || isTeleportDisabled(props)) {\n    if (shapeFlag & 16) {\n      for (let i = 0; i < children.length; i++) {\n        move(\n          children[i],\n          container,\n          parentAnchor,\n          2\n        );\n      }\n    }\n  }\n  if (isReorder) {\n    insert(anchor, container, parentAnchor);\n  }\n}\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {\n  o: { nextSibling, parentNode, querySelector }\n}, hydrateChildren) {\n  const target = vnode.target = resolveTarget(\n    vnode.props,\n    querySelector\n  );\n  if (target) {\n    const targetNode = target._lpa || target.firstChild;\n    if (vnode.shapeFlag & 16) {\n      if (isTeleportDisabled(vnode.props)) {\n        vnode.anchor = hydrateChildren(\n          nextSibling(node),\n          vnode,\n          parentNode(node),\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        vnode.targetAnchor = targetNode;\n      } else {\n        vnode.anchor = nextSibling(node);\n        let targetAnchor = targetNode;\n        while (targetAnchor) {\n          targetAnchor = nextSibling(targetAnchor);\n          if (targetAnchor && targetAnchor.nodeType === 8 && targetAnchor.data === \"teleport anchor\") {\n            vnode.targetAnchor = targetAnchor;\n            target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n            break;\n          }\n        }\n        hydrateChildren(\n          targetNode,\n          vnode,\n          target,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n    updateCssVars(vnode);\n  }\n  return vnode.anchor && nextSibling(vnode.anchor);\n}\nconst Teleport = TeleportImpl;\nfunction updateCssVars(vnode) {\n  const ctx = vnode.ctx;\n  if (ctx && ctx.ut) {\n    let node = vnode.children[0].el;\n    while (node && node !== vnode.targetAnchor) {\n      if (node.nodeType === 1)\n        node.setAttribute(\"data-v-owner\", ctx.uid);\n      node = node.nextSibling;\n    }\n    ctx.ut();\n  }\n}\n\nconst Fragment = Symbol.for(\"v-fgt\");\nconst Text = Symbol.for(\"v-txt\");\nconst Comment = Symbol.for(\"v-cmt\");\nconst Static = Symbol.for(\"v-stc\");\nconst blockStack = [];\nlet currentBlock = null;\nfunction openBlock(disableTracking = false) {\n  blockStack.push(currentBlock = disableTracking ? null : []);\n}\nfunction closeBlock() {\n  blockStack.pop();\n  currentBlock = blockStack[blockStack.length - 1] || null;\n}\nlet isBlockTreeEnabled = 1;\nfunction setBlockTracking(value) {\n  isBlockTreeEnabled += value;\n}\nfunction setupBlock(vnode) {\n  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || shared.EMPTY_ARR : null;\n  closeBlock();\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n  return setupBlock(\n    createBaseVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      shapeFlag,\n      true\n      /* isBlock */\n    )\n  );\n}\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n  return setupBlock(\n    createVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      true\n      /* isBlock: prevent a block from tracking itself */\n    )\n  );\n}\nfunction isVNode(value) {\n  return value ? value.__v_isVNode === true : false;\n}\nfunction isSameVNodeType(n1, n2) {\n  if (n2.shapeFlag & 6 && hmrDirtyComponents.has(n2.type)) {\n    n1.shapeFlag &= ~256;\n    n2.shapeFlag &= ~512;\n    return false;\n  }\n  return n1.type === n2.type && n1.key === n2.key;\n}\nlet vnodeArgsTransformer;\nfunction transformVNodeArgs(transformer) {\n  vnodeArgsTransformer = transformer;\n}\nconst createVNodeWithArgsTransform = (...args) => {\n  return _createVNode(\n    ...vnodeArgsTransformer ? vnodeArgsTransformer(args, currentRenderingInstance) : args\n  );\n};\nconst InternalObjectKey = `__vInternal`;\nconst normalizeKey = ({ key }) => key != null ? key : null;\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}) => {\n  if (typeof ref === \"number\") {\n    ref = \"\" + ref;\n  }\n  return ref != null ? shared.isString(ref) || reactivity.isRef(ref) || shared.isFunction(ref) ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for } : ref : null;\n};\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null,\n    ctx: currentRenderingInstance\n  };\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children);\n    if (shapeFlag & 128) {\n      type.normalize(vnode);\n    }\n  } else if (children) {\n    vnode.shapeFlag |= shared.isString(children) ? 8 : 16;\n  }\n  if (vnode.key !== vnode.key) {\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\n  }\n  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself\n  !isBlockNode && // has current parent block\n  currentBlock && // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the\n  // vnode should not be considered dynamic due to handler caching.\n  vnode.patchFlag !== 32) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nconst createVNode = createVNodeWithArgsTransform ;\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    if (!type) {\n      warn(`Invalid vnode type when creating vnode: ${type}.`);\n    }\n    type = Comment;\n  }\n  if (isVNode(type)) {\n    const cloned = cloneVNode(\n      type,\n      props,\n      true\n      /* mergeRef: true */\n    );\n    if (children) {\n      normalizeChildren(cloned, children);\n    }\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & 6) {\n        currentBlock[currentBlock.indexOf(type)] = cloned;\n      } else {\n        currentBlock.push(cloned);\n      }\n    }\n    cloned.patchFlag |= -2;\n    return cloned;\n  }\n  if (isClassComponent(type)) {\n    type = type.__vccOpts;\n  }\n  if (props) {\n    props = guardReactiveProps(props);\n    let { class: klass, style } = props;\n    if (klass && !shared.isString(klass)) {\n      props.class = shared.normalizeClass(klass);\n    }\n    if (shared.isObject(style)) {\n      if (reactivity.isProxy(style) && !shared.isArray(style)) {\n        style = shared.extend({}, style);\n      }\n      props.style = shared.normalizeStyle(style);\n    }\n  }\n  const shapeFlag = shared.isString(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : shared.isObject(type) ? 4 : shared.isFunction(type) ? 2 : 0;\n  if (shapeFlag & 4 && reactivity.isProxy(type)) {\n    type = reactivity.toRaw(type);\n    warn(\n      `Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with \\`markRaw\\` or using \\`shallowRef\\` instead of \\`ref\\`.`,\n      `\nComponent that was made reactive: `,\n      type\n    );\n  }\n  return createBaseVNode(\n    type,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    shapeFlag,\n    isBlockNode,\n    true\n  );\n}\nfunction guardReactiveProps(props) {\n  if (!props)\n    return null;\n  return reactivity.isProxy(props) || InternalObjectKey in props ? shared.extend({}, props) : props;\n}\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\n  const { props, ref, patchFlag, children } = vnode;\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n  const cloned = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref: extraProps && extraProps.ref ? (\n      // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n      // if the vnode itself already has a ref, cloneVNode will need to merge\n      // the refs so the single vnode can be set on multiple refs\n      mergeRef && ref ? shared.isArray(ref) ? ref.concat(normalizeRef(extraProps)) : [ref, normalizeRef(extraProps)] : normalizeRef(extraProps)\n    ) : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children: patchFlag === -1 && shared.isArray(children) ? children.map(deepCloneVNode) : children,\n    target: vnode.target,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition: vnode.transition,\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor,\n    ctx: vnode.ctx,\n    ce: vnode.ce\n  };\n  return cloned;\n}\nfunction deepCloneVNode(vnode) {\n  const cloned = cloneVNode(vnode);\n  if (shared.isArray(vnode.children)) {\n    cloned.children = vnode.children.map(deepCloneVNode);\n  }\n  return cloned;\n}\nfunction createTextVNode(text = \" \", flag = 0) {\n  return createVNode(Text, null, text, flag);\n}\nfunction createStaticVNode(content, numberOfNodes) {\n  const vnode = createVNode(Static, null, content);\n  vnode.staticCount = numberOfNodes;\n  return vnode;\n}\nfunction createCommentVNode(text = \"\", asBlock = false) {\n  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);\n}\nfunction normalizeVNode(child) {\n  if (child == null || typeof child === \"boolean\") {\n    return createVNode(Comment);\n  } else if (shared.isArray(child)) {\n    return createVNode(\n      Fragment,\n      null,\n      // #3666, avoid reference pollution when reusing vnode\n      child.slice()\n    );\n  } else if (typeof child === \"object\") {\n    return cloneIfMounted(child);\n  } else {\n    return createVNode(Text, null, String(child));\n  }\n}\nfunction cloneIfMounted(child) {\n  return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);\n}\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  const { shapeFlag } = vnode;\n  if (children == null) {\n    children = null;\n  } else if (shared.isArray(children)) {\n    type = 16;\n  } else if (typeof children === \"object\") {\n    if (shapeFlag & (1 | 64)) {\n      const slot = children.default;\n      if (slot) {\n        slot._c && (slot._d = false);\n        normalizeChildren(vnode, slot());\n        slot._c && (slot._d = true);\n      }\n      return;\n    } else {\n      type = 32;\n      const slotFlag = children._;\n      if (!slotFlag && !(InternalObjectKey in children)) {\n        children._ctx = currentRenderingInstance;\n      } else if (slotFlag === 3 && currentRenderingInstance) {\n        if (currentRenderingInstance.slots._ === 1) {\n          children._ = 1;\n        } else {\n          children._ = 2;\n          vnode.patchFlag |= 1024;\n        }\n      }\n    }\n  } else if (shared.isFunction(children)) {\n    children = { default: children, _ctx: currentRenderingInstance };\n    type = 32;\n  } else {\n    children = String(children);\n    if (shapeFlag & 64) {\n      type = 16;\n      children = [createTextVNode(children)];\n    } else {\n      type = 8;\n    }\n  }\n  vnode.children = children;\n  vnode.shapeFlag |= type;\n}\nfunction mergeProps(...args) {\n  const ret = {};\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i];\n    for (const key in toMerge) {\n      if (key === \"class\") {\n        if (ret.class !== toMerge.class) {\n          ret.class = shared.normalizeClass([ret.class, toMerge.class]);\n        }\n      } else if (key === \"style\") {\n        ret.style = shared.normalizeStyle([ret.style, toMerge.style]);\n      } else if (shared.isOn(key)) {\n        const existing = ret[key];\n        const incoming = toMerge[key];\n        if (incoming && existing !== incoming && !(shared.isArray(existing) && existing.includes(incoming))) {\n          ret[key] = existing ? [].concat(existing, incoming) : incoming;\n        }\n      } else if (key !== \"\") {\n        ret[key] = toMerge[key];\n      }\n    }\n  }\n  return ret;\n}\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n  callWithAsyncErrorHandling(hook, instance, 7, [\n    vnode,\n    prevVNode\n  ]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid = 0;\nfunction createComponentInstance(vnode, parent, suspense) {\n  const type = vnode.type;\n  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n  const instance = {\n    uid: uid++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null,\n    // to be immediately set\n    next: null,\n    subTree: null,\n    // will be set synchronously right after creation\n    effect: null,\n    update: null,\n    // will be set synchronously right after creation\n    scope: new reactivity.EffectScope(\n      true\n      /* detached */\n    ),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    accessCache: null,\n    renderCache: [],\n    // local resolved assets\n    components: null,\n    directives: null,\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n    // emit\n    emit: null,\n    // to be set immediately\n    emitted: null,\n    // props default value\n    propsDefaults: shared.EMPTY_OBJ,\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n    // state\n    ctx: shared.EMPTY_OBJ,\n    data: shared.EMPTY_OBJ,\n    props: shared.EMPTY_OBJ,\n    attrs: shared.EMPTY_OBJ,\n    slots: shared.EMPTY_OBJ,\n    refs: shared.EMPTY_OBJ,\n    setupState: shared.EMPTY_OBJ,\n    setupContext: null,\n    attrsProxy: null,\n    slotsProxy: null,\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  };\n  {\n    instance.ctx = createDevRenderContext(instance);\n  }\n  instance.root = parent ? parent.root : instance;\n  instance.emit = emit.bind(null, instance);\n  if (vnode.ce) {\n    vnode.ce(instance);\n  }\n  return instance;\n}\nlet currentInstance = null;\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\nlet internalSetCurrentInstance;\nlet globalCurrentInstanceSetters;\nlet settersKey = \"__VUE_INSTANCE_SETTERS__\";\n{\n  if (!(globalCurrentInstanceSetters = shared.getGlobalThis()[settersKey])) {\n    globalCurrentInstanceSetters = shared.getGlobalThis()[settersKey] = [];\n  }\n  globalCurrentInstanceSetters.push((i) => currentInstance = i);\n  internalSetCurrentInstance = (instance) => {\n    if (globalCurrentInstanceSetters.length > 1) {\n      globalCurrentInstanceSetters.forEach((s) => s(instance));\n    } else {\n      globalCurrentInstanceSetters[0](instance);\n    }\n  };\n}\nconst setCurrentInstance = (instance) => {\n  internalSetCurrentInstance(instance);\n  instance.scope.on();\n};\nconst unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off();\n  internalSetCurrentInstance(null);\n};\nconst isBuiltInTag = /* @__PURE__ */ shared.makeMap(\"slot,component\");\nfunction validateComponentName(name, config) {\n  const appIsNativeTag = config.isNativeTag || shared.NO;\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\n    warn(\n      \"Do not use built-in or reserved HTML elements as component id: \" + name\n    );\n  }\n}\nfunction isStatefulComponent(instance) {\n  return instance.vnode.shapeFlag & 4;\n}\nlet isInSSRComponentSetup = false;\nfunction setupComponent(instance, isSSR = false) {\n  isInSSRComponentSetup = isSSR;\n  const { props, children } = instance.vnode;\n  const isStateful = isStatefulComponent(instance);\n  initProps(instance, props, isStateful, isSSR);\n  initSlots(instance, children);\n  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;\n  isInSSRComponentSetup = false;\n  return setupResult;\n}\nfunction setupStatefulComponent(instance, isSSR) {\n  var _a;\n  const Component = instance.type;\n  {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config);\n    }\n    if (Component.components) {\n      const names = Object.keys(Component.components);\n      for (let i = 0; i < names.length; i++) {\n        validateComponentName(names[i], instance.appContext.config);\n      }\n    }\n    if (Component.directives) {\n      const names = Object.keys(Component.directives);\n      for (let i = 0; i < names.length; i++) {\n        validateDirectiveName(names[i]);\n      }\n    }\n    if (Component.compilerOptions && isRuntimeOnly()) {\n      warn(\n        `\"compilerOptions\" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.`\n      );\n    }\n  }\n  instance.accessCache = /* @__PURE__ */ Object.create(null);\n  instance.proxy = reactivity.markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\n  {\n    exposePropsOnRenderContext(instance);\n  }\n  const { setup } = Component;\n  if (setup) {\n    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;\n    setCurrentInstance(instance);\n    reactivity.pauseTracking();\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      0,\n      [reactivity.shallowReadonly(instance.props) , setupContext]\n    );\n    reactivity.resetTracking();\n    unsetCurrentInstance();\n    if (shared.isPromise(setupResult)) {\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n      if (isSSR) {\n        return setupResult.then((resolvedResult) => {\n          handleSetupResult(instance, resolvedResult, isSSR);\n        }).catch((e) => {\n          handleError(e, instance, 0);\n        });\n      } else {\n        instance.asyncDep = setupResult;\n        if (!instance.suspense) {\n          const name = (_a = Component.name) != null ? _a : \"Anonymous\";\n          warn(\n            `Component <${name}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`\n          );\n        }\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR);\n    }\n  } else {\n    finishComponentSetup(instance, isSSR);\n  }\n}\nfunction handleSetupResult(instance, setupResult, isSSR) {\n  if (shared.isFunction(setupResult)) {\n    if (instance.type.__ssrInlineRender) {\n      instance.ssrRender = setupResult;\n    } else {\n      instance.render = setupResult;\n    }\n  } else if (shared.isObject(setupResult)) {\n    if (isVNode(setupResult)) {\n      warn(\n        `setup() should not return VNodes directly - return a render function instead.`\n      );\n    }\n    {\n      instance.devtoolsRawSetupState = setupResult;\n    }\n    instance.setupState = reactivity.proxyRefs(setupResult);\n    {\n      exposeSetupStateOnRenderContext(instance);\n    }\n  } else if (setupResult !== void 0) {\n    warn(\n      `setup() should return an object. Received: ${setupResult === null ? \"null\" : typeof setupResult}`\n    );\n  }\n  finishComponentSetup(instance, isSSR);\n}\nlet compile;\nlet installWithProxy;\nfunction registerRuntimeCompiler(_compile) {\n  compile = _compile;\n  installWithProxy = (i) => {\n    if (i.render._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n    }\n  };\n}\nconst isRuntimeOnly = () => !compile;\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n  const Component = instance.type;\n  if (!instance.render) {\n    if (!isSSR && compile && !Component.render) {\n      const template = Component.template || resolveMergedOptions(instance).template;\n      if (template) {\n        {\n          startMeasure(instance, `compile`);\n        }\n        const { isCustomElement, compilerOptions } = instance.appContext.config;\n        const { delimiters, compilerOptions: componentCompilerOptions } = Component;\n        const finalCompilerOptions = shared.extend(\n          shared.extend(\n            {\n              isCustomElement,\n              delimiters\n            },\n            compilerOptions\n          ),\n          componentCompilerOptions\n        );\n        Component.render = compile(template, finalCompilerOptions);\n        {\n          endMeasure(instance, `compile`);\n        }\n      }\n    }\n    instance.render = Component.render || shared.NOOP;\n    if (installWithProxy) {\n      installWithProxy(instance);\n    }\n  }\n  {\n    setCurrentInstance(instance);\n    reactivity.pauseTracking();\n    try {\n      applyOptions(instance);\n    } finally {\n      reactivity.resetTracking();\n      unsetCurrentInstance();\n    }\n  }\n  if (!Component.render && instance.render === shared.NOOP && !isSSR) {\n    if (!compile && Component.template) {\n      warn(\n        `Component provided template option but runtime compilation is not supported in this build of Vue.` + (``)\n        /* should not happen */\n      );\n    } else {\n      warn(`Component is missing template or render function.`);\n    }\n  }\n}\nfunction getAttrsProxy(instance) {\n  return instance.attrsProxy || (instance.attrsProxy = new Proxy(\n    instance.attrs,\n    {\n      get(target, key) {\n        markAttrsAccessed();\n        reactivity.track(instance, \"get\", \"$attrs\");\n        return target[key];\n      },\n      set() {\n        warn(`setupContext.attrs is readonly.`);\n        return false;\n      },\n      deleteProperty() {\n        warn(`setupContext.attrs is readonly.`);\n        return false;\n      }\n    } \n  ));\n}\nfunction getSlotsProxy(instance) {\n  return instance.slotsProxy || (instance.slotsProxy = new Proxy(instance.slots, {\n    get(target, key) {\n      reactivity.track(instance, \"get\", \"$slots\");\n      return target[key];\n    }\n  }));\n}\nfunction createSetupContext(instance) {\n  const expose = (exposed) => {\n    {\n      if (instance.exposed) {\n        warn(`expose() should be called only once per setup().`);\n      }\n      if (exposed != null) {\n        let exposedType = typeof exposed;\n        if (exposedType === \"object\") {\n          if (shared.isArray(exposed)) {\n            exposedType = \"array\";\n          } else if (reactivity.isRef(exposed)) {\n            exposedType = \"ref\";\n          }\n        }\n        if (exposedType !== \"object\") {\n          warn(\n            `expose() should be passed a plain object, received ${exposedType}.`\n          );\n        }\n      }\n    }\n    instance.exposed = exposed || {};\n  };\n  {\n    return Object.freeze({\n      get attrs() {\n        return getAttrsProxy(instance);\n      },\n      get slots() {\n        return getSlotsProxy(instance);\n      },\n      get emit() {\n        return (event, ...args) => instance.emit(event, ...args);\n      },\n      expose\n    });\n  }\n}\nfunction getExposeProxy(instance) {\n  if (instance.exposed) {\n    return instance.exposeProxy || (instance.exposeProxy = new Proxy(reactivity.proxyRefs(reactivity.markRaw(instance.exposed)), {\n      get(target, key) {\n        if (key in target) {\n          return target[key];\n        } else if (key in publicPropertiesMap) {\n          return publicPropertiesMap[key](instance);\n        }\n      },\n      has(target, key) {\n        return key in target || key in publicPropertiesMap;\n      }\n    }));\n  }\n}\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str) => str.replace(classifyRE, (c) => c.toUpperCase()).replace(/[-_]/g, \"\");\nfunction getComponentName(Component, includeInferred = true) {\n  return shared.isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;\n}\nfunction formatComponentName(instance, Component, isRoot = false) {\n  let name = getComponentName(Component);\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n    if (match) {\n      name = match[1];\n    }\n  }\n  if (!name && instance && instance.parent) {\n    const inferFromRegistry = (registry) => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key;\n        }\n      }\n    };\n    name = inferFromRegistry(\n      instance.components || instance.parent.type.components\n    ) || inferFromRegistry(instance.appContext.components);\n  }\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\nfunction isClassComponent(value) {\n  return shared.isFunction(value) && \"__vccOpts\" in value;\n}\n\nconst computed = (getterOrOptions, debugOptions) => {\n  return reactivity.computed(getterOrOptions, debugOptions, isInSSRComponentSetup);\n};\n\nfunction h(type, propsOrChildren, children) {\n  const l = arguments.length;\n  if (l === 2) {\n    if (shared.isObject(propsOrChildren) && !shared.isArray(propsOrChildren)) {\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren]);\n      }\n      return createVNode(type, propsOrChildren);\n    } else {\n      return createVNode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2);\n    } else if (l === 3 && isVNode(children)) {\n      children = [children];\n    }\n    return createVNode(type, propsOrChildren, children);\n  }\n}\n\nconst ssrContextKey = Symbol.for(\"v-scx\");\nconst useSSRContext = () => {\n  {\n    const ctx = inject(ssrContextKey);\n    if (!ctx) {\n      warn(\n        `Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build.`\n      );\n    }\n    return ctx;\n  }\n};\n\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\n\nfunction initCustomFormatter() {\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  const vueStyle = { style: \"color:#3ba776\" };\n  const numberStyle = { style: \"color:#0b1bc9\" };\n  const stringStyle = { style: \"color:#b62e24\" };\n  const keywordStyle = { style: \"color:#9d288c\" };\n  const formatter = {\n    header(obj) {\n      if (!shared.isObject(obj)) {\n        return null;\n      }\n      if (obj.__isVue) {\n        return [\"div\", vueStyle, `VueInstance`];\n      } else if (reactivity.isRef(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, genRefFlag(obj)],\n          \"<\",\n          formatValue(obj.value),\n          `>`\n        ];\n      } else if (reactivity.isReactive(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, isShallow(obj) ? \"ShallowReactive\" : \"Reactive\"],\n          \"<\",\n          formatValue(obj),\n          `>${reactivity.isReadonly(obj) ? ` (readonly)` : ``}`\n        ];\n      } else if (reactivity.isReadonly(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, isShallow(obj) ? \"ShallowReadonly\" : \"Readonly\"],\n          \"<\",\n          formatValue(obj),\n          \">\"\n        ];\n      }\n      return null;\n    },\n    hasBody(obj) {\n      return obj && obj.__isVue;\n    },\n    body(obj) {\n      if (obj && obj.__isVue) {\n        return [\n          \"div\",\n          {},\n          ...formatInstance(obj.$)\n        ];\n      }\n    }\n  };\n  function formatInstance(instance) {\n    const blocks = [];\n    if (instance.type.props && instance.props) {\n      blocks.push(createInstanceBlock(\"props\", reactivity.toRaw(instance.props)));\n    }\n    if (instance.setupState !== shared.EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"setup\", instance.setupState));\n    }\n    if (instance.data !== shared.EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"data\", reactivity.toRaw(instance.data)));\n    }\n    const computed = extractKeys(instance, \"computed\");\n    if (computed) {\n      blocks.push(createInstanceBlock(\"computed\", computed));\n    }\n    const injected = extractKeys(instance, \"inject\");\n    if (injected) {\n      blocks.push(createInstanceBlock(\"injected\", injected));\n    }\n    blocks.push([\n      \"div\",\n      {},\n      [\n        \"span\",\n        {\n          style: keywordStyle.style + \";opacity:0.66\"\n        },\n        \"$ (internal): \"\n      ],\n      [\"object\", { object: instance }]\n    ]);\n    return blocks;\n  }\n  function createInstanceBlock(type, target) {\n    target = shared.extend({}, target);\n    if (!Object.keys(target).length) {\n      return [\"span\", {}];\n    }\n    return [\n      \"div\",\n      { style: \"line-height:1.25em;margin-bottom:0.6em\" },\n      [\n        \"div\",\n        {\n          style: \"color:#476582\"\n        },\n        type\n      ],\n      [\n        \"div\",\n        {\n          style: \"padding-left:1.25em\"\n        },\n        ...Object.keys(target).map((key) => {\n          return [\n            \"div\",\n            {},\n            [\"span\", keywordStyle, key + \": \"],\n            formatValue(target[key], false)\n          ];\n        })\n      ]\n    ];\n  }\n  function formatValue(v, asRaw = true) {\n    if (typeof v === \"number\") {\n      return [\"span\", numberStyle, v];\n    } else if (typeof v === \"string\") {\n      return [\"span\", stringStyle, JSON.stringify(v)];\n    } else if (typeof v === \"boolean\") {\n      return [\"span\", keywordStyle, v];\n    } else if (shared.isObject(v)) {\n      return [\"object\", { object: asRaw ? reactivity.toRaw(v) : v }];\n    } else {\n      return [\"span\", stringStyle, String(v)];\n    }\n  }\n  function extractKeys(instance, type) {\n    const Comp = instance.type;\n    if (shared.isFunction(Comp)) {\n      return;\n    }\n    const extracted = {};\n    for (const key in instance.ctx) {\n      if (isKeyOfType(Comp, key, type)) {\n        extracted[key] = instance.ctx[key];\n      }\n    }\n    return extracted;\n  }\n  function isKeyOfType(Comp, key, type) {\n    const opts = Comp[type];\n    if (shared.isArray(opts) && opts.includes(key) || shared.isObject(opts) && key in opts) {\n      return true;\n    }\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n      return true;\n    }\n    if (Comp.mixins && Comp.mixins.some((m) => isKeyOfType(m, key, type))) {\n      return true;\n    }\n  }\n  function genRefFlag(v) {\n    if (isShallow(v)) {\n      return `ShallowRef`;\n    }\n    if (v.effect) {\n      return `ComputedRef`;\n    }\n    return `Ref`;\n  }\n  if (window.devtoolsFormatters) {\n    window.devtoolsFormatters.push(formatter);\n  } else {\n    window.devtoolsFormatters = [formatter];\n  }\n}\n\nfunction withMemo(memo, render, cache, index) {\n  const cached = cache[index];\n  if (cached && isMemoSame(cached, memo)) {\n    return cached;\n  }\n  const ret = render();\n  ret.memo = memo.slice();\n  return cache[index] = ret;\n}\nfunction isMemoSame(cached, memo) {\n  const prev = cached.memo;\n  if (prev.length != memo.length) {\n    return false;\n  }\n  for (let i = 0; i < prev.length; i++) {\n    if (shared.hasChanged(prev[i], memo[i])) {\n      return false;\n    }\n  }\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached);\n  }\n  return true;\n}\n\nconst version = \"3.3.9\";\nconst _ssrUtils = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode: isVNode,\n  normalizeVNode\n};\nconst ssrUtils = _ssrUtils ;\nconst resolveFilter = null;\nconst compatUtils = null;\n\nexports.EffectScope = reactivity.EffectScope;\nexports.ReactiveEffect = reactivity.ReactiveEffect;\nexports.customRef = reactivity.customRef;\nexports.effect = reactivity.effect;\nexports.effectScope = reactivity.effectScope;\nexports.getCurrentScope = reactivity.getCurrentScope;\nexports.isProxy = reactivity.isProxy;\nexports.isReactive = reactivity.isReactive;\nexports.isReadonly = reactivity.isReadonly;\nexports.isRef = reactivity.isRef;\nexports.isShallow = reactivity.isShallow;\nexports.markRaw = reactivity.markRaw;\nexports.onScopeDispose = reactivity.onScopeDispose;\nexports.proxyRefs = reactivity.proxyRefs;\nexports.reactive = reactivity.reactive;\nexports.readonly = reactivity.readonly;\nexports.ref = reactivity.ref;\nexports.shallowReactive = reactivity.shallowReactive;\nexports.shallowReadonly = reactivity.shallowReadonly;\nexports.shallowRef = reactivity.shallowRef;\nexports.stop = reactivity.stop;\nexports.toRaw = reactivity.toRaw;\nexports.toRef = reactivity.toRef;\nexports.toRefs = reactivity.toRefs;\nexports.toValue = reactivity.toValue;\nexports.triggerRef = reactivity.triggerRef;\nexports.unref = reactivity.unref;\nexports.camelize = shared.camelize;\nexports.capitalize = shared.capitalize;\nexports.normalizeClass = shared.normalizeClass;\nexports.normalizeProps = shared.normalizeProps;\nexports.normalizeStyle = shared.normalizeStyle;\nexports.toDisplayString = shared.toDisplayString;\nexports.toHandlerKey = shared.toHandlerKey;\nexports.BaseTransition = BaseTransition;\nexports.BaseTransitionPropsValidators = BaseTransitionPropsValidators;\nexports.Comment = Comment;\nexports.Fragment = Fragment;\nexports.KeepAlive = KeepAlive;\nexports.Static = Static;\nexports.Suspense = Suspense;\nexports.Teleport = Teleport;\nexports.Text = Text;\nexports.assertNumber = assertNumber;\nexports.callWithAsyncErrorHandling = callWithAsyncErrorHandling;\nexports.callWithErrorHandling = callWithErrorHandling;\nexports.cloneVNode = cloneVNode;\nexports.compatUtils = compatUtils;\nexports.computed = computed;\nexports.createBlock = createBlock;\nexports.createCommentVNode = createCommentVNode;\nexports.createElementBlock = createElementBlock;\nexports.createElementVNode = createBaseVNode;\nexports.createHydrationRenderer = createHydrationRenderer;\nexports.createPropsRestProxy = createPropsRestProxy;\nexports.createRenderer = createRenderer;\nexports.createSlots = createSlots;\nexports.createStaticVNode = createStaticVNode;\nexports.createTextVNode = createTextVNode;\nexports.createVNode = createVNode;\nexports.defineAsyncComponent = defineAsyncComponent;\nexports.defineComponent = defineComponent;\nexports.defineEmits = defineEmits;\nexports.defineExpose = defineExpose;\nexports.defineModel = defineModel;\nexports.defineOptions = defineOptions;\nexports.defineProps = defineProps;\nexports.defineSlots = defineSlots;\nexports.getCurrentInstance = getCurrentInstance;\nexports.getTransitionRawChildren = getTransitionRawChildren;\nexports.guardReactiveProps = guardReactiveProps;\nexports.h = h;\nexports.handleError = handleError;\nexports.hasInjectionContext = hasInjectionContext;\nexports.initCustomFormatter = initCustomFormatter;\nexports.inject = inject;\nexports.isMemoSame = isMemoSame;\nexports.isRuntimeOnly = isRuntimeOnly;\nexports.isVNode = isVNode;\nexports.mergeDefaults = mergeDefaults;\nexports.mergeModels = mergeModels;\nexports.mergeProps = mergeProps;\nexports.nextTick = nextTick;\nexports.onActivated = onActivated;\nexports.onBeforeMount = onBeforeMount;\nexports.onBeforeUnmount = onBeforeUnmount;\nexports.onBeforeUpdate = onBeforeUpdate;\nexports.onDeactivated = onDeactivated;\nexports.onErrorCaptured = onErrorCaptured;\nexports.onMounted = onMounted;\nexports.onRenderTracked = onRenderTracked;\nexports.onRenderTriggered = onRenderTriggered;\nexports.onServerPrefetch = onServerPrefetch;\nexports.onUnmounted = onUnmounted;\nexports.onUpdated = onUpdated;\nexports.openBlock = openBlock;\nexports.popScopeId = popScopeId;\nexports.provide = provide;\nexports.pushScopeId = pushScopeId;\nexports.queuePostFlushCb = queuePostFlushCb;\nexports.registerRuntimeCompiler = registerRuntimeCompiler;\nexports.renderList = renderList;\nexports.renderSlot = renderSlot;\nexports.resolveComponent = resolveComponent;\nexports.resolveDirective = resolveDirective;\nexports.resolveDynamicComponent = resolveDynamicComponent;\nexports.resolveFilter = resolveFilter;\nexports.resolveTransitionHooks = resolveTransitionHooks;\nexports.setBlockTracking = setBlockTracking;\nexports.setDevtoolsHook = setDevtoolsHook;\nexports.setTransitionHooks = setTransitionHooks;\nexports.ssrContextKey = ssrContextKey;\nexports.ssrUtils = ssrUtils;\nexports.toHandlers = toHandlers;\nexports.transformVNodeArgs = transformVNodeArgs;\nexports.useAttrs = useAttrs;\nexports.useModel = useModel;\nexports.useSSRContext = useSSRContext;\nexports.useSlots = useSlots;\nexports.useTransitionState = useTransitionState;\nexports.version = version;\nexports.warn = warn;\nexports.watch = watch;\nexports.watchEffect = watchEffect;\nexports.watchPostEffect = watchPostEffect;\nexports.watchSyncEffect = watchSyncEffect;\nexports.withAsyncContext = withAsyncContext;\nexports.withCtx = withCtx;\nexports.withDefaults = withDefaults;\nexports.withDirectives = withDirectives;\nexports.withMemo = withMemo;\nexports.withScopeId = withScopeId;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/runtime-core.cjs.prod.js')\n} else {\n  module.exports = require('./dist/runtime-core.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar runtimeCore = require('@vue/runtime-core');\nvar shared = require('@vue/shared');\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\nconst doc = typeof document !== \"undefined\" ? document : null;\nconst templateContainer = doc && /* @__PURE__ */ doc.createElement(\"template\");\nconst nodeOps = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null);\n  },\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  createElement: (tag, isSVG, is, props) => {\n    const el = isSVG ? doc.createElementNS(svgNS, tag) : doc.createElement(tag, is ? { is } : void 0);\n    if (tag === \"select\" && props && props.multiple != null) {\n      el.setAttribute(\"multiple\", props.multiple);\n    }\n    return el;\n  },\n  createText: (text) => doc.createTextNode(text),\n  createComment: (text) => doc.createComment(text),\n  setText: (node, text) => {\n    node.nodeValue = text;\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  parentNode: (node) => node.parentNode,\n  nextSibling: (node) => node.nextSibling,\n  querySelector: (selector) => doc.querySelector(selector),\n  setScopeId(el, id) {\n    el.setAttribute(id, \"\");\n  },\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, isSVG, start, end) {\n    const before = anchor ? anchor.previousSibling : parent.lastChild;\n    if (start && (start === end || start.nextSibling)) {\n      while (true) {\n        parent.insertBefore(start.cloneNode(true), anchor);\n        if (start === end || !(start = start.nextSibling))\n          break;\n      }\n    } else {\n      templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\n      const template = templateContainer.content;\n      if (isSVG) {\n        const wrapper = template.firstChild;\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild);\n        }\n        template.removeChild(wrapper);\n      }\n      parent.insertBefore(template, anchor);\n    }\n    return [\n      // first\n      before ? before.nextSibling : parent.firstChild,\n      // last\n      anchor ? anchor.previousSibling : parent.lastChild\n    ];\n  }\n};\n\nconst TRANSITION = \"transition\";\nconst ANIMATION = \"animation\";\nconst vtcKey = Symbol(\"_vtc\");\nconst Transition = (props, { slots }) => runtimeCore.h(runtimeCore.BaseTransition, resolveTransitionProps(props), slots);\nTransition.displayName = \"Transition\";\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String\n};\nconst TransitionPropsValidators = Transition.props = /* @__PURE__ */ shared.extend(\n  {},\n  runtimeCore.BaseTransitionPropsValidators,\n  DOMTransitionPropsValidators\n);\nconst callHook = (hook, args = []) => {\n  if (shared.isArray(hook)) {\n    hook.forEach((h2) => h2(...args));\n  } else if (hook) {\n    hook(...args);\n  }\n};\nconst hasExplicitCallback = (hook) => {\n  return hook ? shared.isArray(hook) ? hook.some((h2) => h2.length > 1) : hook.length > 1 : false;\n};\nfunction resolveTransitionProps(rawProps) {\n  const baseProps = {};\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      baseProps[key] = rawProps[key];\n    }\n  }\n  if (rawProps.css === false) {\n    return baseProps;\n  }\n  const {\n    name = \"v\",\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`\n  } = rawProps;\n  const durations = normalizeDuration(duration);\n  const enterDuration = durations && durations[0];\n  const leaveDuration = durations && durations[1];\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled\n  } = baseProps;\n  const finishEnter = (el, isAppear, done) => {\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n    done && done();\n  };\n  const finishLeave = (el, done) => {\n    el._isLeaving = false;\n    removeTransitionClass(el, leaveFromClass);\n    removeTransitionClass(el, leaveToClass);\n    removeTransitionClass(el, leaveActiveClass);\n    done && done();\n  };\n  const makeEnterHook = (isAppear) => {\n    return (el, done) => {\n      const hook = isAppear ? onAppear : onEnter;\n      const resolve = () => finishEnter(el, isAppear, done);\n      callHook(hook, [el, resolve]);\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve);\n        }\n      });\n    };\n  };\n  return shared.extend(baseProps, {\n    onBeforeEnter(el) {\n      callHook(onBeforeEnter, [el]);\n      addTransitionClass(el, enterFromClass);\n      addTransitionClass(el, enterActiveClass);\n    },\n    onBeforeAppear(el) {\n      callHook(onBeforeAppear, [el]);\n      addTransitionClass(el, appearFromClass);\n      addTransitionClass(el, appearActiveClass);\n    },\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n    onLeave(el, done) {\n      el._isLeaving = true;\n      const resolve = () => finishLeave(el, done);\n      addTransitionClass(el, leaveFromClass);\n      forceReflow();\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(() => {\n        if (!el._isLeaving) {\n          return;\n        }\n        removeTransitionClass(el, leaveFromClass);\n        addTransitionClass(el, leaveToClass);\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve);\n        }\n      });\n      callHook(onLeave, [el, resolve]);\n    },\n    onEnterCancelled(el) {\n      finishEnter(el, false);\n      callHook(onEnterCancelled, [el]);\n    },\n    onAppearCancelled(el) {\n      finishEnter(el, true);\n      callHook(onAppearCancelled, [el]);\n    },\n    onLeaveCancelled(el) {\n      finishLeave(el);\n      callHook(onLeaveCancelled, [el]);\n    }\n  });\n}\nfunction normalizeDuration(duration) {\n  if (duration == null) {\n    return null;\n  } else if (shared.isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)];\n  } else {\n    const n = NumberOf(duration);\n    return [n, n];\n  }\n}\nfunction NumberOf(val) {\n  const res = shared.toNumber(val);\n  {\n    runtimeCore.assertNumber(res, \"<transition> explicit duration\");\n  }\n  return res;\n}\nfunction addTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.add(c));\n  (el[vtcKey] || (el[vtcKey] = /* @__PURE__ */ new Set())).add(cls);\n}\nfunction removeTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.remove(c));\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.delete(cls);\n    if (!_vtc.size) {\n      el[vtcKey] = void 0;\n    }\n  }\n}\nfunction nextFrame(cb) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb);\n  });\n}\nlet endId = 0;\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n  const id = el._endId = ++endId;\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve();\n    }\n  };\n  if (explicitTimeout) {\n    return setTimeout(resolveIfNotStale, explicitTimeout);\n  }\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n  if (!type) {\n    return resolve();\n  }\n  const endEvent = type + \"end\";\n  let ended = 0;\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd);\n    resolveIfNotStale();\n  };\n  const onEnd = (e) => {\n    if (e.target === el && ++ended >= propCount) {\n      end();\n    }\n  };\n  setTimeout(() => {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(endEvent, onEnd);\n}\nfunction getTransitionInfo(el, expectedType) {\n  const styles = window.getComputedStyle(el);\n  const getStyleProperties = (key) => (styles[key] || \"\").split(\", \");\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n  const animationTimeout = getTimeout(animationDelays, animationDurations);\n  let type = null;\n  let timeout = 0;\n  let propCount = 0;\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n  const hasTransform = type === TRANSITION && /\\b(transform|all)(,|$)/.test(\n    getStyleProperties(`${TRANSITION}Property`).toString()\n  );\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  };\n}\nfunction getTimeout(delays, durations) {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\nfunction toMs(s) {\n  if (s === \"auto\")\n    return 0;\n  return Number(s.slice(0, -1).replace(\",\", \".\")) * 1e3;\n}\nfunction forceReflow() {\n  return document.body.offsetHeight;\n}\n\nfunction patchClass(el, value, isSVG) {\n  const transitionClasses = el[vtcKey];\n  if (transitionClasses) {\n    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(\" \");\n  }\n  if (value == null) {\n    el.removeAttribute(\"class\");\n  } else if (isSVG) {\n    el.setAttribute(\"class\", value);\n  } else {\n    el.className = value;\n  }\n}\n\nconst vShowOldKey = Symbol(\"_vod\");\nconst vShow = {\n  beforeMount(el, { value }, { transition }) {\n    el[vShowOldKey] = el.style.display === \"none\" ? \"\" : el.style.display;\n    if (transition && value) {\n      transition.beforeEnter(el);\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  mounted(el, { value }, { transition }) {\n    if (transition && value) {\n      transition.enter(el);\n    }\n  },\n  updated(el, { value, oldValue }, { transition }) {\n    if (!value === !oldValue)\n      return;\n    if (transition) {\n      if (value) {\n        transition.beforeEnter(el);\n        setDisplay(el, true);\n        transition.enter(el);\n      } else {\n        transition.leave(el, () => {\n          setDisplay(el, false);\n        });\n      }\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  beforeUnmount(el, { value }) {\n    setDisplay(el, value);\n  }\n};\nfunction setDisplay(el, value) {\n  el.style.display = value ? el[vShowOldKey] : \"none\";\n}\nfunction initVShowForSSR() {\n  vShow.getSSRProps = ({ value }) => {\n    if (!value) {\n      return { style: { display: \"none\" } };\n    }\n  };\n}\n\nfunction patchStyle(el, prev, next) {\n  const style = el.style;\n  const isCssString = shared.isString(next);\n  if (next && !isCssString) {\n    if (prev && !shared.isString(prev)) {\n      for (const key in prev) {\n        if (next[key] == null) {\n          setStyle(style, key, \"\");\n        }\n      }\n    }\n    for (const key in next) {\n      setStyle(style, key, next[key]);\n    }\n  } else {\n    const currentDisplay = style.display;\n    if (isCssString) {\n      if (prev !== next) {\n        style.cssText = next;\n      }\n    } else if (prev) {\n      el.removeAttribute(\"style\");\n    }\n    if (vShowOldKey in el) {\n      style.display = currentDisplay;\n    }\n  }\n}\nconst semicolonRE = /[^\\\\];\\s*$/;\nconst importantRE = /\\s*!important$/;\nfunction setStyle(style, name, val) {\n  if (shared.isArray(val)) {\n    val.forEach((v) => setStyle(style, name, v));\n  } else {\n    if (val == null)\n      val = \"\";\n    {\n      if (semicolonRE.test(val)) {\n        runtimeCore.warn(\n          `Unexpected semicolon at the end of '${name}' style value: '${val}'`\n        );\n      }\n    }\n    if (name.startsWith(\"--\")) {\n      style.setProperty(name, val);\n    } else {\n      const prefixed = autoPrefix(style, name);\n      if (importantRE.test(val)) {\n        style.setProperty(\n          shared.hyphenate(prefixed),\n          val.replace(importantRE, \"\"),\n          \"important\"\n        );\n      } else {\n        style[prefixed] = val;\n      }\n    }\n  }\n}\nconst prefixes = [\"Webkit\", \"Moz\", \"ms\"];\nconst prefixCache = {};\nfunction autoPrefix(style, rawName) {\n  const cached = prefixCache[rawName];\n  if (cached) {\n    return cached;\n  }\n  let name = runtimeCore.camelize(rawName);\n  if (name !== \"filter\" && name in style) {\n    return prefixCache[rawName] = name;\n  }\n  name = shared.capitalize(name);\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name;\n    if (prefixed in style) {\n      return prefixCache[rawName] = prefixed;\n    }\n  }\n  return rawName;\n}\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nfunction patchAttr(el, key, value, isSVG, instance) {\n  if (isSVG && key.startsWith(\"xlink:\")) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    const isBoolean = shared.isSpecialBooleanAttr(key);\n    if (value == null || isBoolean && !shared.includeBooleanAttr(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, isBoolean ? \"\" : value);\n    }\n  }\n}\n\nfunction patchDOMProp(el, key, value, prevChildren, parentComponent, parentSuspense, unmountChildren) {\n  if (key === \"innerHTML\" || key === \"textContent\") {\n    if (prevChildren) {\n      unmountChildren(prevChildren, parentComponent, parentSuspense);\n    }\n    el[key] = value == null ? \"\" : value;\n    return;\n  }\n  const tag = el.tagName;\n  if (key === \"value\" && tag !== \"PROGRESS\" && // custom elements may use _value internally\n  !tag.includes(\"-\")) {\n    el._value = value;\n    const oldValue = tag === \"OPTION\" ? el.getAttribute(\"value\") : el.value;\n    const newValue = value == null ? \"\" : value;\n    if (oldValue !== newValue) {\n      el.value = newValue;\n    }\n    if (value == null) {\n      el.removeAttribute(key);\n    }\n    return;\n  }\n  let needRemove = false;\n  if (value === \"\" || value == null) {\n    const type = typeof el[key];\n    if (type === \"boolean\") {\n      value = shared.includeBooleanAttr(value);\n    } else if (value == null && type === \"string\") {\n      value = \"\";\n      needRemove = true;\n    } else if (type === \"number\") {\n      value = 0;\n      needRemove = true;\n    }\n  }\n  try {\n    el[key] = value;\n  } catch (e) {\n    if (!needRemove) {\n      runtimeCore.warn(\n        `Failed setting prop \"${key}\" on <${tag.toLowerCase()}>: value ${value} is invalid.`,\n        e\n      );\n    }\n  }\n  needRemove && el.removeAttribute(key);\n}\n\nfunction addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\nfunction removeEventListener(el, event, handler, options) {\n  el.removeEventListener(event, handler, options);\n}\nconst veiKey = Symbol(\"_vei\");\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n  const invokers = el[veiKey] || (el[veiKey] = {});\n  const existingInvoker = invokers[rawName];\n  if (nextValue && existingInvoker) {\n    existingInvoker.value = nextValue;\n  } else {\n    const [name, options] = parseName(rawName);\n    if (nextValue) {\n      const invoker = invokers[rawName] = createInvoker(nextValue, instance);\n      addEventListener(el, name, invoker, options);\n    } else if (existingInvoker) {\n      removeEventListener(el, name, existingInvoker, options);\n      invokers[rawName] = void 0;\n    }\n  }\n}\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\nfunction parseName(name) {\n  let options;\n  if (optionsModifierRE.test(name)) {\n    options = {};\n    let m;\n    while (m = name.match(optionsModifierRE)) {\n      name = name.slice(0, name.length - m[0].length);\n      options[m[0].toLowerCase()] = true;\n    }\n  }\n  const event = name[2] === \":\" ? name.slice(3) : shared.hyphenate(name.slice(2));\n  return [event, options];\n}\nlet cachedNow = 0;\nconst p = /* @__PURE__ */ Promise.resolve();\nconst getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());\nfunction createInvoker(initialValue, instance) {\n  const invoker = (e) => {\n    if (!e._vts) {\n      e._vts = Date.now();\n    } else if (e._vts <= invoker.attached) {\n      return;\n    }\n    runtimeCore.callWithAsyncErrorHandling(\n      patchStopImmediatePropagation(e, invoker.value),\n      instance,\n      5,\n      [e]\n    );\n  };\n  invoker.value = initialValue;\n  invoker.attached = getNow();\n  return invoker;\n}\nfunction patchStopImmediatePropagation(e, value) {\n  if (shared.isArray(value)) {\n    const originalStop = e.stopImmediatePropagation;\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e);\n      e._stopped = true;\n    };\n    return value.map((fn) => (e2) => !e2._stopped && fn && fn(e2));\n  } else {\n    return value;\n  }\n}\n\nconst nativeOnRE = /^on[a-z]/;\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\n  if (key === \"class\") {\n    patchClass(el, nextValue, isSVG);\n  } else if (key === \"style\") {\n    patchStyle(el, prevValue, nextValue);\n  } else if (shared.isOn(key)) {\n    if (!shared.isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent);\n    }\n  } else if (key[0] === \".\" ? (key = key.slice(1), true) : key[0] === \"^\" ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {\n    patchDOMProp(\n      el,\n      key,\n      nextValue,\n      prevChildren,\n      parentComponent,\n      parentSuspense,\n      unmountChildren\n    );\n  } else {\n    if (key === \"true-value\") {\n      el._trueValue = nextValue;\n    } else if (key === \"false-value\") {\n      el._falseValue = nextValue;\n    }\n    patchAttr(el, key, nextValue, isSVG);\n  }\n};\nfunction shouldSetAsProp(el, key, value, isSVG) {\n  if (isSVG) {\n    if (key === \"innerHTML\" || key === \"textContent\") {\n      return true;\n    }\n    if (key in el && nativeOnRE.test(key) && shared.isFunction(value)) {\n      return true;\n    }\n    return false;\n  }\n  if (key === \"spellcheck\" || key === \"draggable\" || key === \"translate\") {\n    return false;\n  }\n  if (key === \"form\") {\n    return false;\n  }\n  if (key === \"list\" && el.tagName === \"INPUT\") {\n    return false;\n  }\n  if (key === \"type\" && el.tagName === \"TEXTAREA\") {\n    return false;\n  }\n  if (nativeOnRE.test(key) && shared.isString(value)) {\n    return false;\n  }\n  return key in el;\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineCustomElement(options, hydrate2) {\n  const Comp = runtimeCore.defineComponent(options);\n  class VueCustomElement extends VueElement {\n    constructor(initialProps) {\n      super(Comp, initialProps, hydrate2);\n    }\n  }\n  VueCustomElement.def = Comp;\n  return VueCustomElement;\n}\n/*! #__NO_SIDE_EFFECTS__ */\nconst defineSSRCustomElement = /* @__NO_SIDE_EFFECTS__ */ (options) => {\n  return /* @__PURE__ */ defineCustomElement(options, hydrate);\n};\nconst BaseClass = typeof HTMLElement !== \"undefined\" ? HTMLElement : class {\n};\nclass VueElement extends BaseClass {\n  constructor(_def, _props = {}, hydrate2) {\n    super();\n    this._def = _def;\n    this._props = _props;\n    /**\n     * @internal\n     */\n    this._instance = null;\n    this._connected = false;\n    this._resolved = false;\n    this._numberProps = null;\n    this._ob = null;\n    if (this.shadowRoot && hydrate2) {\n      hydrate2(this._createVNode(), this.shadowRoot);\n    } else {\n      if (this.shadowRoot) {\n        runtimeCore.warn(\n          `Custom element has pre-rendered declarative shadow root but is not defined as hydratable. Use \\`defineSSRCustomElement\\`.`\n        );\n      }\n      this.attachShadow({ mode: \"open\" });\n      if (!this._def.__asyncLoader) {\n        this._resolveProps(this._def);\n      }\n    }\n  }\n  connectedCallback() {\n    this._connected = true;\n    if (!this._instance) {\n      if (this._resolved) {\n        this._update();\n      } else {\n        this._resolveDef();\n      }\n    }\n  }\n  disconnectedCallback() {\n    this._connected = false;\n    if (this._ob) {\n      this._ob.disconnect();\n      this._ob = null;\n    }\n    runtimeCore.nextTick(() => {\n      if (!this._connected) {\n        render(null, this.shadowRoot);\n        this._instance = null;\n      }\n    });\n  }\n  /**\n   * resolve inner component definition (handle possible async component)\n   */\n  _resolveDef() {\n    this._resolved = true;\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name);\n    }\n    this._ob = new MutationObserver((mutations) => {\n      for (const m of mutations) {\n        this._setAttr(m.attributeName);\n      }\n    });\n    this._ob.observe(this, { attributes: true });\n    const resolve = (def, isAsync = false) => {\n      const { props, styles } = def;\n      let numberProps;\n      if (props && !shared.isArray(props)) {\n        for (const key in props) {\n          const opt = props[key];\n          if (opt === Number || opt && opt.type === Number) {\n            if (key in this._props) {\n              this._props[key] = shared.toNumber(this._props[key]);\n            }\n            (numberProps || (numberProps = /* @__PURE__ */ Object.create(null)))[shared.camelize(key)] = true;\n          }\n        }\n      }\n      this._numberProps = numberProps;\n      if (isAsync) {\n        this._resolveProps(def);\n      }\n      this._applyStyles(styles);\n      this._update();\n    };\n    const asyncDef = this._def.__asyncLoader;\n    if (asyncDef) {\n      asyncDef().then((def) => resolve(def, true));\n    } else {\n      resolve(this._def);\n    }\n  }\n  _resolveProps(def) {\n    const { props } = def;\n    const declaredPropKeys = shared.isArray(props) ? props : Object.keys(props || {});\n    for (const key of Object.keys(this)) {\n      if (key[0] !== \"_\" && declaredPropKeys.includes(key)) {\n        this._setProp(key, this[key], true, false);\n      }\n    }\n    for (const key of declaredPropKeys.map(shared.camelize)) {\n      Object.defineProperty(this, key, {\n        get() {\n          return this._getProp(key);\n        },\n        set(val) {\n          this._setProp(key, val);\n        }\n      });\n    }\n  }\n  _setAttr(key) {\n    let value = this.getAttribute(key);\n    const camelKey = shared.camelize(key);\n    if (this._numberProps && this._numberProps[camelKey]) {\n      value = shared.toNumber(value);\n    }\n    this._setProp(camelKey, value, false);\n  }\n  /**\n   * @internal\n   */\n  _getProp(key) {\n    return this._props[key];\n  }\n  /**\n   * @internal\n   */\n  _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\n    if (val !== this._props[key]) {\n      this._props[key] = val;\n      if (shouldUpdate && this._instance) {\n        this._update();\n      }\n      if (shouldReflect) {\n        if (val === true) {\n          this.setAttribute(shared.hyphenate(key), \"\");\n        } else if (typeof val === \"string\" || typeof val === \"number\") {\n          this.setAttribute(shared.hyphenate(key), val + \"\");\n        } else if (!val) {\n          this.removeAttribute(shared.hyphenate(key));\n        }\n      }\n    }\n  }\n  _update() {\n    render(this._createVNode(), this.shadowRoot);\n  }\n  _createVNode() {\n    const vnode = runtimeCore.createVNode(this._def, shared.extend({}, this._props));\n    if (!this._instance) {\n      vnode.ce = (instance) => {\n        this._instance = instance;\n        instance.isCE = true;\n        {\n          instance.ceReload = (newStyles) => {\n            if (this._styles) {\n              this._styles.forEach((s) => this.shadowRoot.removeChild(s));\n              this._styles.length = 0;\n            }\n            this._applyStyles(newStyles);\n            this._instance = null;\n            this._update();\n          };\n        }\n        const dispatch = (event, args) => {\n          this.dispatchEvent(\n            new CustomEvent(event, {\n              detail: args\n            })\n          );\n        };\n        instance.emit = (event, ...args) => {\n          dispatch(event, args);\n          if (shared.hyphenate(event) !== event) {\n            dispatch(shared.hyphenate(event), args);\n          }\n        };\n        let parent = this;\n        while (parent = parent && (parent.parentNode || parent.host)) {\n          if (parent instanceof VueElement) {\n            instance.parent = parent._instance;\n            instance.provides = parent._instance.provides;\n            break;\n          }\n        }\n      };\n    }\n    return vnode;\n  }\n  _applyStyles(styles) {\n    if (styles) {\n      styles.forEach((css) => {\n        const s = document.createElement(\"style\");\n        s.textContent = css;\n        this.shadowRoot.appendChild(s);\n        {\n          (this._styles || (this._styles = [])).push(s);\n        }\n      });\n    }\n  }\n}\n\nfunction useCssModule(name = \"$style\") {\n  {\n    const instance = runtimeCore.getCurrentInstance();\n    if (!instance) {\n      runtimeCore.warn(`useCssModule must be called inside setup()`);\n      return shared.EMPTY_OBJ;\n    }\n    const modules = instance.type.__cssModules;\n    if (!modules) {\n      runtimeCore.warn(`Current instance does not have CSS modules injected.`);\n      return shared.EMPTY_OBJ;\n    }\n    const mod = modules[name];\n    if (!mod) {\n      runtimeCore.warn(`Current instance does not have CSS module named \"${name}\".`);\n      return shared.EMPTY_OBJ;\n    }\n    return mod;\n  }\n}\n\nfunction useCssVars(getter) {\n  return;\n}\n\nconst positionMap = /* @__PURE__ */ new WeakMap();\nconst newPositionMap = /* @__PURE__ */ new WeakMap();\nconst moveCbKey = Symbol(\"_moveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nconst TransitionGroupImpl = {\n  name: \"TransitionGroup\",\n  props: /* @__PURE__ */ shared.extend({}, TransitionPropsValidators, {\n    tag: String,\n    moveClass: String\n  }),\n  setup(props, { slots }) {\n    const instance = runtimeCore.getCurrentInstance();\n    const state = runtimeCore.useTransitionState();\n    let prevChildren;\n    let children;\n    runtimeCore.onUpdated(() => {\n      if (!prevChildren.length) {\n        return;\n      }\n      const moveClass = props.moveClass || `${props.name || \"v\"}-move`;\n      if (!hasCSSTransform(\n        prevChildren[0].el,\n        instance.vnode.el,\n        moveClass\n      )) {\n        return;\n      }\n      prevChildren.forEach(callPendingCbs);\n      prevChildren.forEach(recordPosition);\n      const movedChildren = prevChildren.filter(applyTranslation);\n      forceReflow();\n      movedChildren.forEach((c) => {\n        const el = c.el;\n        const style = el.style;\n        addTransitionClass(el, moveClass);\n        style.transform = style.webkitTransform = style.transitionDuration = \"\";\n        const cb = el[moveCbKey] = (e) => {\n          if (e && e.target !== el) {\n            return;\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(\"transitionend\", cb);\n            el[moveCbKey] = null;\n            removeTransitionClass(el, moveClass);\n          }\n        };\n        el.addEventListener(\"transitionend\", cb);\n      });\n    });\n    return () => {\n      const rawProps = runtimeCore.toRaw(props);\n      const cssTransitionProps = resolveTransitionProps(rawProps);\n      let tag = rawProps.tag || runtimeCore.Fragment;\n      prevChildren = children;\n      children = slots.default ? runtimeCore.getTransitionRawChildren(slots.default()) : [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.key != null) {\n          runtimeCore.setTransitionHooks(\n            child,\n            runtimeCore.resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n        } else {\n          runtimeCore.warn(`<TransitionGroup> children must be keyed.`);\n        }\n      }\n      if (prevChildren) {\n        for (let i = 0; i < prevChildren.length; i++) {\n          const child = prevChildren[i];\n          runtimeCore.setTransitionHooks(\n            child,\n            runtimeCore.resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n          positionMap.set(child, child.el.getBoundingClientRect());\n        }\n      }\n      return runtimeCore.createVNode(tag, null, children);\n    };\n  }\n};\nconst removeMode = (props) => delete props.mode;\n/* @__PURE__ */ removeMode(TransitionGroupImpl.props);\nconst TransitionGroup = TransitionGroupImpl;\nfunction callPendingCbs(c) {\n  const el = c.el;\n  if (el[moveCbKey]) {\n    el[moveCbKey]();\n  }\n  if (el[enterCbKey]) {\n    el[enterCbKey]();\n  }\n}\nfunction recordPosition(c) {\n  newPositionMap.set(c, c.el.getBoundingClientRect());\n}\nfunction applyTranslation(c) {\n  const oldPos = positionMap.get(c);\n  const newPos = newPositionMap.get(c);\n  const dx = oldPos.left - newPos.left;\n  const dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    const s = c.el.style;\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n    s.transitionDuration = \"0s\";\n    return c;\n  }\n}\nfunction hasCSSTransform(el, root, moveClass) {\n  const clone = el.cloneNode();\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.forEach((cls) => {\n      cls.split(/\\s+/).forEach((c) => c && clone.classList.remove(c));\n    });\n  }\n  moveClass.split(/\\s+/).forEach((c) => c && clone.classList.add(c));\n  clone.style.display = \"none\";\n  const container = root.nodeType === 1 ? root : root.parentNode;\n  container.appendChild(clone);\n  const { hasTransform } = getTransitionInfo(clone);\n  container.removeChild(clone);\n  return hasTransform;\n}\n\nconst getModelAssigner = (vnode) => {\n  const fn = vnode.props[\"onUpdate:modelValue\"] || false;\n  return shared.isArray(fn) ? (value) => shared.invokeArrayFns(fn, value) : fn;\n};\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\nfunction onCompositionEnd(e) {\n  const target = e.target;\n  if (target.composing) {\n    target.composing = false;\n    target.dispatchEvent(new Event(\"input\"));\n  }\n}\nconst assignKey = Symbol(\"_assign\");\nconst vModelText = {\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    const castToNumber = number || vnode.props && vnode.props.type === \"number\";\n    addEventListener(el, lazy ? \"change\" : \"input\", (e) => {\n      if (e.target.composing)\n        return;\n      let domValue = el.value;\n      if (trim) {\n        domValue = domValue.trim();\n      }\n      if (castToNumber) {\n        domValue = shared.looseToNumber(domValue);\n      }\n      el[assignKey](domValue);\n    });\n    if (trim) {\n      addEventListener(el, \"change\", () => {\n        el.value = el.value.trim();\n      });\n    }\n    if (!lazy) {\n      addEventListener(el, \"compositionstart\", onCompositionStart);\n      addEventListener(el, \"compositionend\", onCompositionEnd);\n      addEventListener(el, \"change\", onCompositionEnd);\n    }\n  },\n  // set value on mounted so it's after min/max for type=\"range\"\n  mounted(el, { value }) {\n    el.value = value == null ? \"\" : value;\n  },\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    if (el.composing)\n      return;\n    const elValue = number || el.type === \"number\" ? shared.looseToNumber(el.value) : el.value;\n    const newValue = value == null ? \"\" : value;\n    if (elValue === newValue) {\n      return;\n    }\n    if (document.activeElement === el && el.type !== \"range\") {\n      if (lazy) {\n        return;\n      }\n      if (trim && el.value.trim() === newValue) {\n        return;\n      }\n    }\n    el.value = newValue;\n  }\n};\nconst vModelCheckbox = {\n  // #4096 array checkboxes need to be deep traversed\n  deep: true,\n  created(el, _, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      const modelValue = el._modelValue;\n      const elementValue = getValue(el);\n      const checked = el.checked;\n      const assign = el[assignKey];\n      if (shared.isArray(modelValue)) {\n        const index = shared.looseIndexOf(modelValue, elementValue);\n        const found = index !== -1;\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue));\n        } else if (!checked && found) {\n          const filtered = [...modelValue];\n          filtered.splice(index, 1);\n          assign(filtered);\n        }\n      } else if (shared.isSet(modelValue)) {\n        const cloned = new Set(modelValue);\n        if (checked) {\n          cloned.add(elementValue);\n        } else {\n          cloned.delete(elementValue);\n        }\n        assign(cloned);\n      } else {\n        assign(getCheckboxValue(el, checked));\n      }\n    });\n  },\n  // set initial checked on mount to wait for true-value/false-value\n  mounted: setChecked,\n  beforeUpdate(el, binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    setChecked(el, binding, vnode);\n  }\n};\nfunction setChecked(el, { value, oldValue }, vnode) {\n  el._modelValue = value;\n  if (shared.isArray(value)) {\n    el.checked = shared.looseIndexOf(value, vnode.props.value) > -1;\n  } else if (shared.isSet(value)) {\n    el.checked = value.has(vnode.props.value);\n  } else if (value !== oldValue) {\n    el.checked = shared.looseEqual(value, getCheckboxValue(el, true));\n  }\n}\nconst vModelRadio = {\n  created(el, { value }, vnode) {\n    el.checked = shared.looseEqual(value, vnode.props.value);\n    el[assignKey] = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      el[assignKey](getValue(el));\n    });\n  },\n  beforeUpdate(el, { value, oldValue }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    if (value !== oldValue) {\n      el.checked = shared.looseEqual(value, vnode.props.value);\n    }\n  }\n};\nconst vModelSelect = {\n  // <select multiple> value need to be deep traversed\n  deep: true,\n  created(el, { value, modifiers: { number } }, vnode) {\n    const isSetModel = shared.isSet(value);\n    addEventListener(el, \"change\", () => {\n      const selectedVal = Array.prototype.filter.call(el.options, (o) => o.selected).map(\n        (o) => number ? shared.looseToNumber(getValue(o)) : getValue(o)\n      );\n      el[assignKey](\n        el.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]\n      );\n    });\n    el[assignKey] = getModelAssigner(vnode);\n  },\n  // set value in mounted & updated because <select> relies on its children\n  // <option>s.\n  mounted(el, { value }) {\n    setSelected(el, value);\n  },\n  beforeUpdate(el, _binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n  },\n  updated(el, { value }) {\n    setSelected(el, value);\n  }\n};\nfunction setSelected(el, value) {\n  const isMultiple = el.multiple;\n  if (isMultiple && !shared.isArray(value) && !shared.isSet(value)) {\n    runtimeCore.warn(\n      `<select multiple v-model> expects an Array or Set value for its binding, but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\n    );\n    return;\n  }\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i];\n    const optionValue = getValue(option);\n    if (isMultiple) {\n      if (shared.isArray(value)) {\n        option.selected = shared.looseIndexOf(value, optionValue) > -1;\n      } else {\n        option.selected = value.has(optionValue);\n      }\n    } else {\n      if (shared.looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i)\n          el.selectedIndex = i;\n        return;\n      }\n    }\n  }\n  if (!isMultiple && el.selectedIndex !== -1) {\n    el.selectedIndex = -1;\n  }\n}\nfunction getValue(el) {\n  return \"_value\" in el ? el._value : el.value;\n}\nfunction getCheckboxValue(el, checked) {\n  const key = checked ? \"_trueValue\" : \"_falseValue\";\n  return key in el ? el[key] : checked;\n}\nconst vModelDynamic = {\n  created(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"created\");\n  },\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"mounted\");\n  },\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"beforeUpdate\");\n  },\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"updated\");\n  }\n};\nfunction resolveDynamicModel(tagName, type) {\n  switch (tagName) {\n    case \"SELECT\":\n      return vModelSelect;\n    case \"TEXTAREA\":\n      return vModelText;\n    default:\n      switch (type) {\n        case \"checkbox\":\n          return vModelCheckbox;\n        case \"radio\":\n          return vModelRadio;\n        default:\n          return vModelText;\n      }\n  }\n}\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\n  const modelToUse = resolveDynamicModel(\n    el.tagName,\n    vnode.props && vnode.props.type\n  );\n  const fn = modelToUse[hook];\n  fn && fn(el, binding, vnode, prevVNode);\n}\nfunction initVModelForSSR() {\n  vModelText.getSSRProps = ({ value }) => ({ value });\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\n    if (vnode.props && shared.looseEqual(vnode.props.value, value)) {\n      return { checked: true };\n    }\n  };\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n    if (shared.isArray(value)) {\n      if (vnode.props && shared.looseIndexOf(value, vnode.props.value) > -1) {\n        return { checked: true };\n      }\n    } else if (shared.isSet(value)) {\n      if (vnode.props && value.has(vnode.props.value)) {\n        return { checked: true };\n      }\n    } else if (value) {\n      return { checked: true };\n    }\n  };\n  vModelDynamic.getSSRProps = (binding, vnode) => {\n    if (typeof vnode.type !== \"string\") {\n      return;\n    }\n    const modelToUse = resolveDynamicModel(\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n      vnode.type.toUpperCase(),\n      vnode.props && vnode.props.type\n    );\n    if (modelToUse.getSSRProps) {\n      return modelToUse.getSSRProps(binding, vnode);\n    }\n  };\n}\n\nconst systemModifiers = [\"ctrl\", \"shift\", \"alt\", \"meta\"];\nconst modifierGuards = {\n  stop: (e) => e.stopPropagation(),\n  prevent: (e) => e.preventDefault(),\n  self: (e) => e.target !== e.currentTarget,\n  ctrl: (e) => !e.ctrlKey,\n  shift: (e) => !e.shiftKey,\n  alt: (e) => !e.altKey,\n  meta: (e) => !e.metaKey,\n  left: (e) => \"button\" in e && e.button !== 0,\n  middle: (e) => \"button\" in e && e.button !== 1,\n  right: (e) => \"button\" in e && e.button !== 2,\n  exact: (e, modifiers) => systemModifiers.some((m) => e[`${m}Key`] && !modifiers.includes(m))\n};\nconst withModifiers = (fn, modifiers) => {\n  return (event, ...args) => {\n    for (let i = 0; i < modifiers.length; i++) {\n      const guard = modifierGuards[modifiers[i]];\n      if (guard && guard(event, modifiers))\n        return;\n    }\n    return fn(event, ...args);\n  };\n};\nconst keyNames = {\n  esc: \"escape\",\n  space: \" \",\n  up: \"arrow-up\",\n  left: \"arrow-left\",\n  right: \"arrow-right\",\n  down: \"arrow-down\",\n  delete: \"backspace\"\n};\nconst withKeys = (fn, modifiers) => {\n  return (event) => {\n    if (!(\"key\" in event)) {\n      return;\n    }\n    const eventKey = shared.hyphenate(event.key);\n    if (modifiers.some((k) => k === eventKey || keyNames[k] === eventKey)) {\n      return fn(event);\n    }\n  };\n};\n\nconst rendererOptions = /* @__PURE__ */ shared.extend({ patchProp }, nodeOps);\nlet renderer;\nlet enabledHydration = false;\nfunction ensureRenderer() {\n  return renderer || (renderer = runtimeCore.createRenderer(rendererOptions));\n}\nfunction ensureHydrationRenderer() {\n  renderer = enabledHydration ? renderer : runtimeCore.createHydrationRenderer(rendererOptions);\n  enabledHydration = true;\n  return renderer;\n}\nconst render = (...args) => {\n  ensureRenderer().render(...args);\n};\nconst hydrate = (...args) => {\n  ensureHydrationRenderer().hydrate(...args);\n};\nconst createApp = (...args) => {\n  const app = ensureRenderer().createApp(...args);\n  {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (!container)\n      return;\n    const component = app._component;\n    if (!shared.isFunction(component) && !component.render && !component.template) {\n      component.template = container.innerHTML;\n    }\n    container.innerHTML = \"\";\n    const proxy = mount(container, false, container instanceof SVGElement);\n    if (container instanceof Element) {\n      container.removeAttribute(\"v-cloak\");\n      container.setAttribute(\"data-v-app\", \"\");\n    }\n    return proxy;\n  };\n  return app;\n};\nconst createSSRApp = (...args) => {\n  const app = ensureHydrationRenderer().createApp(...args);\n  {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (container) {\n      return mount(container, true, container instanceof SVGElement);\n    }\n  };\n  return app;\n};\nfunction injectNativeTagCheck(app) {\n  Object.defineProperty(app.config, \"isNativeTag\", {\n    value: (tag) => shared.isHTMLTag(tag) || shared.isSVGTag(tag),\n    writable: false\n  });\n}\nfunction injectCompilerOptionsCheck(app) {\n  if (runtimeCore.isRuntimeOnly()) {\n    const isCustomElement = app.config.isCustomElement;\n    Object.defineProperty(app.config, \"isCustomElement\", {\n      get() {\n        return isCustomElement;\n      },\n      set() {\n        runtimeCore.warn(\n          `The \\`isCustomElement\\` config option is deprecated. Use \\`compilerOptions.isCustomElement\\` instead.`\n        );\n      }\n    });\n    const compilerOptions = app.config.compilerOptions;\n    const msg = `The \\`compilerOptions\\` config option is only respected when using a build of Vue.js that includes the runtime compiler (aka \"full build\"). Since you are using the runtime-only build, \\`compilerOptions\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\n- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\n- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\n- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`;\n    Object.defineProperty(app.config, \"compilerOptions\", {\n      get() {\n        runtimeCore.warn(msg);\n        return compilerOptions;\n      },\n      set() {\n        runtimeCore.warn(msg);\n      }\n    });\n  }\n}\nfunction normalizeContainer(container) {\n  if (shared.isString(container)) {\n    const res = document.querySelector(container);\n    if (!res) {\n      runtimeCore.warn(\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\n      );\n    }\n    return res;\n  }\n  if (window.ShadowRoot && container instanceof window.ShadowRoot && container.mode === \"closed\") {\n    runtimeCore.warn(\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\n    );\n  }\n  return container;\n}\nlet ssrDirectiveInitialized = false;\nconst initDirectivesForSSR = () => {\n  if (!ssrDirectiveInitialized) {\n    ssrDirectiveInitialized = true;\n    initVModelForSSR();\n    initVShowForSSR();\n  }\n} ;\n\nexports.Transition = Transition;\nexports.TransitionGroup = TransitionGroup;\nexports.VueElement = VueElement;\nexports.createApp = createApp;\nexports.createSSRApp = createSSRApp;\nexports.defineCustomElement = defineCustomElement;\nexports.defineSSRCustomElement = defineSSRCustomElement;\nexports.hydrate = hydrate;\nexports.initDirectivesForSSR = initDirectivesForSSR;\nexports.render = render;\nexports.useCssModule = useCssModule;\nexports.useCssVars = useCssVars;\nexports.vModelCheckbox = vModelCheckbox;\nexports.vModelDynamic = vModelDynamic;\nexports.vModelRadio = vModelRadio;\nexports.vModelSelect = vModelSelect;\nexports.vModelText = vModelText;\nexports.vShow = vShow;\nexports.withKeys = withKeys;\nexports.withModifiers = withModifiers;\nObject.keys(runtimeCore).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = runtimeCore[k];\n});\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/runtime-dom.cjs.prod.js')\n} else {\n  module.exports = require('./dist/runtime-dom.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerDom = require('@vue/compiler-dom');\nvar runtimeDom = require('@vue/runtime-dom');\nvar shared = require('@vue/shared');\n\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    for (var k in e) {\n      n[k] = e[k];\n    }\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\n\nvar runtimeDom__namespace = /*#__PURE__*/_interopNamespaceDefault(runtimeDom);\n\nconst compileCache = /* @__PURE__ */ Object.create(null);\nfunction compileToFunction(template, options) {\n  if (!shared.isString(template)) {\n    if (template.nodeType) {\n      template = template.innerHTML;\n    } else {\n      runtimeDom.warn(`invalid template option: `, template);\n      return shared.NOOP;\n    }\n  }\n  const key = template;\n  const cached = compileCache[key];\n  if (cached) {\n    return cached;\n  }\n  if (template[0] === \"#\") {\n    const el = document.querySelector(template);\n    if (!el) {\n      runtimeDom.warn(`Template element not found or is empty: ${template}`);\n    }\n    template = el ? el.innerHTML : ``;\n  }\n  const opts = shared.extend(\n    {\n      hoistStatic: true,\n      onError: onError ,\n      onWarn: (e) => onError(e, true) \n    },\n    options\n  );\n  if (!opts.isCustomElement && typeof customElements !== \"undefined\") {\n    opts.isCustomElement = (tag) => !!customElements.get(tag);\n  }\n  const { code } = compilerDom.compile(template, opts);\n  function onError(err, asWarning = false) {\n    const message = asWarning ? err.message : `Template compilation error: ${err.message}`;\n    const codeFrame = err.loc && shared.generateCodeFrame(\n      template,\n      err.loc.start.offset,\n      err.loc.end.offset\n    );\n    runtimeDom.warn(codeFrame ? `${message}\n${codeFrame}` : message);\n  }\n  const render = new Function(\"Vue\", code)(runtimeDom__namespace);\n  render._rc = true;\n  return compileCache[key] = render;\n}\nruntimeDom.registerRuntimeCompiler(compileToFunction);\n\nexports.compile = compileToFunction;\nObject.keys(runtimeDom).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = runtimeDom[k];\n});\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/vue.cjs.prod.js')\n} else {\n  module.exports = require('./dist/vue.cjs.js')\n}\n", "import { createApp } from \"vue\";\nimport { createPinia } from \"pinia\";\nimport App from \"./amount_saved.vue\";\n\nclass AmountSaved {\n    constructor({ wrapper }) {\n        this.$wrapper = $(wrapper);\n        this.app = null;\n        this.init();\n    }\n\n    init(refresh) {\n        !refresh && this.setup_app();\n    }\n\n    cleanup() {\n        if (this.app) {\n            try {\n                this.app.unmount();\n                this.app = null;\n            } catch (e) {\n                console.warn('Error during cleanup:', e);\n            }\n        }\n    }\n\n    refresh() {\n        this.cleanup();\n        this.setup_app();\n    }\n\n    setup_app() {\n        // create a pinia instance\n        let pinia = createPinia();\n        // create a vue instance with dynamic props\n        this.app = createApp(App);\n        SetVueGlobals(this.app);\n        this.app.use(pinia);\n\n\n        // mount the app only if wrapper exists\n        if (this.$wrapper && this.$wrapper.get(0)) {\n            this.app.mount(this.$wrapper.get(0));\n        } else {\n            console.warn('Wrapper element not found for mounting Vue app');\n        }\n    }\n}\n\nfrappe.provide(\"frappe.ui\");\nfrappe.ui.AmountSaved = AmountSaved;\nexport default AmountSaved;", "import * as Vue from 'vue'\n\nvar isVue2 = false\nvar isVue3 = true\nvar Vue2 = undefined\n\nfunction install() {}\n\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  target[key] = val\n  return val\n}\n\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1)\n    return\n  }\n  delete target[key]\n}\n\nexport * from 'vue'\nexport {\n  Vue,\n  Vue2,\n  isVue2,\n  isVue3,\n  install,\n}\n", "import { initCustomFormatter, warn } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\n\nfunction initDev() {\n  {\n    initCustomFormatter();\n  }\n}\n\nif (!!(process.env.NODE_ENV !== \"production\")) {\n  initDev();\n}\nconst compile = () => {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(\n      `Runtime compilation is not supported in this build of Vue.` + (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".` )\n      /* should not happen */\n    );\n  }\n};\n\nexport { compile };\n", "export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return (typeof navigator !== 'undefined' && typeof window !== 'undefined')\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\nexport const isProxyAvailable = typeof Proxy === 'function';\n", "export const HOOK_SETUP = 'devtools-plugin:setup';\nexport const HOOK_PLUGIN_SETTINGS_SET = 'plugin:settings:set';\n", "let supported;\nlet perf;\nexport function isPerformanceSupported() {\n    var _a;\n    if (supported !== undefined) {\n        return supported;\n    }\n    if (typeof window !== 'undefined' && window.performance) {\n        supported = true;\n        perf = window.performance;\n    }\n    else if (typeof global !== 'undefined' && ((_a = global.perf_hooks) === null || _a === void 0 ? void 0 : _a.performance)) {\n        supported = true;\n        perf = global.perf_hooks.performance;\n    }\n    else {\n        supported = false;\n    }\n    return supported;\n}\nexport function now() {\n    return isPerformanceSupported() ? perf.now() : Date.now();\n}\n", "import { HOOK_PLUGIN_SETTINGS_SET } from './const.js';\nimport { now } from './time.js';\nexport class ApiProxy {\n    constructor(plugin, hook) {\n        this.target = null;\n        this.targetQueue = [];\n        this.onQueue = [];\n        this.plugin = plugin;\n        this.hook = hook;\n        const defaultSettings = {};\n        if (plugin.settings) {\n            for (const id in plugin.settings) {\n                const item = plugin.settings[id];\n                defaultSettings[id] = item.defaultValue;\n            }\n        }\n        const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;\n        let currentSettings = Object.assign({}, defaultSettings);\n        try {\n            const raw = localStorage.getItem(localSettingsSaveId);\n            const data = JSON.parse(raw);\n            Object.assign(currentSettings, data);\n        }\n        catch (e) {\n            // noop\n        }\n        this.fallbacks = {\n            getSettings() {\n                return currentSettings;\n            },\n            setSettings(value) {\n                try {\n                    localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n                }\n                catch (e) {\n                    // noop\n                }\n                currentSettings = value;\n            },\n            now() {\n                return now();\n            },\n        };\n        if (hook) {\n            hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {\n                if (pluginId === this.plugin.id) {\n                    this.fallbacks.setSettings(value);\n                }\n            });\n        }\n        this.proxiedOn = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target.on[prop];\n                }\n                else {\n                    return (...args) => {\n                        this.onQueue.push({\n                            method: prop,\n                            args,\n                        });\n                    };\n                }\n            },\n        });\n        this.proxiedTarget = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target[prop];\n                }\n                else if (prop === 'on') {\n                    return this.proxiedOn;\n                }\n                else if (Object.keys(this.fallbacks).includes(prop)) {\n                    return (...args) => {\n                        this.targetQueue.push({\n                            method: prop,\n                            args,\n                            resolve: () => { },\n                        });\n                        return this.fallbacks[prop](...args);\n                    };\n                }\n                else {\n                    return (...args) => {\n                        return new Promise(resolve => {\n                            this.targetQueue.push({\n                                method: prop,\n                                args,\n                                resolve,\n                            });\n                        });\n                    };\n                }\n            },\n        });\n    }\n    async setRealTarget(target) {\n        this.target = target;\n        for (const item of this.onQueue) {\n            this.target.on[item.method](...item.args);\n        }\n        for (const item of this.targetQueue) {\n            item.resolve(await this.target[item.method](...item.args));\n        }\n    }\n}\n", "import { getTarget, getDevtoolsGlobalHook, isProxyAvailable } from './env.js';\nimport { HOOK_SETUP } from './const.js';\nimport { ApiProxy } from './proxy.js';\nexport * from './api/index.js';\nexport * from './plugin.js';\nexport * from './time.js';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const descriptor = pluginDescriptor;\n    const target = getTarget();\n    const hook = getDevtoolsGlobalHook();\n    const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;\n    if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const proxy = enableProxy ? new ApiProxy(descriptor, hook) : null;\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor: descriptor,\n            setupFn,\n            proxy,\n        });\n        if (proxy)\n            setupFn(proxy.proxiedTarget);\n    }\n}\n", "/*!\n * pinia v2.1.7\n * (c) 2023 Eduardo San Martin Morote\n * @license MIT\n */\nimport { hasInjectionContext, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, getCurrentScope, onScopeDispose, getCurrentInstance, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\n/**\n * setActivePinia must be called to handle SSR at the top of functions like\n * `fetch`, `setup`, `serverPrefetch` and others\n */\nlet activePinia;\n/**\n * Sets or unsets the active pinia. Used in SSR and internally when calling\n * actions and getters\n *\n * @param pinia - Pinia instance\n */\n// @ts-expect-error: cannot constrain the type of the return\nconst setActivePinia = (pinia) => (activePinia = pinia);\n/**\n * Get the currently active pinia if there is any.\n */\nconst getActivePinia = () => (hasInjectionContext() && inject(piniaSymbol)) || activePinia;\nconst piniaSymbol = ((process.env.NODE_ENV !== 'production') ? Symbol('pinia') : /* istanbul ignore next */ Symbol());\n\nfunction isPlainObject(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no) {\n    return (o &&\n        typeof o === 'object' &&\n        Object.prototype.toString.call(o) === '[object Object]' &&\n        typeof o.toJSON !== 'function');\n}\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n// TODO: can we change these to numbers?\n/**\n * Possible types for SubscriptionCallback\n */\nvar MutationType;\n(function (MutationType) {\n    /**\n     * Direct mutation of the state:\n     *\n     * - `store.name = 'new name'`\n     * - `store.$state.name = 'new name'`\n     * - `store.list.push('new item')`\n     */\n    MutationType[\"direct\"] = \"direct\";\n    /**\n     * Mutated the state with `$patch` and an object\n     *\n     * - `store.$patch({ name: 'newName' })`\n     */\n    MutationType[\"patchObject\"] = \"patch object\";\n    /**\n     * Mutated the state with `$patch` and a function\n     *\n     * - `store.$patch(state => state.name = 'newName')`\n     */\n    MutationType[\"patchFunction\"] = \"patch function\";\n    // maybe reset? for $state = {} and $reset\n})(MutationType || (MutationType = {}));\n\nconst IS_CLIENT = typeof window !== 'undefined';\n/**\n * Should we add the devtools plugins.\n * - only if dev mode or forced through the prod devtools flag\n * - not in test\n * - only if window exists (could change in the future)\n */\nconst USE_DEVTOOLS = ((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test') && IS_CLIENT;\n\n/*\n * FileSaver.js A saveAs() FileSaver implementation.\n *\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\n * Morote.\n *\n * License : MIT\n */\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nconst _global = /*#__PURE__*/ (() => typeof window === 'object' && window.window === window\n    ? window\n    : typeof self === 'object' && self.self === self\n        ? self\n        : typeof global === 'object' && global.global === global\n            ? global\n            : typeof globalThis === 'object'\n                ? globalThis\n                : { HTMLElement: null })();\nfunction bom(blob, { autoBom = false } = {}) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n    if (autoBom &&\n        /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n        return new Blob([String.fromCharCode(0xfeff), blob], { type: blob.type });\n    }\n    return blob;\n}\nfunction download(url, name, opts) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n        saveAs(xhr.response, name, opts);\n    };\n    xhr.onerror = function () {\n        console.error('could not download file');\n    };\n    xhr.send();\n}\nfunction corsEnabled(url) {\n    const xhr = new XMLHttpRequest();\n    // use sync to avoid popup blocker\n    xhr.open('HEAD', url, false);\n    try {\n        xhr.send();\n    }\n    catch (e) { }\n    return xhr.status >= 200 && xhr.status <= 299;\n}\n// `a.click()` doesn't work for all browsers (#465)\nfunction click(node) {\n    try {\n        node.dispatchEvent(new MouseEvent('click'));\n    }\n    catch (e) {\n        const evt = document.createEvent('MouseEvents');\n        evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n        node.dispatchEvent(evt);\n    }\n}\nconst _navigator = \n typeof navigator === 'object' ? navigator : { userAgent: '' };\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nconst isMacOSWebView = /*#__PURE__*/ (() => /Macintosh/.test(_navigator.userAgent) &&\n    /AppleWebKit/.test(_navigator.userAgent) &&\n    !/Safari/.test(_navigator.userAgent))();\nconst saveAs = !IS_CLIENT\n    ? () => { } // noop\n    : // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\n        typeof HTMLAnchorElement !== 'undefined' &&\n            'download' in HTMLAnchorElement.prototype &&\n            !isMacOSWebView\n            ? downloadSaveAs\n            : // Use msSaveOrOpenBlob as a second approach\n                'msSaveOrOpenBlob' in _navigator\n                    ? msSaveAs\n                    : // Fallback to using FileReader and a popup\n                        fileSaverSaveAs;\nfunction downloadSaveAs(blob, name = 'download', opts) {\n    const a = document.createElement('a');\n    a.download = name;\n    a.rel = 'noopener'; // tabnabbing\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n    if (typeof blob === 'string') {\n        // Support regular links\n        a.href = blob;\n        if (a.origin !== location.origin) {\n            if (corsEnabled(a.href)) {\n                download(blob, name, opts);\n            }\n            else {\n                a.target = '_blank';\n                click(a);\n            }\n        }\n        else {\n            click(a);\n        }\n    }\n    else {\n        // Support blobs\n        a.href = URL.createObjectURL(blob);\n        setTimeout(function () {\n            URL.revokeObjectURL(a.href);\n        }, 4e4); // 40s\n        setTimeout(function () {\n            click(a);\n        }, 0);\n    }\n}\nfunction msSaveAs(blob, name = 'download', opts) {\n    if (typeof blob === 'string') {\n        if (corsEnabled(blob)) {\n            download(blob, name, opts);\n        }\n        else {\n            const a = document.createElement('a');\n            a.href = blob;\n            a.target = '_blank';\n            setTimeout(function () {\n                click(a);\n            });\n        }\n    }\n    else {\n        // @ts-ignore: works on windows\n        navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n    }\n}\nfunction fileSaverSaveAs(blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank');\n    if (popup) {\n        popup.document.title = popup.document.body.innerText = 'downloading...';\n    }\n    if (typeof blob === 'string')\n        return download(blob, name, opts);\n    const force = blob.type === 'application/octet-stream';\n    const isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\n    const isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) &&\n        typeof FileReader !== 'undefined') {\n        // Safari doesn't allow downloading of blob URLs\n        const reader = new FileReader();\n        reader.onloadend = function () {\n            let url = reader.result;\n            if (typeof url !== 'string') {\n                popup = null;\n                throw new Error('Wrong reader.result type');\n            }\n            url = isChromeIOS\n                ? url\n                : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n            if (popup) {\n                popup.location.href = url;\n            }\n            else {\n                location.assign(url);\n            }\n            popup = null; // reverse-tabnabbing #460\n        };\n        reader.readAsDataURL(blob);\n    }\n    else {\n        const url = URL.createObjectURL(blob);\n        if (popup)\n            popup.location.assign(url);\n        else\n            location.href = url;\n        popup = null; // reverse-tabnabbing #460\n        setTimeout(function () {\n            URL.revokeObjectURL(url);\n        }, 4e4); // 40s\n    }\n}\n\n/**\n * Shows a toast or console.log\n *\n * @param message - message to log\n * @param type - different color of the tooltip\n */\nfunction toastMessage(message, type) {\n    const piniaMessage = '\uD83C\uDF4D ' + message;\n    if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n        // No longer available :(\n        __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\n    }\n    else if (type === 'error') {\n        console.error(piniaMessage);\n    }\n    else if (type === 'warn') {\n        console.warn(piniaMessage);\n    }\n    else {\n        console.log(piniaMessage);\n    }\n}\nfunction isPinia(o) {\n    return '_a' in o && 'install' in o;\n}\n\n/**\n * This file contain devtools actions, they are not Pinia actions.\n */\n// ---\nfunction checkClipboardAccess() {\n    if (!('clipboard' in navigator)) {\n        toastMessage(`Your browser doesn't support the Clipboard API`, 'error');\n        return true;\n    }\n}\nfunction checkNotFocusedError(error) {\n    if (error instanceof Error &&\n        error.message.toLowerCase().includes('document is not focused')) {\n        toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\n        return true;\n    }\n    return false;\n}\nasync function actionGlobalCopyState(pinia) {\n    if (checkClipboardAccess())\n        return;\n    try {\n        await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\n        toastMessage('Global state copied to clipboard.');\n    }\n    catch (error) {\n        if (checkNotFocusedError(error))\n            return;\n        toastMessage(`Failed to serialize the state. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nasync function actionGlobalPasteState(pinia) {\n    if (checkClipboardAccess())\n        return;\n    try {\n        loadStoresState(pinia, JSON.parse(await navigator.clipboard.readText()));\n        toastMessage('Global state pasted from clipboard.');\n    }\n    catch (error) {\n        if (checkNotFocusedError(error))\n            return;\n        toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nasync function actionGlobalSaveState(pinia) {\n    try {\n        saveAs(new Blob([JSON.stringify(pinia.state.value)], {\n            type: 'text/plain;charset=utf-8',\n        }), 'pinia-state.json');\n    }\n    catch (error) {\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nlet fileInput;\nfunction getFileOpener() {\n    if (!fileInput) {\n        fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.accept = '.json';\n    }\n    function openFile() {\n        return new Promise((resolve, reject) => {\n            fileInput.onchange = async () => {\n                const files = fileInput.files;\n                if (!files)\n                    return resolve(null);\n                const file = files.item(0);\n                if (!file)\n                    return resolve(null);\n                return resolve({ text: await file.text(), file });\n            };\n            // @ts-ignore: TODO: changed from 4.3 to 4.4\n            fileInput.oncancel = () => resolve(null);\n            fileInput.onerror = reject;\n            fileInput.click();\n        });\n    }\n    return openFile;\n}\nasync function actionGlobalOpenStateFile(pinia) {\n    try {\n        const open = getFileOpener();\n        const result = await open();\n        if (!result)\n            return;\n        const { text, file } = result;\n        loadStoresState(pinia, JSON.parse(text));\n        toastMessage(`Global state imported from \"${file.name}\".`);\n    }\n    catch (error) {\n        toastMessage(`Failed to import the state from JSON. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nfunction loadStoresState(pinia, state) {\n    for (const key in state) {\n        const storeState = pinia.state.value[key];\n        // store is already instantiated, patch it\n        if (storeState) {\n            Object.assign(storeState, state[key]);\n        }\n        else {\n            // store is not instantiated, set the initial state\n            pinia.state.value[key] = state[key];\n        }\n    }\n}\n\nfunction formatDisplay(display) {\n    return {\n        _custom: {\n            display,\n        },\n    };\n}\nconst PINIA_ROOT_LABEL = '\uD83C\uDF4D Pinia (root)';\nconst PINIA_ROOT_ID = '_root';\nfunction formatStoreForInspectorTree(store) {\n    return isPinia(store)\n        ? {\n            id: PINIA_ROOT_ID,\n            label: PINIA_ROOT_LABEL,\n        }\n        : {\n            id: store.$id,\n            label: store.$id,\n        };\n}\nfunction formatStoreForInspectorState(store) {\n    if (isPinia(store)) {\n        const storeNames = Array.from(store._s.keys());\n        const storeMap = store._s;\n        const state = {\n            state: storeNames.map((storeId) => ({\n                editable: true,\n                key: storeId,\n                value: store.state.value[storeId],\n            })),\n            getters: storeNames\n                .filter((id) => storeMap.get(id)._getters)\n                .map((id) => {\n                const store = storeMap.get(id);\n                return {\n                    editable: false,\n                    key: id,\n                    value: store._getters.reduce((getters, key) => {\n                        getters[key] = store[key];\n                        return getters;\n                    }, {}),\n                };\n            }),\n        };\n        return state;\n    }\n    const state = {\n        state: Object.keys(store.$state).map((key) => ({\n            editable: true,\n            key,\n            value: store.$state[key],\n        })),\n    };\n    // avoid adding empty getters\n    if (store._getters && store._getters.length) {\n        state.getters = store._getters.map((getterName) => ({\n            editable: false,\n            key: getterName,\n            value: store[getterName],\n        }));\n    }\n    if (store._customProperties.size) {\n        state.customProperties = Array.from(store._customProperties).map((key) => ({\n            editable: true,\n            key,\n            value: store[key],\n        }));\n    }\n    return state;\n}\nfunction formatEventData(events) {\n    if (!events)\n        return {};\n    if (Array.isArray(events)) {\n        // TODO: handle add and delete for arrays and objects\n        return events.reduce((data, event) => {\n            data.keys.push(event.key);\n            data.operations.push(event.type);\n            data.oldValue[event.key] = event.oldValue;\n            data.newValue[event.key] = event.newValue;\n            return data;\n        }, {\n            oldValue: {},\n            keys: [],\n            operations: [],\n            newValue: {},\n        });\n    }\n    else {\n        return {\n            operation: formatDisplay(events.type),\n            key: formatDisplay(events.key),\n            oldValue: events.oldValue,\n            newValue: events.newValue,\n        };\n    }\n}\nfunction formatMutationType(type) {\n    switch (type) {\n        case MutationType.direct:\n            return 'mutation';\n        case MutationType.patchFunction:\n            return '$patch';\n        case MutationType.patchObject:\n            return '$patch';\n        default:\n            return 'unknown';\n    }\n}\n\n// timeline can be paused when directly changing the state\nlet isTimelineActive = true;\nconst componentStateTypes = [];\nconst MUTATIONS_LAYER_ID = 'pinia:mutations';\nconst INSPECTOR_ID = 'pinia';\nconst { assign: assign$1 } = Object;\n/**\n * Gets the displayed name of a store in devtools\n *\n * @param id - id of the store\n * @returns a formatted string\n */\nconst getStoreType = (id) => '\uD83C\uDF4D ' + id;\n/**\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\n * as soon as it is added to the application.\n *\n * @param app - Vue application\n * @param pinia - pinia instance\n */\nfunction registerPiniaDevtools(app, pinia) {\n    setupDevtoolsPlugin({\n        id: 'dev.esm.pinia',\n        label: 'Pinia \uD83C\uDF4D',\n        logo: 'https://pinia.vuejs.org/logo.svg',\n        packageName: 'pinia',\n        homepage: 'https://pinia.vuejs.org',\n        componentStateTypes,\n        app,\n    }, (api) => {\n        if (typeof api.now !== 'function') {\n            toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n        }\n        api.addTimelineLayer({\n            id: MUTATIONS_LAYER_ID,\n            label: `Pinia \uD83C\uDF4D`,\n            color: 0xe5df88,\n        });\n        api.addInspector({\n            id: INSPECTOR_ID,\n            label: 'Pinia \uD83C\uDF4D',\n            icon: 'storage',\n            treeFilterPlaceholder: 'Search stores',\n            actions: [\n                {\n                    icon: 'content_copy',\n                    action: () => {\n                        actionGlobalCopyState(pinia);\n                    },\n                    tooltip: 'Serialize and copy the state',\n                },\n                {\n                    icon: 'content_paste',\n                    action: async () => {\n                        await actionGlobalPasteState(pinia);\n                        api.sendInspectorTree(INSPECTOR_ID);\n                        api.sendInspectorState(INSPECTOR_ID);\n                    },\n                    tooltip: 'Replace the state with the content of your clipboard',\n                },\n                {\n                    icon: 'save',\n                    action: () => {\n                        actionGlobalSaveState(pinia);\n                    },\n                    tooltip: 'Save the state as a JSON file',\n                },\n                {\n                    icon: 'folder_open',\n                    action: async () => {\n                        await actionGlobalOpenStateFile(pinia);\n                        api.sendInspectorTree(INSPECTOR_ID);\n                        api.sendInspectorState(INSPECTOR_ID);\n                    },\n                    tooltip: 'Import the state from a JSON file',\n                },\n            ],\n            nodeActions: [\n                {\n                    icon: 'restore',\n                    tooltip: 'Reset the state (with \"$reset\")',\n                    action: (nodeId) => {\n                        const store = pinia._s.get(nodeId);\n                        if (!store) {\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it wasn't found.`, 'warn');\n                        }\n                        else if (typeof store.$reset !== 'function') {\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it doesn't have a \"$reset\" method implemented.`, 'warn');\n                        }\n                        else {\n                            store.$reset();\n                            toastMessage(`Store \"${nodeId}\" reset.`);\n                        }\n                    },\n                },\n            ],\n        });\n        api.on.inspectComponent((payload, ctx) => {\n            const proxy = (payload.componentInstance &&\n                payload.componentInstance.proxy);\n            if (proxy && proxy._pStores) {\n                const piniaStores = payload.componentInstance.proxy._pStores;\n                Object.values(piniaStores).forEach((store) => {\n                    payload.instanceData.state.push({\n                        type: getStoreType(store.$id),\n                        key: 'state',\n                        editable: true,\n                        value: store._isOptionsAPI\n                            ? {\n                                _custom: {\n                                    value: toRaw(store.$state),\n                                    actions: [\n                                        {\n                                            icon: 'restore',\n                                            tooltip: 'Reset the state of this store',\n                                            action: () => store.$reset(),\n                                        },\n                                    ],\n                                },\n                            }\n                            : // NOTE: workaround to unwrap transferred refs\n                                Object.keys(store.$state).reduce((state, key) => {\n                                    state[key] = store.$state[key];\n                                    return state;\n                                }, {}),\n                    });\n                    if (store._getters && store._getters.length) {\n                        payload.instanceData.state.push({\n                            type: getStoreType(store.$id),\n                            key: 'getters',\n                            editable: false,\n                            value: store._getters.reduce((getters, key) => {\n                                try {\n                                    getters[key] = store[key];\n                                }\n                                catch (error) {\n                                    // @ts-expect-error: we just want to show it in devtools\n                                    getters[key] = error;\n                                }\n                                return getters;\n                            }, {}),\n                        });\n                    }\n                });\n            }\n        });\n        api.on.getInspectorTree((payload) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                let stores = [pinia];\n                stores = stores.concat(Array.from(pinia._s.values()));\n                payload.rootNodes = (payload.filter\n                    ? stores.filter((store) => '$id' in store\n                        ? store.$id\n                            .toLowerCase()\n                            .includes(payload.filter.toLowerCase())\n                        : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase()))\n                    : stores).map(formatStoreForInspectorTree);\n            }\n        });\n        api.on.getInspectorState((payload) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\n                    ? pinia\n                    : pinia._s.get(payload.nodeId);\n                if (!inspectedStore) {\n                    // this could be the selected store restored for a different project\n                    // so it's better not to say anything here\n                    return;\n                }\n                if (inspectedStore) {\n                    payload.state = formatStoreForInspectorState(inspectedStore);\n                }\n            }\n        });\n        api.on.editInspectorState((payload, ctx) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\n                    ? pinia\n                    : pinia._s.get(payload.nodeId);\n                if (!inspectedStore) {\n                    return toastMessage(`store \"${payload.nodeId}\" not found`, 'error');\n                }\n                const { path } = payload;\n                if (!isPinia(inspectedStore)) {\n                    // access only the state\n                    if (path.length !== 1 ||\n                        !inspectedStore._customProperties.has(path[0]) ||\n                        path[0] in inspectedStore.$state) {\n                        path.unshift('$state');\n                    }\n                }\n                else {\n                    // Root access, we can omit the `.value` because the devtools API does it for us\n                    path.unshift('state');\n                }\n                isTimelineActive = false;\n                payload.set(inspectedStore, path, payload.state.value);\n                isTimelineActive = true;\n            }\n        });\n        api.on.editComponentState((payload) => {\n            if (payload.type.startsWith('\uD83C\uDF4D')) {\n                const storeId = payload.type.replace(/^\uD83C\uDF4D\\s*/, '');\n                const store = pinia._s.get(storeId);\n                if (!store) {\n                    return toastMessage(`store \"${storeId}\" not found`, 'error');\n                }\n                const { path } = payload;\n                if (path[0] !== 'state') {\n                    return toastMessage(`Invalid path for store \"${storeId}\":\\n${path}\\nOnly state can be modified.`);\n                }\n                // rewrite the first entry to be able to directly set the state as\n                // well as any other path\n                path[0] = '$state';\n                isTimelineActive = false;\n                payload.set(store, path, payload.state.value);\n                isTimelineActive = true;\n            }\n        });\n    });\n}\nfunction addStoreToDevtools(app, store) {\n    if (!componentStateTypes.includes(getStoreType(store.$id))) {\n        componentStateTypes.push(getStoreType(store.$id));\n    }\n    setupDevtoolsPlugin({\n        id: 'dev.esm.pinia',\n        label: 'Pinia \uD83C\uDF4D',\n        logo: 'https://pinia.vuejs.org/logo.svg',\n        packageName: 'pinia',\n        homepage: 'https://pinia.vuejs.org',\n        componentStateTypes,\n        app,\n        settings: {\n            logStoreChanges: {\n                label: 'Notify about new/deleted stores',\n                type: 'boolean',\n                defaultValue: true,\n            },\n            // useEmojis: {\n            //   label: 'Use emojis in messages \u26A1\uFE0F',\n            //   type: 'boolean',\n            //   defaultValue: true,\n            // },\n        },\n    }, (api) => {\n        // gracefully handle errors\n        const now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\n        store.$onAction(({ after, onError, name, args }) => {\n            const groupId = runningActionId++;\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                    time: now(),\n                    title: '\uD83D\uDEEB ' + name,\n                    subtitle: 'start',\n                    data: {\n                        store: formatDisplay(store.$id),\n                        action: formatDisplay(name),\n                        args,\n                    },\n                    groupId,\n                },\n            });\n            after((result) => {\n                activeAction = undefined;\n                api.addTimelineEvent({\n                    layerId: MUTATIONS_LAYER_ID,\n                    event: {\n                        time: now(),\n                        title: '\uD83D\uDEEC ' + name,\n                        subtitle: 'end',\n                        data: {\n                            store: formatDisplay(store.$id),\n                            action: formatDisplay(name),\n                            args,\n                            result,\n                        },\n                        groupId,\n                    },\n                });\n            });\n            onError((error) => {\n                activeAction = undefined;\n                api.addTimelineEvent({\n                    layerId: MUTATIONS_LAYER_ID,\n                    event: {\n                        time: now(),\n                        logType: 'error',\n                        title: '\uD83D\uDCA5 ' + name,\n                        subtitle: 'end',\n                        data: {\n                            store: formatDisplay(store.$id),\n                            action: formatDisplay(name),\n                            args,\n                            error,\n                        },\n                        groupId,\n                    },\n                });\n            });\n        }, true);\n        store._customProperties.forEach((name) => {\n            watch(() => unref(store[name]), (newValue, oldValue) => {\n                api.notifyComponentUpdate();\n                api.sendInspectorState(INSPECTOR_ID);\n                if (isTimelineActive) {\n                    api.addTimelineEvent({\n                        layerId: MUTATIONS_LAYER_ID,\n                        event: {\n                            time: now(),\n                            title: 'Change',\n                            subtitle: name,\n                            data: {\n                                newValue,\n                                oldValue,\n                            },\n                            groupId: activeAction,\n                        },\n                    });\n                }\n            }, { deep: true });\n        });\n        store.$subscribe(({ events, type }, state) => {\n            api.notifyComponentUpdate();\n            api.sendInspectorState(INSPECTOR_ID);\n            if (!isTimelineActive)\n                return;\n            // rootStore.state[store.id] = state\n            const eventData = {\n                time: now(),\n                title: formatMutationType(type),\n                data: assign$1({ store: formatDisplay(store.$id) }, formatEventData(events)),\n                groupId: activeAction,\n            };\n            if (type === MutationType.patchFunction) {\n                eventData.subtitle = '\u2935\uFE0F';\n            }\n            else if (type === MutationType.patchObject) {\n                eventData.subtitle = '\uD83E\uDDE9';\n            }\n            else if (events && !Array.isArray(events)) {\n                eventData.subtitle = events.type;\n            }\n            if (events) {\n                eventData.data['rawEvent(s)'] = {\n                    _custom: {\n                        display: 'DebuggerEvent',\n                        type: 'object',\n                        tooltip: 'raw DebuggerEvent[]',\n                        value: events,\n                    },\n                };\n            }\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: eventData,\n            });\n        }, { detached: true, flush: 'sync' });\n        const hotUpdate = store._hotUpdate;\n        store._hotUpdate = markRaw((newStore) => {\n            hotUpdate(newStore);\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                    time: now(),\n                    title: '\uD83D\uDD25 ' + store.$id,\n                    subtitle: 'HMR update',\n                    data: {\n                        store: formatDisplay(store.$id),\n                        info: formatDisplay(`HMR update`),\n                    },\n                },\n            });\n            // update the devtools too\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(INSPECTOR_ID);\n            api.sendInspectorState(INSPECTOR_ID);\n        });\n        const { $dispose } = store;\n        store.$dispose = () => {\n            $dispose();\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(INSPECTOR_ID);\n            api.sendInspectorState(INSPECTOR_ID);\n            api.getSettings().logStoreChanges &&\n                toastMessage(`Disposed \"${store.$id}\" store \uD83D\uDDD1`);\n        };\n        // trigger an update so it can display new registered stores\n        api.notifyComponentUpdate();\n        api.sendInspectorTree(INSPECTOR_ID);\n        api.sendInspectorState(INSPECTOR_ID);\n        api.getSettings().logStoreChanges &&\n            toastMessage(`\"${store.$id}\" store installed \uD83C\uDD95`);\n    });\n}\nlet runningActionId = 0;\nlet activeAction;\n/**\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\n * mutation to the action.\n *\n * @param store - store to patch\n * @param actionNames - list of actionst to patch\n */\nfunction patchActionForGrouping(store, actionNames, wrapWithProxy) {\n    // original actions of the store as they are given by pinia. We are going to override them\n    const actions = actionNames.reduce((storeActions, actionName) => {\n        // use toRaw to avoid tracking #541\n        storeActions[actionName] = toRaw(store)[actionName];\n        return storeActions;\n    }, {});\n    for (const actionName in actions) {\n        store[actionName] = function () {\n            // the running action id is incremented in a before action hook\n            const _actionId = runningActionId;\n            const trackedStore = wrapWithProxy\n                ? new Proxy(store, {\n                    get(...args) {\n                        activeAction = _actionId;\n                        return Reflect.get(...args);\n                    },\n                    set(...args) {\n                        activeAction = _actionId;\n                        return Reflect.set(...args);\n                    },\n                })\n                : store;\n            // For Setup Stores we need https://github.com/tc39/proposal-async-context\n            activeAction = _actionId;\n            const retValue = actions[actionName].apply(trackedStore, arguments);\n            // this is safer as async actions in Setup Stores would associate mutations done outside of the action\n            activeAction = undefined;\n            return retValue;\n        };\n    }\n}\n/**\n * pinia.use(devtoolsPlugin)\n */\nfunction devtoolsPlugin({ app, store, options }) {\n    // HMR module\n    if (store.$id.startsWith('__hot:')) {\n        return;\n    }\n    // detect option api vs setup api\n    store._isOptionsAPI = !!options.state;\n    patchActionForGrouping(store, Object.keys(options.actions), store._isOptionsAPI);\n    // Upgrade the HMR to also update the new actions\n    const originalHotUpdate = store._hotUpdate;\n    toRaw(store)._hotUpdate = function (newStore) {\n        originalHotUpdate.apply(this, arguments);\n        patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions), !!store._isOptionsAPI);\n    };\n    addStoreToDevtools(app, \n    // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n    store);\n}\n\n/**\n * Creates a Pinia instance to be used by the application\n */\nfunction createPinia() {\n    const scope = effectScope(true);\n    // NOTE: here we could check the window object for a state and directly set it\n    // if there is anything like it with Vue 3 SSR\n    const state = scope.run(() => ref({}));\n    let _p = [];\n    // plugins added before calling app.use(pinia)\n    let toBeInstalled = [];\n    const pinia = markRaw({\n        install(app) {\n            // this allows calling useStore() outside of a component setup after\n            // installing pinia's plugin\n            setActivePinia(pinia);\n            if (!isVue2) {\n                pinia._a = app;\n                app.provide(piniaSymbol, pinia);\n                app.config.globalProperties.$pinia = pinia;\n                /* istanbul ignore else */\n                if (USE_DEVTOOLS) {\n                    registerPiniaDevtools(app, pinia);\n                }\n                toBeInstalled.forEach((plugin) => _p.push(plugin));\n                toBeInstalled = [];\n            }\n        },\n        use(plugin) {\n            if (!this._a && !isVue2) {\n                toBeInstalled.push(plugin);\n            }\n            else {\n                _p.push(plugin);\n            }\n            return this;\n        },\n        _p,\n        // it's actually undefined here\n        // @ts-expect-error\n        _a: null,\n        _e: scope,\n        _s: new Map(),\n        state,\n    });\n    // pinia devtools rely on dev only features so they cannot be forced unless\n    // the dev build of Vue is used. Avoid old browsers like IE11.\n    if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\n        pinia.use(devtoolsPlugin);\n    }\n    return pinia;\n}\n\n/**\n * Checks if a function is a `StoreDefinition`.\n *\n * @param fn - object to test\n * @returns true if `fn` is a StoreDefinition\n */\nconst isUseStore = (fn) => {\n    return typeof fn === 'function' && typeof fn.$id === 'string';\n};\n/**\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\n * remove any key not existing in `newState` and recursively merge plain\n * objects.\n *\n * @param newState - new state object to be patched\n * @param oldState - old state that should be used to patch newState\n * @returns - newState\n */\nfunction patchObject(newState, oldState) {\n    // no need to go through symbols because they cannot be serialized anyway\n    for (const key in oldState) {\n        const subPatch = oldState[key];\n        // skip the whole sub tree\n        if (!(key in newState)) {\n            continue;\n        }\n        const targetValue = newState[key];\n        if (isPlainObject(targetValue) &&\n            isPlainObject(subPatch) &&\n            !isRef(subPatch) &&\n            !isReactive(subPatch)) {\n            newState[key] = patchObject(targetValue, subPatch);\n        }\n        else {\n            // objects are either a bit more complex (e.g. refs) or primitives, so we\n            // just set the whole thing\n            if (isVue2) {\n                set(newState, key, subPatch);\n            }\n            else {\n                newState[key] = subPatch;\n            }\n        }\n    }\n    return newState;\n}\n/**\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\n *\n * @example\n * ```js\n * const useUser = defineStore(...)\n * if (import.meta.hot) {\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\n * }\n * ```\n *\n * @param initialUseStore - return of the defineStore to hot update\n * @param hot - `import.meta.hot`\n */\nfunction acceptHMRUpdate(initialUseStore, hot) {\n    // strip as much as possible from iife.prod\n    if (!(process.env.NODE_ENV !== 'production')) {\n        return () => { };\n    }\n    return (newModule) => {\n        const pinia = hot.data.pinia || initialUseStore._pinia;\n        if (!pinia) {\n            // this store is still not used\n            return;\n        }\n        // preserve the pinia instance across loads\n        hot.data.pinia = pinia;\n        // console.log('got data', newStore)\n        for (const exportName in newModule) {\n            const useStore = newModule[exportName];\n            // console.log('checking for', exportName)\n            if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n                // console.log('Accepting update for', useStore.$id)\n                const id = useStore.$id;\n                if (id !== initialUseStore.$id) {\n                    console.warn(`The id of the store changed from \"${initialUseStore.$id}\" to \"${id}\". Reloading.`);\n                    // return import.meta.hot.invalidate()\n                    return hot.invalidate();\n                }\n                const existingStore = pinia._s.get(id);\n                if (!existingStore) {\n                    console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);\n                    return;\n                }\n                useStore(pinia, existingStore);\n            }\n        }\n    };\n}\n\nconst noop = () => { };\nfunction addSubscription(subscriptions, callback, detached, onCleanup = noop) {\n    subscriptions.push(callback);\n    const removeSubscription = () => {\n        const idx = subscriptions.indexOf(callback);\n        if (idx > -1) {\n            subscriptions.splice(idx, 1);\n            onCleanup();\n        }\n    };\n    if (!detached && getCurrentScope()) {\n        onScopeDispose(removeSubscription);\n    }\n    return removeSubscription;\n}\nfunction triggerSubscriptions(subscriptions, ...args) {\n    subscriptions.slice().forEach((callback) => {\n        callback(...args);\n    });\n}\n\nconst fallbackRunWithContext = (fn) => fn();\nfunction mergeReactiveObjects(target, patchToApply) {\n    // Handle Map instances\n    if (target instanceof Map && patchToApply instanceof Map) {\n        patchToApply.forEach((value, key) => target.set(key, value));\n    }\n    // Handle Set instances\n    if (target instanceof Set && patchToApply instanceof Set) {\n        patchToApply.forEach(target.add, target);\n    }\n    // no need to go through symbols because they cannot be serialized anyway\n    for (const key in patchToApply) {\n        if (!patchToApply.hasOwnProperty(key))\n            continue;\n        const subPatch = patchToApply[key];\n        const targetValue = target[key];\n        if (isPlainObject(targetValue) &&\n            isPlainObject(subPatch) &&\n            target.hasOwnProperty(key) &&\n            !isRef(subPatch) &&\n            !isReactive(subPatch)) {\n            // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n            // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n            // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n            target[key] = mergeReactiveObjects(targetValue, subPatch);\n        }\n        else {\n            // @ts-expect-error: subPatch is a valid value\n            target[key] = subPatch;\n        }\n    }\n    return target;\n}\nconst skipHydrateSymbol = (process.env.NODE_ENV !== 'production')\n    ? Symbol('pinia:skipHydration')\n    : /* istanbul ignore next */ Symbol();\nconst skipHydrateMap = /*#__PURE__*/ new WeakMap();\n/**\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\n *\n * @param obj - target object\n * @returns obj\n */\nfunction skipHydrate(obj) {\n    return isVue2\n        ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\n            /* istanbul ignore next */ skipHydrateMap.set(obj, 1) && obj\n        : Object.defineProperty(obj, skipHydrateSymbol, {});\n}\n/**\n * Returns whether a value should be hydrated\n *\n * @param obj - target variable\n * @returns true if `obj` should be hydrated\n */\nfunction shouldHydrate(obj) {\n    return isVue2\n        ? /* istanbul ignore next */ !skipHydrateMap.has(obj)\n        : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\n}\nconst { assign } = Object;\nfunction isComputed(o) {\n    return !!(isRef(o) && o.effect);\n}\nfunction createOptionsStore(id, options, pinia, hot) {\n    const { state, actions, getters } = options;\n    const initialState = pinia.state.value[id];\n    let store;\n    function setup() {\n        if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n            /* istanbul ignore if */\n            if (isVue2) {\n                set(pinia.state.value, id, state ? state() : {});\n            }\n            else {\n                pinia.state.value[id] = state ? state() : {};\n            }\n        }\n        // avoid creating a state in pinia.state.value\n        const localState = (process.env.NODE_ENV !== 'production') && hot\n            ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\n                toRefs(ref(state ? state() : {}).value)\n            : toRefs(pinia.state.value[id]);\n        return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {\n            if ((process.env.NODE_ENV !== 'production') && name in localState) {\n                console.warn(`[\uD83C\uDF4D]: A getter cannot have the same name as another state property. Rename one of them. Found with \"${name}\" in store \"${id}\".`);\n            }\n            computedGetters[name] = markRaw(computed(() => {\n                setActivePinia(pinia);\n                // it was created just before\n                const store = pinia._s.get(id);\n                // allow cross using stores\n                /* istanbul ignore next */\n                if (isVue2 && !store._r)\n                    return;\n                // @ts-expect-error\n                // return getters![name].call(context, context)\n                // TODO: avoid reading the getter while assigning with a global variable\n                return getters[name].call(store, store);\n            }));\n            return computedGetters;\n        }, {}));\n    }\n    store = createSetupStore(id, setup, options, pinia, hot, true);\n    return store;\n}\nfunction createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {\n    let scope;\n    const optionsForPlugin = assign({ actions: {} }, options);\n    /* istanbul ignore if */\n    if ((process.env.NODE_ENV !== 'production') && !pinia._e.active) {\n        throw new Error('Pinia destroyed');\n    }\n    // watcher options for $subscribe\n    const $subscribeOptions = {\n        deep: true,\n        // flush: 'post',\n    };\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production') && !isVue2) {\n        $subscribeOptions.onTrigger = (event) => {\n            /* istanbul ignore else */\n            if (isListening) {\n                debuggerEvents = event;\n                // avoid triggering this while the store is being built and the state is being set in pinia\n            }\n            else if (isListening == false && !store._hotUpdating) {\n                // let patch send all the events together later\n                /* istanbul ignore else */\n                if (Array.isArray(debuggerEvents)) {\n                    debuggerEvents.push(event);\n                }\n                else {\n                    console.error('\uD83C\uDF4D debuggerEvents should be an array. This is most likely an internal Pinia bug.');\n                }\n            }\n        };\n    }\n    // internal state\n    let isListening; // set to true at the end\n    let isSyncListening; // set to true at the end\n    let subscriptions = [];\n    let actionSubscriptions = [];\n    let debuggerEvents;\n    const initialState = pinia.state.value[$id];\n    // avoid setting the state for option stores if it is set\n    // by the setup\n    if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n        /* istanbul ignore if */\n        if (isVue2) {\n            set(pinia.state.value, $id, {});\n        }\n        else {\n            pinia.state.value[$id] = {};\n        }\n    }\n    const hotState = ref({});\n    // avoid triggering too many listeners\n    // https://github.com/vuejs/pinia/issues/1129\n    let activeListener;\n    function $patch(partialStateOrMutator) {\n        let subscriptionMutation;\n        isListening = isSyncListening = false;\n        // reset the debugger events since patches are sync\n        /* istanbul ignore else */\n        if ((process.env.NODE_ENV !== 'production')) {\n            debuggerEvents = [];\n        }\n        if (typeof partialStateOrMutator === 'function') {\n            partialStateOrMutator(pinia.state.value[$id]);\n            subscriptionMutation = {\n                type: MutationType.patchFunction,\n                storeId: $id,\n                events: debuggerEvents,\n            };\n        }\n        else {\n            mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\n            subscriptionMutation = {\n                type: MutationType.patchObject,\n                payload: partialStateOrMutator,\n                storeId: $id,\n                events: debuggerEvents,\n            };\n        }\n        const myListenerId = (activeListener = Symbol());\n        nextTick().then(() => {\n            if (activeListener === myListenerId) {\n                isListening = true;\n            }\n        });\n        isSyncListening = true;\n        // because we paused the watcher, we need to manually call the subscriptions\n        triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\n    }\n    const $reset = isOptionsStore\n        ? function $reset() {\n            const { state } = options;\n            const newState = state ? state() : {};\n            // we use a patch to group all changes into one single subscription\n            this.$patch(($state) => {\n                assign($state, newState);\n            });\n        }\n        : /* istanbul ignore next */\n            (process.env.NODE_ENV !== 'production')\n                ? () => {\n                    throw new Error(`\uD83C\uDF4D: Store \"${$id}\" is built using the setup syntax and does not implement $reset().`);\n                }\n                : noop;\n    function $dispose() {\n        scope.stop();\n        subscriptions = [];\n        actionSubscriptions = [];\n        pinia._s.delete($id);\n    }\n    /**\n     * Wraps an action to handle subscriptions.\n     *\n     * @param name - name of the action\n     * @param action - action to wrap\n     * @returns a wrapped action to handle subscriptions\n     */\n    function wrapAction(name, action) {\n        return function () {\n            setActivePinia(pinia);\n            const args = Array.from(arguments);\n            const afterCallbackList = [];\n            const onErrorCallbackList = [];\n            function after(callback) {\n                afterCallbackList.push(callback);\n            }\n            function onError(callback) {\n                onErrorCallbackList.push(callback);\n            }\n            // @ts-expect-error\n            triggerSubscriptions(actionSubscriptions, {\n                args,\n                name,\n                store,\n                after,\n                onError,\n            });\n            let ret;\n            try {\n                ret = action.apply(this && this.$id === $id ? this : store, args);\n                // handle sync errors\n            }\n            catch (error) {\n                triggerSubscriptions(onErrorCallbackList, error);\n                throw error;\n            }\n            if (ret instanceof Promise) {\n                return ret\n                    .then((value) => {\n                    triggerSubscriptions(afterCallbackList, value);\n                    return value;\n                })\n                    .catch((error) => {\n                    triggerSubscriptions(onErrorCallbackList, error);\n                    return Promise.reject(error);\n                });\n            }\n            // trigger after callbacks\n            triggerSubscriptions(afterCallbackList, ret);\n            return ret;\n        };\n    }\n    const _hmrPayload = /*#__PURE__*/ markRaw({\n        actions: {},\n        getters: {},\n        state: [],\n        hotState,\n    });\n    const partialStore = {\n        _p: pinia,\n        // _s: scope,\n        $id,\n        $onAction: addSubscription.bind(null, actionSubscriptions),\n        $patch,\n        $reset,\n        $subscribe(callback, options = {}) {\n            const removeSubscription = addSubscription(subscriptions, callback, options.detached, () => stopWatcher());\n            const stopWatcher = scope.run(() => watch(() => pinia.state.value[$id], (state) => {\n                if (options.flush === 'sync' ? isSyncListening : isListening) {\n                    callback({\n                        storeId: $id,\n                        type: MutationType.direct,\n                        events: debuggerEvents,\n                    }, state);\n                }\n            }, assign({}, $subscribeOptions, options)));\n            return removeSubscription;\n        },\n        $dispose,\n    };\n    /* istanbul ignore if */\n    if (isVue2) {\n        // start as non ready\n        partialStore._r = false;\n    }\n    const store = reactive((process.env.NODE_ENV !== 'production') || USE_DEVTOOLS\n        ? assign({\n            _hmrPayload,\n            _customProperties: markRaw(new Set()), // devtools custom properties\n        }, partialStore\n        // must be added later\n        // setupStore\n        )\n        : partialStore);\n    // store the partial store now so the setup of stores can instantiate each other before they are finished without\n    // creating infinite loops.\n    pinia._s.set($id, store);\n    const runWithContext = (pinia._a && pinia._a.runWithContext) || fallbackRunWithContext;\n    // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n    const setupStore = runWithContext(() => pinia._e.run(() => (scope = effectScope()).run(setup)));\n    // overwrite existing actions to support $onAction\n    for (const key in setupStore) {\n        const prop = setupStore[key];\n        if ((isRef(prop) && !isComputed(prop)) || isReactive(prop)) {\n            // mark it as a piece of state to be serialized\n            if ((process.env.NODE_ENV !== 'production') && hot) {\n                set(hotState.value, key, toRef(setupStore, key));\n                // createOptionStore directly sets the state in pinia.state.value so we\n                // can just skip that\n            }\n            else if (!isOptionsStore) {\n                // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n                if (initialState && shouldHydrate(prop)) {\n                    if (isRef(prop)) {\n                        prop.value = initialState[key];\n                    }\n                    else {\n                        // probably a reactive object, lets recursively assign\n                        // @ts-expect-error: prop is unknown\n                        mergeReactiveObjects(prop, initialState[key]);\n                    }\n                }\n                // transfer the ref to the pinia state to keep everything in sync\n                /* istanbul ignore if */\n                if (isVue2) {\n                    set(pinia.state.value[$id], key, prop);\n                }\n                else {\n                    pinia.state.value[$id][key] = prop;\n                }\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                _hmrPayload.state.push(key);\n            }\n            // action\n        }\n        else if (typeof prop === 'function') {\n            // @ts-expect-error: we are overriding the function we avoid wrapping if\n            const actionValue = (process.env.NODE_ENV !== 'production') && hot ? prop : wrapAction(key, prop);\n            // this a hot module replacement store because the hotUpdate method needs\n            // to do it with the right context\n            /* istanbul ignore if */\n            if (isVue2) {\n                set(setupStore, key, actionValue);\n            }\n            else {\n                // @ts-expect-error\n                setupStore[key] = actionValue;\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                _hmrPayload.actions[key] = prop;\n            }\n            // list actions so they can be used in plugins\n            // @ts-expect-error\n            optionsForPlugin.actions[key] = prop;\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            // add getters for devtools\n            if (isComputed(prop)) {\n                _hmrPayload.getters[key] = isOptionsStore\n                    ? // @ts-expect-error\n                        options.getters[key]\n                    : prop;\n                if (IS_CLIENT) {\n                    const getters = setupStore._getters ||\n                        // @ts-expect-error: same\n                        (setupStore._getters = markRaw([]));\n                    getters.push(key);\n                }\n            }\n        }\n    }\n    // add the state, getters, and action properties\n    /* istanbul ignore if */\n    if (isVue2) {\n        Object.keys(setupStore).forEach((key) => {\n            set(store, key, setupStore[key]);\n        });\n    }\n    else {\n        assign(store, setupStore);\n        // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n        // Make `storeToRefs()` work with `reactive()` #799\n        assign(toRaw(store), setupStore);\n    }\n    // use this instead of a computed with setter to be able to create it anywhere\n    // without linking the computed lifespan to wherever the store is first\n    // created.\n    Object.defineProperty(store, '$state', {\n        get: () => ((process.env.NODE_ENV !== 'production') && hot ? hotState.value : pinia.state.value[$id]),\n        set: (state) => {\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production') && hot) {\n                throw new Error('cannot set hotState');\n            }\n            $patch(($state) => {\n                assign($state, state);\n            });\n        },\n    });\n    // add the hotUpdate before plugins to allow them to override it\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production')) {\n        store._hotUpdate = markRaw((newStore) => {\n            store._hotUpdating = true;\n            newStore._hmrPayload.state.forEach((stateKey) => {\n                if (stateKey in store.$state) {\n                    const newStateTarget = newStore.$state[stateKey];\n                    const oldStateSource = store.$state[stateKey];\n                    if (typeof newStateTarget === 'object' &&\n                        isPlainObject(newStateTarget) &&\n                        isPlainObject(oldStateSource)) {\n                        patchObject(newStateTarget, oldStateSource);\n                    }\n                    else {\n                        // transfer the ref\n                        newStore.$state[stateKey] = oldStateSource;\n                    }\n                }\n                // patch direct access properties to allow store.stateProperty to work as\n                // store.$state.stateProperty\n                set(store, stateKey, toRef(newStore.$state, stateKey));\n            });\n            // remove deleted state properties\n            Object.keys(store.$state).forEach((stateKey) => {\n                if (!(stateKey in newStore.$state)) {\n                    del(store, stateKey);\n                }\n            });\n            // avoid devtools logging this as a mutation\n            isListening = false;\n            isSyncListening = false;\n            pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\n            isSyncListening = true;\n            nextTick().then(() => {\n                isListening = true;\n            });\n            for (const actionName in newStore._hmrPayload.actions) {\n                const action = newStore[actionName];\n                set(store, actionName, wrapAction(actionName, action));\n            }\n            // TODO: does this work in both setup and option store?\n            for (const getterName in newStore._hmrPayload.getters) {\n                const getter = newStore._hmrPayload.getters[getterName];\n                const getterValue = isOptionsStore\n                    ? // special handling of options api\n                        computed(() => {\n                            setActivePinia(pinia);\n                            return getter.call(store, store);\n                        })\n                    : getter;\n                set(store, getterName, getterValue);\n            }\n            // remove deleted getters\n            Object.keys(store._hmrPayload.getters).forEach((key) => {\n                if (!(key in newStore._hmrPayload.getters)) {\n                    del(store, key);\n                }\n            });\n            // remove old actions\n            Object.keys(store._hmrPayload.actions).forEach((key) => {\n                if (!(key in newStore._hmrPayload.actions)) {\n                    del(store, key);\n                }\n            });\n            // update the values used in devtools and to allow deleting new properties later on\n            store._hmrPayload = newStore._hmrPayload;\n            store._getters = newStore._getters;\n            store._hotUpdating = false;\n        });\n    }\n    if (USE_DEVTOOLS) {\n        const nonEnumerable = {\n            writable: true,\n            configurable: true,\n            // avoid warning on devtools trying to display this property\n            enumerable: false,\n        };\n        ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach((p) => {\n            Object.defineProperty(store, p, assign({ value: store[p] }, nonEnumerable));\n        });\n    }\n    /* istanbul ignore if */\n    if (isVue2) {\n        // mark the store as ready before plugins\n        store._r = true;\n    }\n    // apply all plugins\n    pinia._p.forEach((extender) => {\n        /* istanbul ignore else */\n        if (USE_DEVTOOLS) {\n            const extensions = scope.run(() => extender({\n                store,\n                app: pinia._a,\n                pinia,\n                options: optionsForPlugin,\n            }));\n            Object.keys(extensions || {}).forEach((key) => store._customProperties.add(key));\n            assign(store, extensions);\n        }\n        else {\n            assign(store, scope.run(() => extender({\n                store,\n                app: pinia._a,\n                pinia,\n                options: optionsForPlugin,\n            })));\n        }\n    });\n    if ((process.env.NODE_ENV !== 'production') &&\n        store.$state &&\n        typeof store.$state === 'object' &&\n        typeof store.$state.constructor === 'function' &&\n        !store.$state.constructor.toString().includes('[native code]')) {\n        console.warn(`[\uD83C\uDF4D]: The \"state\" must be a plain object. It cannot be\\n` +\n            `\\tstate: () => new MyClass()\\n` +\n            `Found in store \"${store.$id}\".`);\n    }\n    // only apply hydrate to option stores with an initial state in pinia\n    if (initialState &&\n        isOptionsStore &&\n        options.hydrate) {\n        options.hydrate(store.$state, initialState);\n    }\n    isListening = true;\n    isSyncListening = true;\n    return store;\n}\nfunction defineStore(\n// TODO: add proper types from above\nidOrOptions, setup, setupOptions) {\n    let id;\n    let options;\n    const isSetupStore = typeof setup === 'function';\n    if (typeof idOrOptions === 'string') {\n        id = idOrOptions;\n        // the option store setup will contain the actual options in this case\n        options = isSetupStore ? setupOptions : setup;\n    }\n    else {\n        options = idOrOptions;\n        id = idOrOptions.id;\n        if ((process.env.NODE_ENV !== 'production') && typeof id !== 'string') {\n            throw new Error(`[\uD83C\uDF4D]: \"defineStore()\" must be passed a store id as its first argument.`);\n        }\n    }\n    function useStore(pinia, hot) {\n        const hasContext = hasInjectionContext();\n        pinia =\n            // in test mode, ignore the argument provided as we can always retrieve a\n            // pinia instance with getActivePinia()\n            ((process.env.NODE_ENV === 'test') && activePinia && activePinia._testing ? null : pinia) ||\n                (hasContext ? inject(piniaSymbol, null) : null);\n        if (pinia)\n            setActivePinia(pinia);\n        if ((process.env.NODE_ENV !== 'production') && !activePinia) {\n            throw new Error(`[\uD83C\uDF4D]: \"getActivePinia()\" was called but there was no active Pinia. Are you trying to use a store before calling \"app.use(pinia)\"?\\n` +\n                `See https://pinia.vuejs.org/core-concepts/outside-component-usage.html for help.\\n` +\n                `This will fail in production.`);\n        }\n        pinia = activePinia;\n        if (!pinia._s.has(id)) {\n            // creating the store registers it in `pinia._s`\n            if (isSetupStore) {\n                createSetupStore(id, setup, options, pinia);\n            }\n            else {\n                createOptionsStore(id, options, pinia);\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                // @ts-expect-error: not the right inferred type\n                useStore._pinia = pinia;\n            }\n        }\n        const store = pinia._s.get(id);\n        if ((process.env.NODE_ENV !== 'production') && hot) {\n            const hotId = '__hot:' + id;\n            const newStore = isSetupStore\n                ? createSetupStore(hotId, setup, options, pinia, true)\n                : createOptionsStore(hotId, assign({}, options), pinia, true);\n            hot._hotUpdate(newStore);\n            // cleanup the state properties and the store from the cache\n            delete pinia.state.value[hotId];\n            pinia._s.delete(hotId);\n        }\n        if ((process.env.NODE_ENV !== 'production') && IS_CLIENT) {\n            const currentInstance = getCurrentInstance();\n            // save stores in instances to access them devtools\n            if (currentInstance &&\n                currentInstance.proxy &&\n                // avoid adding stores that are just built for hot module replacement\n                !hot) {\n                const vm = currentInstance.proxy;\n                const cache = '_pStores' in vm ? vm._pStores : (vm._pStores = {});\n                cache[id] = store;\n            }\n        }\n        // StoreGeneric cannot be casted towards Store\n        return store;\n    }\n    useStore.$id = id;\n    return useStore;\n}\n\nlet mapStoreSuffix = 'Store';\n/**\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\n * interface if you are using TypeScript.\n *\n * @param suffix - new suffix\n */\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\n) {\n    mapStoreSuffix = suffix;\n}\n/**\n * Allows using stores without the composition API (`setup()`) by generating an\n * object to be spread in the `computed` field of a component. It accepts a list\n * of store definitions.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     ...mapStores(useUserStore, useCartStore)\n *   },\n *\n *   created() {\n *     this.userStore // store with id \"user\"\n *     this.cartStore // store with id \"cart\"\n *   }\n * }\n * ```\n *\n * @param stores - list of stores to map to an object\n */\nfunction mapStores(...stores) {\n    if ((process.env.NODE_ENV !== 'production') && Array.isArray(stores[0])) {\n        console.warn(`[\uD83C\uDF4D]: Directly pass all stores to \"mapStores()\" without putting them in an array:\\n` +\n            `Replace\\n` +\n            `\\tmapStores([useAuthStore, useCartStore])\\n` +\n            `with\\n` +\n            `\\tmapStores(useAuthStore, useCartStore)\\n` +\n            `This will fail in production if not fixed.`);\n        stores = stores[0];\n    }\n    return stores.reduce((reduced, useStore) => {\n        // @ts-expect-error: $id is added by defineStore\n        reduced[useStore.$id + mapStoreSuffix] = function () {\n            return useStore(this.$pinia);\n        };\n        return reduced;\n    }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapState(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            reduced[key] = function () {\n                return useStore(this.$pinia)[key];\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function () {\n                const store = useStore(this.$pinia);\n                const storeKey = keysOrMapper[key];\n                // for some reason TS is unable to infer the type of storeKey to be a\n                // function\n                return typeof storeKey === 'function'\n                    ? storeKey.call(this, store)\n                    : store[storeKey];\n            };\n            return reduced;\n        }, {});\n}\n/**\n * Alias for `mapState()`. You should use `mapState()` instead.\n * @deprecated use `mapState()` instead.\n */\nconst mapGetters = mapState;\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapActions(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function (...args) {\n                return useStore(this.$pinia)[key](...args);\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function (...args) {\n                return useStore(this.$pinia)[keysOrMapper[key]](...args);\n            };\n            return reduced;\n        }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapWritableState(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            // @ts-ignore\n            reduced[key] = {\n                get() {\n                    return useStore(this.$pinia)[key];\n                },\n                set(value) {\n                    // it's easier to type it here as any\n                    return (useStore(this.$pinia)[key] = value);\n                },\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-ignore\n            reduced[key] = {\n                get() {\n                    return useStore(this.$pinia)[keysOrMapper[key]];\n                },\n                set(value) {\n                    // it's easier to type it here as any\n                    return (useStore(this.$pinia)[keysOrMapper[key]] = value);\n                },\n            };\n            return reduced;\n        }, {});\n}\n\n/**\n * Creates an object of references with all the state, getters, and plugin-added\n * state properties of the store. Similar to `toRefs()` but specifically\n * designed for Pinia stores so methods and non reactive properties are\n * completely ignored.\n *\n * @param store - store to extract the refs from\n */\nfunction storeToRefs(store) {\n    // See https://github.com/vuejs/pinia/issues/852\n    // It's easier to just use toRefs() even if it includes more stuff\n    if (isVue2) {\n        // @ts-expect-error: toRefs include methods and others\n        return toRefs(store);\n    }\n    else {\n        store = toRaw(store);\n        const refs = {};\n        for (const key in store) {\n            const value = store[key];\n            if (isRef(value) || isReactive(value)) {\n                // @ts-expect-error: the key is state or getter\n                refs[key] =\n                    // ---\n                    toRef(store, key);\n            }\n        }\n        return refs;\n    }\n}\n\n/**\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\n * https://pinia.vuejs.org/ssr/nuxt.html.\n *\n * @example\n * ```js\n * import Vue from 'vue'\n * import { PiniaVuePlugin, createPinia } from 'pinia'\n *\n * Vue.use(PiniaVuePlugin)\n * const pinia = createPinia()\n *\n * new Vue({\n *   el: '#app',\n *   // ...\n *   pinia,\n * })\n * ```\n *\n * @param _Vue - `Vue` imported from 'vue'.\n */\nconst PiniaVuePlugin = function (_Vue) {\n    // Equivalent of\n    // app.config.globalProperties.$pinia = pinia\n    _Vue.mixin({\n        beforeCreate() {\n            const options = this.$options;\n            if (options.pinia) {\n                const pinia = options.pinia;\n                // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n                /* istanbul ignore else */\n                if (!this._provided) {\n                    const provideCache = {};\n                    Object.defineProperty(this, '_provided', {\n                        get: () => provideCache,\n                        set: (v) => Object.assign(provideCache, v),\n                    });\n                }\n                this._provided[piniaSymbol] = pinia;\n                // propagate the pinia instance in an SSR friendly way\n                // avoid adding it to nuxt twice\n                /* istanbul ignore else */\n                if (!this.$pinia) {\n                    this.$pinia = pinia;\n                }\n                pinia._a = this;\n                if (IS_CLIENT) {\n                    // this allows calling useStore() outside of a component setup after\n                    // installing pinia's plugin\n                    setActivePinia(pinia);\n                }\n                if (USE_DEVTOOLS) {\n                    registerPiniaDevtools(pinia._a, pinia);\n                }\n            }\n            else if (!this.$pinia && options.parent && options.parent.$pinia) {\n                this.$pinia = options.parent.$pinia;\n            }\n        },\n        destroyed() {\n            delete this._pStores;\n        },\n    });\n};\n\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, skipHydrate, storeToRefs };\n", "<template>\n    <div>\n        <h3 style=\"font-size: 16px;font-weight: 400; color:#7c7c7c;\">\n           Chart for Amount Saved\n        </h3>\n        <canvas ref=\"chartCanvas\" width=\"400\" height=\"150\"></canvas>\n    </div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue'\nimport { Chart } from 'chart.js/auto'\n\nconst chartCanvas = ref(null)\nconst sdgColors = {\n    \"Clean Water and Sanitation\": \"#26BDE2\",\n    \"Climate Action\": \"#3F7E44\",\n    \"Partnerships for the Goals\": \"#19486A\",\n    \"Industry Innovation and Infrastructure\": \"#FD6925\",\n    \"Decent Work and Economic Growth\": \"#A21942\",\n    \"Responsible Consumption and Production\": \"#BF8B2E\",\n    \"Peace Justice and Strong Institutions\": \"#00689D\",\n    \"Life on Land\": \"#56C02B\",\n    \"Gender Equality\": \"#FF3A21\",\n    \"Life Below Water\": \"#0A97D9\",\n    \"Sustainable Cities and Communities\": \"#FD9D24\",\n    \"Quality Education\": \"#C5192D\",\n    \"No Poverty\": \"#E5243B\",\n    \"Good Health and Well-being\": \"#4C9F38\",\n    \"Affordable and Clean Energy\": \"#FCC30B\",\n    \"Zero Hunger\": \"#DDA63A\",\n    \"Reduced Inequality\": \"#DD1367\"\n}\n\n\nonMounted(() => {\n    frappe.call({\n        method: 'frappe.desk.query_report.run',\n        args: {\n            report_name: 'Chart for Amount Saved'\n        },\n        callback: (r) => {\n            const result = r.message\n\n            if (!result || !result.result || result.result.length <= 1) {\n                console.error(\"No data found in report\")\n                return\n            }\n            console.log(\"result\", result.result)\n\n\n            // const labels = result.result.map(item => item.sdg_name)\n            // const values = result.result.map(item => item.total_hours)\n            const labels = result.result.map(item => item.sdg_name)\n            const values = result.result.map(item => item.work_value_rupees)\n            const backgroundColors = labels.map(label => sdgColors[label] || '#ccc')\n\n\n            if (chartCanvas.value) {\n                new Chart(chartCanvas.value, {\n                    type: 'bar',\n                    data: {\n                        labels,\n                        datasets: [{\n                            label: \"Amount Saved\",\n                            data: values,\n                            backgroundColor: backgroundColors,\n                            hoverBackgroundColor: backgroundColors,\n                            borderColor: 'rgba(153, 102, 255, 1)',\n                            borderWidth: 1\n                        }]\n                    },\n                    options: {\n                        responsive: true,\n                        scales: {\n                            y: {\n                                beginAtZero: true\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    })\n})\n</script>\n\n<style scoped>\ncanvas {\n    max-width: 100%;\n}\n\nh3 {\n    color: white;\n    background-color: #b31717;\n    padding: 10px;\n    text-align: center;\n}\n</style>", "/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n", "/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n", "import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n", "import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n", "import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n", "import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n", "import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n", "const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n", "export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n", "\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n", "import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n", "import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n", "import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n", "import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n", "import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n", "import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates B\u00E9zier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n", "import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n", "import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n", "export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n", "import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n", "import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n", "import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n", "import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n", "import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n", "import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n", "import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n", "/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n", "import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n", "import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n", "\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n", "/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n", "/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n", "import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n", "import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n", "import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n", "import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n", "import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n", "import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n", "import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n", "import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n", "import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, \uD835\uDF03) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n", "import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n", "import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n", "import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n", "import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n", "import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n", "import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n", "import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property, clip});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n", "/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n", "import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n", "import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n", "import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n", "import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n", "import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n", "import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n", "import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n", "import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n", "import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n", "export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n", "import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n", "import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-aa1cc0ba\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"font-size\":\"16px\",\"font-weight\":\"400\",\"color\":\"#7c7c7c\"} }, \" Chart for Amount Saved \", -1 /* HOISTED */))\nconst _hoisted_2 = {\n  ref: \"chartCanvas\",\n  width: \"400\",\n  height: \"150\"\n}\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"canvas\", _hoisted_2, null, 512 /* NEED_PATCH */)\n  ]))\n}", "import script from \"/workspace/development/frappe_docker/frappe-bench/apps/mykartavya/mykartavya/public/js/Amount_saved/amount_saved.vue?type=script\";import \"/workspace/development/frappe_docker/frappe-bench/apps/mykartavya/mykartavya/public/js/Amount_saved/amount_saved.vue?type=style&index=0\";import { render } from \"/workspace/development/frappe_docker/frappe-bench/apps/mykartavya/mykartavya/public/js/Amount_saved/amount_saved.vue?type=template\"; script.render = render;script.__file = \"../mykartavya/mykartavya/public/js/Amount_saved/amount_saved.vue\";script.__scopeId = \"data-v-aa1cc0ba\";export default script;"],
  "mappings": "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,GAAE,GAAE,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,MAAK,IAAG,IAAG,MAAK,IAAG,GAAE,MAAK,KAAI,MAAK,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,MAAK,GAAE,MAAK,IAAG,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,KAAI,MAAK,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,MAAK,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,MAAK,IAAG,GAAE,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,MAAK,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE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AAAA,MACtaAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QAC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",
  "names": ["map", "isArray", "isFunction", "isObject", "index", "Position", "constructor", "line", "col", "index", "column", "SourceLocation", "start", "end", "filename", "identifierName", "createPositionWithColumnOffset", "position", "columnOffset", "code", "ModuleErrors", "ImportMetaOutsideModule", "message", "ImportOutsideModule", "NodeDescriptions", "ArrayPattern", "AssignmentExpression", "AssignmentPattern", "ArrowFunctionExpression", "ConditionalExpression", "CatchClause", "ForOfStatement", "ForInStatement", "ForStatement", "FormalParameters", "Identifier", "ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier", "ObjectPattern", "ParenthesizedExpression", "RestElement", "UpdateExpression", "true", "false", "VariableDeclarator", "YieldExpression", "toNodeDescription", "type", "prefix", "String", "StandardErrors", "AccessorIsGenerator", "kind", "ArgumentsInClass", "AsyncFunctionInSingleStatementContext", "AwaitBindingIdentifier", "AwaitBindingIdentifierInStaticBlock", "AwaitExpressionFormalParameter", "AwaitUsingNotInAsyncContext", "AwaitNotInAsyncContext", "AwaitNotInAsyncFunction", "BadGetterArity", "BadSetterArity", "BadSetterRestParameter", "ConstructorClassField", "ConstructorClassPrivateField", "ConstructorIsAccessor", "ConstructorIsAsync", "ConstructorIsGenerator", "DeclarationMissingInitializer", "DecoratorArgumentsOutsideParentheses", "DecoratorBeforeExport", "DecoratorsBeforeAfterExport", "DecoratorConstructor", "DecoratorExportClass", "DecoratorSemicolon", "DecoratorStaticBlock", "DeferImportRequiresNamespace", "DeletePrivateField", "DestructureNamedImport", "DuplicateConstructor", "DuplicateDefaultExport", "DuplicateExport", "exportName", "DuplicateProto", "DuplicateRegExpFlags", "DynamicImportPhaseRequiresImportExpressions", "phase", "ElementAfterRest", "EscapedCharNotAnIdentifier", "ExportBindingIsString", "localName", "ExportDefaultFromAsIdentifier", "ForInOfLoopInitializer", "ForInUsing", "ForOfAsync", "ForOfLet", "GeneratorInSingleStatementContext", "IllegalBreakContinue", "IllegalLanguageModeDirective", "IllegalReturn", "ImportAttributesUseAssert", "ImportBindingIsString", "importName", "ImportCallArgumentTrailingComma", "ImportCallArity", "maxArgumentCount", "ImportCallNotNewExpression", "ImportCallSpreadArgument", "ImportJSONBindingNotDefault", "ImportReflectionHasAssertion", "ImportReflectionNotBinding", "IncompatibleRegExpUVFlags", "InvalidBigIntLiteral", "InvalidCodePoint", "InvalidCoverInitializedName", "InvalidDecimal", "InvalidDigit", "radix", "InvalidEscapeSequence", "InvalidEscapeSequenceTemplate", "InvalidEscapedReservedWord", "reservedWord", "InvalidIdentifier", "InvalidLhs", "ancestor", "InvalidLhsBinding", "InvalidLhsOptionalChaining", "InvalidNumber", "InvalidOrMissingExponent", "InvalidOrUnexpectedToken", "unexpected", "InvalidParenthesizedAssignment", "InvalidPrivateFieldResolution", "InvalidPropertyBindingPattern", "InvalidRecordProperty", "InvalidRestAssignmentPattern", "LabelRedeclaration", "labelName", "LetInLexicalBinding", "LineTerminatorBeforeArrow", "MalformedRegExpFlags", "MissingClassName", "MissingEqInAssignment", "MissingSemicolon", "MissingPlugin", "missingPlugin", "map", "name", "JSON", "stringify", "join", "MissingOneOfPlugins", "MissingUnicodeEscape", "MixingCoalesceWithLogical", "ModuleAttributeDifferentFromType", "ModuleAttributeInvalidValue", "ModuleAttributesWithDuplicateKeys", "key", "ModuleExportNameHasLoneSurrogate", "surrogateCharCode", "toString", "ModuleExportUndefined", "MultipleDefaultsInSwitch", "NewlineAfterThrow", "NoCatchOrFinally", "NumberIdentifier", "NumericSeparatorInEscapeSequence", "ObsoleteAwaitStar", "OptionalChainingNoNew", "OptionalChainingNoTemplate", "OverrideOnConstructor", "ParamDupe", "PatternHasAccessor", "PatternHasMethod", "PrivateInExpectedIn", "PrivateNameRedeclaration", "RecordExpressionBarIncorrectEndSyntaxType", "RecordExpressionBarIncorrectStartSyntaxType", "RecordExpressionHashIncorrectStartSyntaxType", "RecordNoProto", "RestTrailingComma", "SloppyFunction", "SloppyFunctionAnnexB", "SourcePhaseImportRequiresDefault", "StaticPrototype", "SuperNotAllowed", "SuperPrivateField", "TrailingDecorator", "TupleExpressionBarIncorrectEndSyntaxType", "TupleExpressionBarIncorrectStartSyntaxType", "TupleExpressionHashIncorrectStartSyntaxType", "UnexpectedArgumentPlaceholder", "UnexpectedAwaitAfterPipelineBody", "UnexpectedDigitAfterHash", "UnexpectedImportExport", "UnexpectedKeyword", "keyword", "UnexpectedLeadingDecorator", "UnexpectedLexicalDeclaration", "UnexpectedNewTarget", "UnexpectedNumericSeparator", "UnexpectedPrivateField", "UnexpectedReservedWord", "UnexpectedSuper", "UnexpectedToken", "expected", "UnexpectedTokenUnaryExponentiation", "UnexpectedUsingDeclaration", "UnsupportedBind", "UnsupportedDecoratorExport", "UnsupportedDefaultExport", "UnsupportedImport", "UnsupportedMetaProperty", "target", "onlyValidPropertyName", "UnsupportedParameterDecorator", "UnsupportedPropertyDecorator", "UnsupportedSuper", "UnterminatedComment", "UnterminatedRegExp", "UnterminatedString", "UnterminatedTemplate", "UsingDeclarationHasBindingPattern", "VarRedeclaration", "YieldBindingIdentifier", "YieldInParameter", "ZeroDigitNumericSeparator", "StrictModeErrors", "StrictDelete", "StrictEvalArguments", "referenceName", "StrictEvalArgumentsBinding", "bindingName", "StrictFunction", "StrictNumericEscape", "StrictOctalLiteral", "StrictWith", "UnparenthesizedPipeBodyDescriptions", "Set", "PipelineOperatorErrors", "PipeBodyIsTighter", "PipeTopicRequiresHackPipes", "PipeTopicUnbound", "PipeTopicUnconfiguredToken", "token", "PipeTopicUnused", "PipeUnparenthesizedBody", "PipelineBodyNoArrow", "PipelineBodySequenceExpression", "PipelineHeadSequenceExpression", "PipelineTopicUnused", "PrimaryTopicNotAllowed", "PrimaryTopicRequiresSmartPipeline", "defineHidden", "obj", "value", "Object", "defineProperty", "enumerable", "configurable", "toParseErrorConstructor", "_ref", "toMessage", "properties", "_objectWithoutPropertiesLoose", "_excluded", "loc", "details", "error", "SyntaxError", "assign", "pos", "clone", "overrides", "_overrides$loc", "get", "set", "writable", "ParseErrorEnum", "argument", "syntaxPlugin", "Array", "isArray", "parseErrorTemplates", "ParseErrorConstructors", "reasonCode", "keys", "template", "_ref2", "rest", "_excluded2", "Errors", "toUnenumerable", "object", "toESTreeLocation", "node", "estree", "superClass", "ESTreeParserMixin", "parse", "file", "options", "tokens", "parseRegExpLiteral", "pattern", "flags", "regex", "RegExp", "e", "estreeParseLiteral", "parseBigIntLiteral", "bigInt", "BigInt", "_unused", "bigint", "parseDecimalLiteral", "decimal", "parseLiteral", "parseStringLiteral", "parseNumericLiteral", "parseNullLiteral", "parseBooleanLiteral", "directiveToStmt", "directive", "expression", "raw", "extra", "expressionValue", "stmt", "rawValue", "initFunction", "isAsync", "checkDeclaration", "isObjectProperty", "getObjectOrClassMethodParams", "method", "params", "isValidDirective", "_stmt$expression$extr", "parenthesized", "parseBlockBody", "allowDirectives", "topLevel", "afterBlockParse", "directiveStatements", "directives", "d", "body", "concat", "pushClassMethod", "classBody", "isGenerator", "isConstructor", "allowsDirectSuper", "parseMethod", "typeParameters", "push", "parsePrivateName", "getPluginOption", "convertPrivateNameToPrivateIdentifier", "getPrivateNameSV", "id", "isPrivateName", "parseFunctionBody", "allowExpression", "isMethod", "allowDirectSuper", "inClassScope", "funcNode", "startNode", "computed", "finishNode", "parseClassProperty", "args", "propertyNode", "parseClassPrivateProperty", "parseObjectMethod", "prop", "isPattern", "isAccessor", "shorthand", "parseObjectProperty", "startLoc", "refExpressionErrors", "isValidLVal", "isUnparenthesizedInAssign", "binding", "isAssignable", "isBinding", "toAssignable", "isLHS", "classScope", "usePrivateName", "toAssignableObjectExpressionProp", "isLast", "raise", "at", "finishCallExpression", "unfinished", "optional", "callee", "source", "arguments", "hasPlugin", "_node$arguments$", "_node$arguments$2", "attributes", "toReferencedArguments", "parseExport", "decorators", "exportStartLoc", "state", "lastTokStartLoc", "exported", "specifiers", "length", "_declaration$decorato", "declaration", "resetStartLocation", "parseSubscript", "base", "noCalls", "optionalChainMember", "substring", "stop", "chain", "startNodeAtNode", "isOptionalMemberExpression", "hasPropertyAsPrivateName", "isObjectMethod", "finishNodeAt", "endLoc", "resetEndLocation", "lastTokEndLoc", "TokContext", "preserveSpace", "types", "brace", "j_oTag", "j_cTag", "j_expr", "beforeExpr", "startsExpr", "isLoop", "isAssign", "postfix", "ExportedTokenType", "label", "conf", "rightAssociative", "binop", "updateContext", "keywords", "Map", "createKeyword", "createToken", "createBinop", "tokenTypeCounter", "tokenTypes", "tokenLabels", "tokenBinops", "tokenBeforeExprs", "tokenStartsExprs", "tokenPrefixes", "_options$binop", "_options$beforeExpr", "_options$startsExpr", "_options$prefix", "createKeywordLike", "_options$binop2", "_options$beforeExpr2", "_options$startsExpr2", "_options$prefix2", "tt", "bracketL", "bracketHashL", "bracketBarL", "bracketR", "bracketBarR", "braceL", "braceBarL", "braceHashL", "braceR", "braceBarR", "parenL", "parenR", "comma", "semi", "colon", "doubleColon", "dot", "question", "questionDot", "arrow", "ellipsis", "backQuote", "dollarBraceL", "templateTail", "templateNonTail", "hash", "interpreterDirective", "eq", "slashAssign", "xorAssign", "moduloAssign", "incDec", "bang", "tilde", "doubleCaret", "doubleAt", "pipeline", "nullishCoalescing", "logicalOR", "logicalAND", "bitwiseOR", "bitwiseXOR", "bitwiseAND", "equality", "lt", "gt", "relational", "bitShift", "bitShiftL", "bitShiftR", "plusMin", "modulo", "star", "slash", "exponent", "_in", "_instanceof", "_break", "_case", "_catch", "_continue", "_debugger", "_default", "_else", "_finally", "_function", "_if", "_return", "_switch", "_throw", "_try", "_var", "_const", "_with", "_new", "_this", "_super", "_class", "_extends", "_export", "_import", "_null", "_true", "_false", "_typeof", "_void", "_delete", "_do", "_for", "_while", "_as", "_assert", "_async", "_await", "_defer", "_from", "_get", "_let", "_meta", "_of", "_sent", "_set", "_source", "_static", "_using", "_yield", "_asserts", "_checks", "_exports", "_global", "_implements", "_intrinsic", "_infer", "_is", "_mixins", "_proto", "_require", "_satisfies", "_keyof", "_readonly", "_unique", "_abstract", "_declare", "_enum", "_module", "_namespace", "_interface", "_type", "_opaque", "string", "num", "regexp", "privateName", "eof", "jsxName", "jsxText", "jsxTagStart", "jsxTagEnd", "placeholder", "tokenIsIdentifier", "tokenKeywordOrIdentifierIsKeyword", "tokenIsKeywordOrIdentifier", "tokenIsLiteralPropertyName", "tokenComesBeforeExpression", "tokenCanStartExpression", "tokenIsAssignment", "tokenIsFlowInterfaceOrTypeOrOpaque", "tokenIsLoop", "tokenIsKeyword", "tokenIsOperator", "tokenIsPostfix", "tokenIsPrefix", "tokenIsTSTypeOperator", "tokenIsTSDeclarationStart", "tokenLabelName", "tokenOperatorPrecedence", "tokenIsRightAssociative", "tokenIsTemplate", "getExportedToken", "context", "pop", "tc", "nonASCIIidentifierStartChars", "nonASCIIidentifierChars", "nonASCIIidentifierStart", "nonASCIIidentifier", "astralIdentifierStartCodes", "astralIdentifierCodes", "isInAstralSet", "i", "isIdentifierStart", "test", "fromCharCode", "isIdentifierChar", "reservedWords", "strict", "strictBind", "reservedWordsStrictSet", "reservedWordsStrictBindSet", "isReservedWord", "word", "inModule", "isStrictReservedWord", "has", "isStrictBindOnlyReservedWord", "isStrictBindReservedWord", "isKeyword", "isIteratorStart", "current", "next", "next2", "reservedWordLikeSet", "canBeReservedWord", "Scope", "var", "lexical", "functions", "ScopeHandler", "parser", "scopeStack", "undefinedExports", "inTopLevel", "currentScope", "inFunction", "currentVarScopeFlags", "allowSuper", "currentThisScopeFlags", "inClass", "inClassAndNotInNonArrowFunction", "inStaticBlock", "ScopeFlag", "inNonArrowFunction", "treatFunctionsAsVar", "treatFunctionsAsVarInScope", "createScope", "enter", "exit", "scope", "declareName", "bindingType", "checkRedeclarationInScope", "add", "maybeExportDefined", "delete", "isRedeclaredInScope", "values", "checkLocalExport", "topLevelScope", "FlowScope", "declareFunctions", "FlowScopeHandler", "BaseParser", "sawUnambiguousESM", "ambiguousScriptDifferentAst", "pluginConfig", "plugins", "pluginName", "pluginOptions", "actualOptions", "plugin", "_this$plugins$get", "setTrailingComments", "comments", "trailingComments", "undefined", "unshift", "setLeadingComments", "leadingComments", "setInnerComments", "innerComments", "adjustInnerComments", "elements", "commentWS", "lastElement", "CommentsParser", "addComment", "comment", "processComment", "commentStack", "commentStackLength", "lastCommentWS", "leadingNode", "nodeStart", "commentEnd", "containingNode", "finalizeComment", "splice", "trailingNode", "commentStart", "input", "charCodeAt", "finalizeRemainingComments", "resetPreviousNodeTrailingComments", "resetPreviousIdentifierLeadingComments", "takeSurroundingComments", "lineBreak", "lineBreakG", "isNewLine", "skipWhiteSpace", "skipWhiteSpaceInLine", "skipWhiteSpaceToLineBreak", "isWhitespace", "State", "curLine", "lineStart", "errors", "potentialArrowAt", "noArrowAt", "noArrowParamsConversionAt", "maybeInArrowParameters", "inType", "noAnonFunctionType", "hasFlowComment", "isAmbientContext", "inAbstractClass", "inDisallowConditionalTypesContext", "topicContext", "maxNumOfResolvableTopics", "maxTopicIndex", "soloAwait", "inFSharpPipelineDirectBody", "labels", "lastTokStart", "ct", "canStartJSXElement", "containsEsc", "firstInvalidTemplateEscapePos", "strictErrors", "tokensLength", "init", "strictMode", "sourceType", "startLine", "startColumn", "curPosition", "skipArrays", "val", "slice", "isDigit", "forbiddenNumericSeparatorSiblings", "decBinOct", "hex", "isAllowedNumericSeparatorSibling", "bin", "ch", "oct", "dec", "readStringContents", "initialPos", "initialLineStart", "initialCurLine", "out", "firstInvalidLoc", "chunkStart", "unterminated", "isStringEnd", "res", "readEscapedChar", "str", "containsInvalid", "inTemplate", "throwOnInvalid", "readHexChar", "readCodePoint", "fromCodePoint", "strictNumericEscape", "startPos", "match", "octalStr", "octal", "parseInt", "len", "forceLen", "n", "readInt", "invalidEscapeSequence", "allowNumSeparator", "bailOnError", "forbiddenSiblings", "isAllowedSibling", "invalid", "total", "Infinity", "prev", "numericSeparatorInEscapeSequence", "Number", "isNaN", "unexpectedNumericSeparator", "_isDigit", "invalidDigit", "indexOf", "invalidCodePoint", "buildPosition", "VALID_REGEX_FLAGS", "Token", "Tokenizer", "isLookahead", "errorHandlers_readInt", "errorRecovery", "errorBuilder", "errorHandlers_readCodePoint", "errorHandlers_readStringContents_string", "recordStrictModeErrors", "errorHandlers_readStringContents_template", "pushToken", "checkKeywordEscapes", "nextToken", "eat", "createLookaheadState", "curContext", "lookahead", "old", "curr", "nextTokenStart", "nextTokenStartSince", "lastIndex", "lookaheadCharCode", "nextTokenInLineStart", "nextTokenInLineStartSince", "lookaheadInLineCharCode", "codePointAtPos", "cp", "trail", "setStrict", "forEach", "toParseError", "clear", "skipSpace", "finishToken", "getTokenFromCode", "skipBlockComment", "skipLineComment", "startSkip", "spaceStart", "loop", "attachComment", "annexB", "commentWhitespace", "prevType", "replaceToken", "readToken_numberSign", "readToken_interpreter", "nextPos", "expectPlugin", "readWord1", "finishOp", "readToken_dot", "readNumber", "readToken_slash", "readToken_mult_modulo", "width", "readToken_pipe_amp", "readToken_caret", "proposal", "topicToken", "lookaheadCh", "codePointAt", "readToken_atSign", "readToken_plus_min", "readToken_lt", "readToken_gt", "size", "readToken_eq_excl", "readToken_question", "readTemplateToken", "readRadixNumber", "readString", "readWord", "readRegexp", "escaped", "content", "mods", "char", "includes", "isBigInt", "replace", "startsWithDot", "isFloat", "isDecimal", "hasExponent", "isOctal", "hasLeadingZero", "integer", "underscorePos", "parseFloat", "quote", "readTemplateContinuation", "opening", "firstCode", "escStart", "identifierCheck", "esc", "keywordTypes", "raiseProperties", "raiseOverwrite", "expectOnePlugin", "pluginNames", "some", "ClassScope", "privateNames", "loneAccessors", "undefinedPrivateNames", "ClassScopeHandler", "stack", "oldClassScope", "from", "declarePrivateName", "elementType", "redefined", "accessor", "oldStatic", "newStatic", "oldKind", "newKind", "ExpressionScope", "canBeArrowParameterDeclaration", "isCertainlyParameterDeclaration", "ArrowHeadParsingScope", "declarationErrors", "recordDeclarationError", "ParsingErrorClass", "clearDeclarationError", "iterateErrors", "iterator", "ExpressionScopeHandler", "recordParameterInitializerError", "origin", "recordArrowParameterBindingError", "recordAsyncArrowParametersError", "validateAsPattern", "newParameterDeclarationScope", "newArrowHeadScope", "newAsyncArrowScope", "newExpressionScope", "ProductionParameterHandler", "stacks", "currentFlags", "hasAwait", "hasYield", "hasReturn", "hasIn", "functionFlags", "UtilParser", "addExtra", "isContextual", "isUnparsedContextual", "nameStart", "nameEnd", "nextCh", "isLookaheadContextual", "eatContextual", "expectContextual", "canInsertSemicolon", "hasPrecedingLineBreak", "hasFollowingLineBreak", "isLineTerminator", "semicolon", "allowAsi", "expect", "tryParse", "fn", "oldState", "abortSignal", "failState", "thrown", "aborted", "checkExpressionErrors", "andThrow", "shorthandAssignLoc", "doubleProtoLoc", "privateKeyLoc", "optionalParametersLoc", "hasErrors", "isLiteralPropertyName", "property", "initializeScopes", "oldLabels", "oldExportedIdentifiers", "exportedIdentifiers", "oldInModule", "oldScope", "getScopeHandler", "oldProdParam", "prodParam", "oldExpressionScope", "expressionScope", "enterInitialScopes", "paramFlags", "checkDestructuringPrivate", "ExpressionErrors", "Node", "ranges", "range", "NodePrototype", "prototype", "__clone", "newNode", "clonePlaceholder", "cloneIdentifier", "cloned", "create", "expectedNode", "cloneStringLiteral", "NodeUtils", "startNodeAt", "resetStartLocationFromNode", "locationNode", "reservedTypes", "FlowErrors", "AmbiguousConditionalArrow", "AmbiguousDeclareModuleKind", "AssignReservedType", "reservedType", "DeclareClassElement", "DeclareClassFieldInitializer", "DuplicateDeclareModuleExports", "EnumBooleanMemberNotInitialized", "memberName", "enumName", "EnumDuplicateMemberName", "EnumInconsistentMemberValues", "EnumInvalidExplicitType", "invalidEnumType", "EnumInvalidExplicitTypeUnknownSupplied", "EnumInvalidMemberInitializerPrimaryType", "explicitType", "EnumInvalidMemberInitializerSymbolType", "EnumInvalidMemberInitializerUnknownType", "EnumInvalidMemberName", "suggestion", "EnumNumberMemberNotInitialized", "EnumStringMemberInconsistentlyInitialized", "GetterMayNotHaveThisParam", "ImportReflectionHasImportType", "ImportTypeShorthandOnlyInPureImport", "InexactInsideExact", "InexactInsideNonObject", "InexactVariance", "InvalidNonTypeImportInDeclareModule", "MissingTypeParamDefault", "NestedDeclareModule", "NestedFlowComment", "PatternIsOptional", "SetterMayNotHaveThisParam", "SpreadVariance", "ThisParamAnnotationRequired", "ThisParamBannedInConstructor", "ThisParamMayNotBeOptional", "ThisParamMustBeFirst", "ThisParamNoDefault", "TypeBeforeInitializer", "TypeCastInPattern", "UnexpectedExplicitInexactInObject", "UnexpectedReservedType", "UnexpectedReservedUnderscore", "UnexpectedSpaceBetweenModuloChecks", "UnexpectedSpreadType", "UnexpectedSubtractionOperand", "UnexpectedTokenAfterTypeParameter", "UnexpectedTypeParameterBeforeAsyncArrowFunction", "UnsupportedDeclareExportKind", "unsupportedExportKind", "UnsupportedStatementInDeclareModule", "UnterminatedFlowComment", "isEsModuleType", "bodyElement", "hasTypeImportKind", "importKind", "exportSuggestions", "const", "let", "interface", "partition", "list", "list1", "list2", "FLOW_PRAGMA_REGEX", "flow", "FlowParserMixin", "flowPragma", "shouldParseTypes", "shouldParseEnums", "matches", "exec", "Error", "flowParseTypeInitialiser", "tok", "oldInType", "flowParseType", "flowParsePredicate", "moduloLoc", "parseExpression", "flowParseTypeAndPredicateInitialiser", "predicate", "flowParseDeclareClass", "flowParseInterfaceish", "flowParseDeclareFunction", "parseIdentifier", "typeNode", "typeContainer", "flowParseTypeParameterDeclaration", "tmp", "flowParseFunctionTypeParams", "this", "returnType", "typeAnnotation", "flowParseDeclare", "insideModule", "flowParseDeclareVariable", "flowParseDeclareModuleExports", "flowParseDeclareModule", "flowParseDeclareTypeAlias", "flowParseDeclareOpaqueType", "flowParseDeclareInterface", "flowParseDeclareExportDeclaration", "flowParseTypeAnnotatableIdentifier", "parseExprAtom", "bodyNode", "parseImport", "hasModuleExport", "default", "isLet", "exportKind", "flowParseTypeAnnotation", "finished", "flowParseTypeAlias", "flowParseOpaqueType", "isClass", "flowParseRestrictedIdentifier", "extends", "flowParseInterfaceExtends", "implements", "mixins", "flowParseObjectType", "allowStatic", "allowExact", "allowSpread", "allowProto", "allowInexact", "flowParseQualifiedTypeIdentifier", "flowParseTypeParameterInstantiation", "flowParseInterface", "checkNotUnderscore", "checkReservedType", "liberal", "right", "declare", "supertype", "impltype", "flowParseTypeParameter", "requireDefault", "nodeStartLoc", "variance", "flowParseVariance", "ident", "bound", "defaultRequired", "typeParameter", "oldNoAnonFunctionType", "flowParseTypeParameterInstantiationCallOrNew", "flowParseTypeOrImplicitInstantiation", "flowParseInterfaceType", "flowParseObjectPropertyKey", "flowParseObjectTypeIndexer", "isStatic", "static", "flowParseObjectTypeInternalSlot", "flowParseObjectTypeMethodish", "flowParseFunctionTypeParam", "flowParseObjectTypeCallProperty", "valueNode", "callProperties", "indexers", "internalSlots", "endDelim", "exact", "inexact", "protoStartLoc", "inexactStartLoc", "propOrInexact", "flowParseObjectTypeProperty", "flowObjectTypeSemicolon", "isInexactToken", "proto", "flowCheckGetterSetterParams", "paramCount", "_startLoc", "node2", "qualification", "flowParseGenericType", "flowParseTypeofType", "flowParsePrimaryType", "flowParseTupleType", "first", "lh", "isThis", "reinterpretTypeAsFunctionTypeParam", "flowIdentToTypeAnnotation", "isGroupedType", "parseLiteralAtNode", "createIdentifier", "flowParsePostfixType", "seenOptionalIndexedAccess", "objectType", "indexType", "flowParsePrefixType", "flowParseAnonFunctionWithoutParens", "param", "flowParseIntersectionType", "flowParseUnionType", "allowPrimitiveOverride", "typeCastToParameter", "allowExpressionBody", "forwardNoArrowParamsConversionAt", "parseFunctionBodyAndFinish", "parseStatementLike", "flowParseEnumDeclaration", "parseExpressionStatement", "expr", "shouldParseExportDeclaration", "isExportDefaultSpecifier", "parseExportDefaultExpression", "parseConditional", "setOptionalParametersError", "originalNoArrowAt", "consequent", "failed", "tryParseConditionalConsequent", "valid", "getArrowLikeExpressions", "alternate", "parseMaybeAssign", "parseMaybeAssignAllowIn", "disallowInvalid", "arrows", "finishArrowValidation", "every", "_node$extra", "toAssignableList", "trailingCommaLoc", "checkParams", "result", "parseParenItem", "typeCastNode", "assertModuleNodeAllowed", "parseExportDeclaration", "declarationNode", "parseExportSpecifiers", "parseExportFrom", "eatExportStar", "maybeParseExportNamespaceSpecifier", "hasNamespace", "parseClassId", "isStatement", "optionalId", "parseClassMember", "member", "parseClassMemberFromModifier", "isIterator", "readIterator", "fullWord", "left", "exprList", "toReferencedList", "isParenthesizedExpr", "_expr$extra", "parseArrayLike", "close", "canBePattern", "isTuple", "isParenthesized", "isClassMethod", "isClassProperty", "isNonstaticConstructor", "isThisParam", "pushClassPrivateMethod", "parseClassSuper", "superTypeParameters", "implemented", "checkGetterSetterParams", "parsePropertyNamePrefixOperator", "parseObjPropValue", "parseAssignableListItemTypes", "parseMaybeDefault", "checkImportReflection", "module", "parseImportSpecifierLocal", "specifier", "local", "finishImportSpecifier", "isPotentialImportPhase", "isExport", "applyImportPhase", "parseImportSpecifier", "importedIsString", "isInTypeOnlyImport", "isMaybeTypeOnly", "firstIdent", "imported", "specifierTypeKind", "as_ident", "specifierIsTypeImport", "checkReservedWord", "parseBindingAtom", "parseFunctionParams", "parseVarId", "decl", "parseAsyncArrowFromCallExpression", "call", "shouldParseAsyncArrow", "afterLeftParse", "_jsx", "jsx", "currentContext", "_jsx2", "_jsx3", "abort", "_arrowExpression$extr", "arrowExpression", "maybeUnwrapTypeCastExpression", "async", "parseArrow", "shouldParseArrow", "setArrowFunctionParameters", "allowDuplicates", "isArrowFunction", "strictModeChanged", "parseParenAndDistinguishExpression", "canBeArrow", "parseSubscripts", "parseCallExpressionArguments", "parseAsyncArrowWithTypeParameters", "subscriptState", "isLookaheadToken_lt", "typeArguments", "parseNewCallee", "targs", "parseArrowExpression", "parseTopLevel", "program", "fileNode", "skipFlowComment", "hasFlowCommentCompletion", "commentSkip", "shiftToFirstNonWhiteSpace", "ch2", "ch3", "flowEnumErrorBooleanMemberNotInitialized", "flowEnumErrorInvalidMemberInitializer", "enumContext", "flowEnumErrorNumberMemberNotInitialized", "flowEnumErrorStringMemberInconsistentlyInitialized", "flowEnumMemberInit", "endOfInit", "literal", "flowEnumMemberRaw", "flowEnumCheckExplicitTypeMismatch", "expectedType", "flowEnumMembers", "seenNames", "members", "booleanMembers", "numberMembers", "stringMembers", "defaultedMembers", "hasUnknownMembers", "memberNode", "toUpperCase", "flowEnumStringMembers", "initializedMembers", "flowEnumParseExplicitType", "flowEnumBody", "nameLoc", "empty", "boolsLen", "numsLen", "strsLen", "defaultedLen", "afterNext", "entities", "__proto__", "quot", "amp", "apos", "nbsp", "iexcl", "cent", "pound", "curren", "yen", "brvbar", "sect", "uml", "copy", "ordf", "laquo", "not", "shy", "reg", "macr", "deg", "plusmn", "sup2", "sup3", "acute", "micro", "para", "middot", "cedil", "sup1", "ordm", "raquo", "frac14", "frac12", "frac34", "iquest", "Agrave", "Aacute", "Acirc", "Atilde", "Auml", "Aring", "AElig", "Ccedil", "Egrave", "Eacute", "Ecirc", "Euml", "Igrave", "Iacute", "Icirc", "Iuml", "ETH", "Ntilde", "Ograve", "Oacute", "Ocirc", "Otilde", "Ouml", "times", "Oslash", "Ugrave", "Uacute", "Ucirc", "Uuml", "Yacute", "THORN", "szlig", "agrave", "aacute", "acirc", "atilde", "auml", "aring", "aelig", "ccedil", "egrave", "eacute", "ecirc", "euml", "igrave", "iacute", "icirc", "iuml", "eth", "ntilde", "ograve", "oacute", "ocirc", "otilde", "ouml", "divide", "oslash", "ugrave", "uacute", "ucirc", "uuml", "yacute", "thorn", "yuml", "OElig", "oelig", "Scaron", "scaron", "Yuml", "fnof", "circ", "Alpha", "Beta", "Gamma", "Delta", "Epsilon", "Zeta", "Eta", "Theta", "Iota", "Kappa", "Lambda", "Mu", "Nu", "Xi", "Omicron", "Pi", "Rho", "Sigma", "Tau", "Upsilon", "Phi", "Chi", "Psi", "Omega", "alpha", "beta", "gamma", "delta", "epsilon", "zeta", "eta", "theta", "iota", "kappa", "lambda", "mu", "nu", "xi", "omicron", "pi", "rho", "sigmaf", "sigma", "tau", "upsilon", "phi", "chi", "psi", "omega", "thetasym", "upsih", "piv", "ensp", "emsp", "thinsp", "zwnj", "zwj", "lrm", "rlm", "ndash", "mdash", "lsquo", "rsquo", "sbquo", "ldquo", "rdquo", "bdquo", "dagger", "Dagger", "bull", "hellip", "permil", "prime", "Prime", "lsaquo", "rsaquo", "oline", "frasl", "euro", "image", "weierp", "real", "trade", "alefsym", "larr", "uarr", "rarr", "darr", "harr", "crarr", "lArr", "uArr", "rArr", "dArr", "hArr", "forall", "part", "exist", "nabla", "isin", "notin", "ni", "prod", "sum", "minus", "lowast", "radic", "infin", "ang", "and", "or", "cap", "cup", "int", "there4", "sim", "cong", "asymp", "ne", "equiv", "le", "ge", "sub", "sup", "nsub", "sube", "supe", "oplus", "otimes", "perp", "sdot", "lceil", "rceil", "lfloor", "rfloor", "lang", "rang", "loz", "spades", "clubs", "hearts", "diams", "JsxErrors", "AttributeIsEmpty", "MissingClosingTagElement", "openingTagName", "MissingClosingTagFragment", "UnexpectedSequenceExpression", "HTMLEntity", "UnsupportedJsxValue", "UnterminatedJsxContent", "UnwrappedAdjacentJSXElements", "isFragment", "getQualifiedJSXName", "namespace", "JSXParserMixin", "jsxReadToken", "jsxReadEntity", "jsxReadNewLine", "normalizeCRLF", "jsxReadString", "codePoint", "count", "desc", "entity", "XHTMLEntities", "jsxReadWord", "jsxParseIdentifier", "jsxParseNamespacedName", "jsxParseElementName", "jsxParseAttributeValue", "setContext", "jsxParseExpressionContainer", "jsxParseEmptyExpression", "jsxParseSpreadChild", "previousContext", "jsxParseAttribute", "jsxParseOpeningElementAt", "jsxParseOpeningElementAfterName", "selfClosing", "jsxParseClosingElementAt", "jsxParseElementAt", "children", "openingElement", "closingElement", "contents", "openingFragment", "closingFragment", "jsxParseElement", "newContext", "TypeScriptScope", "enums", "constEnums", "classes", "exportOnlyBindings", "TypeScriptScopeHandler", "importsStack", "hasImport", "allowShadow", "isConst", "wasConst", "getOwn", "hasOwnProperty", "unwrapParenthesizedExpression", "LValParser", "_node$extra3", "last", "_node$extra2", "operator", "arg", "checkToRestConversion", "elt", "element", "toReferencedListDeep", "parseSpread", "parseRestBinding", "parseBindingList", "ParseBindingListFlags", "parseObjectLike", "closeCharCode", "allowEmpty", "elts", "checkCommaAfterRest", "parseDecorator", "parseAssignableListItem", "parseBindingRestProperty", "parseBindingProperty", "parsePropertyName", "_left", "ObjectProperty", "checkLVal", "in", "checkClashes", "hasParenthesizedAncestor", "_expression$extra", "checkIdentifier", "validity", "ParseErrorClass", "isParenthesizedExpression", "nextAncestor", "child", "declareNameFromIdentifier", "identifier", "allowPattern", "nonNull", "x", "assert", "TSErrors", "AbstractMethodHasImplementation", "methodName", "AbstractPropertyHasInitializer", "propertyName", "AccesorCannotDeclareThisParameter", "AccesorCannotHaveTypeParameters", "AccessorCannotBeOptional", "ClassMethodHasDeclare", "ClassMethodHasReadonly", "ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference", "ConstructorHasTypeParameters", "DeclareAccessor", "DeclareClassFieldHasInitializer", "DeclareFunctionHasImplementation", "DuplicateAccessibilityModifier", "modifier", "DuplicateModifier", "EmptyHeritageClauseType", "EmptyTypeArguments", "EmptyTypeParameters", "ExpectedAmbientAfterExportDeclare", "ImportAliasHasImportType", "IncompatibleModifiers", "modifiers", "IndexSignatureHasAbstract", "IndexSignatureHasAccessibility", "IndexSignatureHasDeclare", "IndexSignatureHasOverride", "IndexSignatureHasStatic", "InitializerNotAllowedInAmbientContext", "InvalidModifierOnTypeMember", "InvalidModifierOnTypeParameter", "InvalidModifierOnTypeParameterPositions", "InvalidModifiersOrder", "orderedModifiers", "InvalidPropertyAccessAfterInstantiationExpression", "InvalidTupleMemberLabel", "MissingInterfaceName", "NonAbstractClassHasAbstractMethod", "NonClassMethodPropertyHasAbstractModifer", "OptionalTypeBeforeRequired", "OverrideNotInSubClass", "PrivateElementHasAbstract", "PrivateElementHasAccessibility", "ReadonlyForMethodSignature", "ReservedArrowTypeParam", "ReservedTypeAssertion", "SetAccesorCannotHaveOptionalParameter", "SetAccesorCannotHaveRestParameter", "SetAccesorCannotHaveReturnType", "SingleTypeParameterWithoutTrailingComma", "typeParameterName", "StaticBlockCannotHaveModifier", "TupleOptionalAfterType", "TypeAnnotationAfterAssign", "TypeImportCannotSpecifyDefaultAndNamed", "TypeModifierIsUsedInTypeExports", "TypeModifierIsUsedInTypeImports", "UnexpectedParameterModifier", "UnexpectedReadonly", "UnexpectedTypeAnnotation", "UnexpectedTypeCastInParameter", "UnsupportedImportTypeArgument", "UnsupportedParameterPropertyKind", "UnsupportedSignatureParameterKind", "keywordTypeFromName", "tsIsAccessModifier", "tsIsVarianceAnnotations", "typescript", "TypeScriptParserMixin", "tsParseInOutModifiers", "tsParseModifiers", "bind", "allowedModifiers", "disallowedModifiers", "errorTemplate", "tsParseConstModifier", "tsParseInOutConstModifiers", "tsIsIdentifier", "tsTokenCanFollowModifier", "tsNextTokenCanFollowModifier", "tsParseModifier", "stopOnStartOfClassStaticBlock", "tsIsStartOfStaticBlocks", "tsTryParse", "modified", "enforceOrder", "before", "after", "incompatible", "mod1", "mod2", "accessibility", "tsIsListTerminator", "tsParseList", "parseElement", "tsParseDelimitedList", "refTrailingCommaPos", "tsParseDelimitedListWorker", "expectSuccess", "trailingCommaPos", "tsParseBracketedList", "bracket", "skipFirstToken", "tsParseImportType", "qualifier", "tsParseEntityName", "tsParseTypeArguments", "allowReservedWords", "tsParseTypeReference", "typeName", "tsParseThisTypePredicate", "lhs", "parameterName", "tsParseTypeAnnotation", "asserts", "tsParseThisTypeNode", "tsParseTypeQuery", "exprName", "tsParseTypeParameter", "parseModifiers", "tsParseTypeParameterName", "constraint", "tsEatThenParseType", "tsTryParseTypeParameters", "tsParseTypeParameters", "tsFillSignature", "returnToken", "signature", "returnTokenRequired", "paramsKey", "returnTypeKey", "tsParseBindingListForSignature", "tsParseTypeOrTypePredicateAnnotation", "tsParseTypeMemberSemicolon", "tsParseSignatureMember", "tsIsUnambiguouslyIndexSignature", "tsTryParseIndexSignature", "tsLookAhead", "parameters", "tsTryParseTypeAnnotation", "tsParsePropertyOrMethodSignature", "readonly", "nodeAny", "firstParameter", "tsParseTypeMember", "idx", "tsParseTypeLiteral", "tsParseObjectTypeMembers", "tsIsStartOfMappedType", "tsParseMappedTypeParameter", "tsExpectThenParseType", "tsParseMappedType", "nameType", "tsParseType", "tsTryParseType", "tsParseTupleType", "elementTypes", "tsParseTupleElementType", "seenOptionalElement", "elementNode", "labeled", "isWord", "chAfterWord", "wordName", "typeOrLabel", "tsParseNonArrayType", "labeledNode", "optionalTypeNode", "restNode", "tsParseParenthesizedType", "tsParseFunctionOrConstructorType", "abstract", "tsInAllowConditionalTypesContext", "tsParseLiteralTypeNode", "tsParseTemplateLiteralType", "parseTemplate", "parseTemplateSubstitution", "tsParseThisTypeOrThisTypePredicate", "thisKeyword", "parseMaybeUnary", "nodeType", "tsParseArrayTypeOrHigher", "tsParseTypeOperator", "tsParseTypeOperatorOrHigher", "tsCheckTypeAnnotationForReadOnly", "tsParseInferType", "tsParseConstraintForInferType", "tsInDisallowConditionalTypesContext", "isTypeOperator", "tsParseUnionOrIntersectionType", "parseConstituentType", "hasLeadingOperator", "tsParseIntersectionTypeOrHigher", "tsParseUnionTypeOrHigher", "tsIsStartOfFunctionType", "tsIsUnambiguouslyStartOfFunctionType", "tsSkipParameterStart", "previousErrorCount", "_unused2", "tsInType", "t", "tsParseTypePredicateAsserts", "thisTypePredicate", "typePredicateVariable", "tsParseTypePredicatePrefix", "tsTryParseTypeOrTypePredicateAnnotation", "eatColon", "tsParseNonConditionalType", "checkType", "extendsType", "trueType", "falseType", "isAbstractConstructorSignature", "tsParseTypeAssertion", "tsParseHeritageClause", "originalStartLoc", "delimitedList", "tsParseInterfaceDeclaration", "tsParseTypeAliasDeclaration", "tsInNoContext", "cb", "oldContext", "oldInDisallowConditionalTypesContext", "tsNextThenParseType", "tsParseEnumMember", "initializer", "tsParseEnumDeclaration", "tsParseModuleBlock", "parseBlockOrModuleBlockBody", "tsParseModuleOrNamespaceDeclaration", "nested", "inner", "tsParseAmbientExternalModuleDeclaration", "global", "tsParseImportEqualsDeclaration", "maybeDefaultIdentifier", "moduleReference", "tsParseModuleReference", "tsIsExternalModuleReference", "tsParseExternalModuleReference", "f", "tsTryParseAndCatch", "tsTryParseDeclare", "nany", "startType", "tsInAmbientContext", "parseFunctionStatement", "parseClass", "parseVarStatement", "tsParseDeclaration", "tsTryParseExportDeclaration", "tsParseExpressionStatement", "mod", "tsCheckLineTerminator", "tsParseAbstractDeclaration", "tsTryParseGenericAsyncArrowFunction", "oldMaybeInArrowParameters", "tsParseTypeArgumentsInExpression", "reScan_lt", "reScan_lt_gt", "tsIsDeclarationStart", "override", "pp", "parameter", "isSimpleParameter", "tsDisallowOptionalPattern", "bodilessType", "registerFunctionStatementId", "tsCheckForInvalidTypeCasts", "items", "isInParens", "nonNullExpression", "isOptionalCall", "missingParenErrorLoc", "atPossibleAsyncArrow", "asyncArrowFn", "parseTaggedTemplateExpression", "tokenType", "_callee$extra", "parseExprOp", "leftStartLoc", "minPrec", "isSatisfies", "checkKeywords", "checkDuplicateExports", "importNode", "parseMaybeImportPhase", "parseImportSpecifiersAndAfter", "isAbstractClass", "cls", "allowMissingInitializer", "declarations", "isValidAmbientConstInitializer", "parseStatementContent", "parseAccessModifier", "tsHasSomeModifiers", "callParseClassMemberWithIsStatic", "parseClassStaticBlock", "parseClassMemberWithIsStatic", "hadSuperClass", "parsePostMemberNameModifiers", "methodOrProp", "isDeclare", "isIdentifier", "parseClassPropertyAnnotation", "definite", "parseClassAccessorProperty", "declareClassPrivateMethodInScope", "_typeCast", "_typeCast2", "typeCast", "_typeParameters", "reportReservedArrowTypeParam", "trailingComma", "sawUnary", "toAssignableParenthesizedExpression", "TSTypeCastExpression", "TSParameterProperty", "TSNonNullExpression", "TSAsExpression", "TSSatisfiesExpression", "TSTypeAssertion", "parseMaybeDecoratorArguments", "canHaveLeadingDecorator", "getGetterSetterExpectedParamCount", "baseCount", "firstParam", "hasContextParam", "parseCatchClauseParam", "oldIsAmbientContext", "oldInAbstractClass", "maybeTakeDecorators", "hasBody", "shouldParseAsAmbientContext", "getExpression", "parseExportSpecifier", "isString", "isInTypeExport", "parseTypeOnlyImportExportSpecifier", "isImport", "isInTypeOnlyImportExport", "leftOfAsKey", "rightOfAsKey", "leftOfAs", "rightOfAs", "hasTypeSpecifier", "canParseAsKeyword", "firstAs", "secondAs", "parseModuleExportName", "kindKey", "isPossiblyLiteralEnum", "expressions", "isUncomputedMemberExpressionChain", "isNumber", "isNegativeNumber", "PlaceholderErrors", "ClassNameIsRequired", "UnexpectedSpace", "placeholders", "PlaceholdersParserMixin", "parsePlaceholder", "assertNoSpace", "finishPlaceholder", "isFinished", "chStartsBindingIdentifier", "verifyBreakContinue", "isBreak", "parseStatementOrSloppyAnnexBFunctionDeclaration", "parseBlock", "createNewLexicalScope", "parseFunctionId", "requireId", "oldStrict", "parseClassBody", "startsWith", "maybeParseExportDefaultSpecifier", "_specifiers", "checkExport", "filter", "hasStarImport", "maybeParseStarImportSpecifier", "parseNamedImportSpecifiers", "parseImportSource", "v8intrinsic", "V8IntrinsicMixin", "parseV8Intrinsic", "v8IntrinsicStartLoc", "parseIdentifierName", "expectedConfig", "expectedName", "expectedOptions", "expectedKeys", "expectedOptionsIsEmpty", "p", "option", "find", "PIPELINE_PROPOSALS", "TOPIC_TOKENS", "RECORD_AND_TUPLE_SYNTAX_TYPES", "validatePlugins", "decoratorsBeforeExport", "allowCallParenthesized", "proposalList", "tupleSyntaxIsHash", "syntaxType", "tokenList", "moduleAttributesVersionPluginOption", "missingPlugins", "mixinPlugins", "mixinPluginNames", "defaultOptions", "sourceFilename", "allowAwaitOutsideFunction", "allowReturnOutsideFunction", "allowNewTargetOutsideFunction", "allowImportExportEverywhere", "allowSuperOutsideMethod", "allowUndeclaredExports", "createImportExpressions", "createParenthesizedExpressions", "getOptions", "opts", "_opts$key", "ExpressionParser", "checkProto", "isRecord", "protoRef", "used", "shouldExitDescending", "disallowIn", "disallowInAnd", "parseExpressionBase", "allowInAnd", "parseMaybeAssignDisallowIn", "resultError", "_resultError$loc", "parseYield", "ownExpressionErrors", "parseMaybeConditional", "startIndex", "parseExprOps", "parseMaybeUnaryOrPrivate", "op", "prec", "checkPipelineAtInfixOperator", "logical", "coalesce", "parseExprOpRightExpr", "finishedNode", "nextOp", "withTopicBindingContext", "parseHackPipeBody", "parseSmartPipelineBodyInStyle", "parseExprOpBaseRightExpr", "withSoloAwaitPermittingContext", "parseFSharpPipelineBody", "_body$extra", "requiredParentheses", "topicReferenceWasUsedInCurrentContext", "checkExponentialAfterUnary", "isAwait", "isAwaitAllowed", "parseAwait", "update", "isDelete", "parseUpdate", "isAmbiguousAwait", "updateExpressionNode", "parseExprSubscripts", "maybeAsyncArrow", "parseBind", "parseCoverCallAndAsyncArrowHead", "parseMember", "parseNoCallExpr", "tag", "quasi", "expectImportAttributesPlugin", "dynamicImport", "allowPlaceholder", "nodeForExtra", "oldInFSharpPipelineDirectBody", "addTrailingCommaExtraToNode", "parseExprListItem", "_call$extra", "parseSuper", "parseImportMetaProperty", "parseImportCall", "parseDo", "parseFunctionOrFunctionSent", "parseDecorators", "parseNewOrNewTarget", "parseTopicReferenceThenEqualsSign", "parseTopicReference", "pipeProposal", "parseModuleExpression", "parseAsyncFunctionExpression", "parseAsyncArrowUnaryFunction", "topicTokenType", "topicTokenValue", "finishTopicReference", "testTopicReferenceConfiguration", "topicReferenceIsAllowedInCurrentContext", "registerTopicReference", "meta", "parseMetaProperty", "parseFunction", "isSource", "innerStartLoc", "spreadStartLoc", "optionalCommaStartLoc", "spreadNodeStartLoc", "innerEndLoc", "arrowNode", "wrapParenthesis", "parenExpression", "metaProp", "parseNew", "parseExprList", "parseTemplateElement", "isTagged", "elemStart", "elem", "isTail", "endOffset", "elemEnd", "cooked", "tail", "curElt", "quasis", "propHash", "parsePropertyDefinition", "maybeAsyncOrAccessorProp", "keyName", "_params", "finishedProp", "generator", "isExpression", "hasStrictModeDirective", "nonSimple", "isSimpleParamList", "formalParameters", "reservedTest", "delegating", "delegate", "childExpr", "isSimpleReference", "checkSmartPipeTopicBodyEarlyErrors", "callback", "outerContextTopicState", "withSmartMixTopicForbiddingContext", "outerContextSoloAwaitState", "prodParamToSet", "ParamKind", "prodParamToClear", "ret", "revertScopes", "parseProgram", "loopLabel", "switchLabel", "loneSurrogate", "keywordRelationalOperator", "babel7CompatTokens", "hashEndPos", "hashEndLoc", "backquoteEnd", "backquoteEndLoc", "startToken", "templateValue", "templateElementEnd", "templateElementEndLoc", "endToken", "StatementParser", "interpreter", "parseInterpreterDirective", "finishedProgram", "stmtToDirective", "directiveLiteral", "hasFollowingBindingAtom", "endCh", "chStartsBindingPattern", "hasInLineFollowingBindingIdentifier", "startsUsingForOf", "startsAwaitUsing", "parseModuleItem", "ParseStatementFlag", "parseStatementListItem", "allowLabeledFunction", "parseStatement", "starttype", "allowDeclaration", "allowFunctionDeclaration", "parseBreakContinueStatement", "parseDebuggerStatement", "parseDoWhileStatement", "parseForStatement", "parseIfStatement", "parseReturnStatement", "parseSwitchStatement", "parseThrowStatement", "parseTryStatement", "parseWhileStatement", "parseWithStatement", "parseEmptyStatement", "nextTokenCharCode", "isAsyncFunction", "maybeName", "parseLabeledStatement", "decoratorsEnabledBeforeExport", "maybeDecorators", "classNode", "exportNode", "allowExport", "paramsStartLoc", "lab", "parseHeaderExpression", "awaitAt", "parseFor", "startsWithLet", "startsWithAwaitUsing", "starsWithUsingDeclaration", "isLetOrUsing", "initNode", "parseVar", "isForIn", "parseForIn", "startsWithAsync", "isForOf", "isHangingDeclaration", "ParseFunctionFlag", "discriminant", "cases", "cur", "sawDefault", "isCase", "block", "handler", "clause", "finalizer", "statementStart", "parsedNonDirective", "await", "isFor", "hangingDeclaration", "isDeclaration", "hadConstructor", "publicMethod", "privateMethod", "publicProp", "privateProp", "accessorProp", "publicMember", "parseClassElementName", "isPrivate", "maybeQuestionTokenStartLoc", "pushClassPrivateProperty", "pushClassProperty", "pushClassAccessorProperty", "_member$decorators", "parseInitializer", "hasDefault", "parseAfterDefault", "hasStar", "parseAfterNamespace", "isFromRequired", "hasSpecifiers", "maybeParseExportNamedSpecifiers", "hasDeclaration", "maybeParseExportDeclaration", "_node2$declaration", "isTypeExport", "assertions", "nextType", "hasFrom", "nextAfterFrom", "maybeParseImportAttributes", "checkJSONModuleImport", "checkNames", "isDefault", "isFrom", "_node$specifiers", "_declaration$extra", "nodes", "surrogate", "isJSONModuleImport", "singleBindingType", "_node$assertions", "nonDefaultNamedSpecifier", "phaseIdentifier", "isImportPhase", "isPrecedingIdImportPhase", "parseImportSourceAndAttributes", "maybeParseDefaultImportSpecifier", "parseNext", "_node$specifiers2", "parseImportAttributes", "attrs", "attrNames", "parseModuleAttributes", "useWith", "importSpecifier", "Parser", "pluginsMap", "pluginMap", "_options", "getParser", "ast", "moduleError", "generateExportedTokenTypes", "internalTokenTypes", "tokTypes", "getParserClass", "parserClassCache", "pluginsFromOptions", "pluginList", "normalize", "index", "set", "sourceFile", "map", "index", "swap", "comparator", "binarySearch", "index", "names", "version", "needle", "section", "map", "global", "exports", "index", "isComponent", "elements", "index", "open", "isReferenced", "last", "hex", "compile", "parse", "warn", "effectScope", "effect", "getCurrentScope", "onScopeDispose", "effects", "scheduler", "toRaw", "isRef", "reactive", "isReadonly", "isShallow", "set", "callback", "isReactive", "markRaw", "ref2", "ref", "unref", "get", "toRefs", "toRef", "self", "computed", "warn", "open", "nextTick", "map", "instances", "version", "emit", "render", "render2", "index", "resolve", "registry", "effects", "watch", "onMounted", "getCurrentInstance", "callHook", "ref2", "defaults", "set", "computed", "inject", "h", "to", "from", "createApp", "hasInjectionContext", "ref", "hasWarned", "supported", "perf", "uid", "names", "compile", "initCustomFormatter", "h2", "resolve", "setStyle", "render", "clone", "assign", "index", "createApp", "render", "import_vue", "resolve", "MutationType", "resolve", "open", "state", "store", "now", "color", "noop", "uid", "id", "isNullOrUndef", "value", "undefined", "isArray", "Array", "type", "Object", "prototype", "toString", "call", "slice", "isObject", "isNumberFinite", "Number", "isFinite", "finiteOrDefault", "defaultValue", "valueOrDefault", "toPercentage", "dimension", "endsWith", "parseFloat", "toDimension", "callback", "fn", "args", "thisArg", "apply", "each", "loopable", "reverse", "i", "len", "keys", "length", "_elementsEqual", "a0", "a1", "ilen", "v0", "v1", "datasetIndex", "index", "clone", "source", "map", "target", "create", "klen", "k", "isValidKey", "key", "indexOf", "_merger", "options", "tval", "sval", "merge", "sources", "merger", "current", "mergeIf", "_mergerIf", "hasOwnProperty", "keyResolvers", "v", "x", "o", "y", "_splitKey", "key", "parts", "split", "keys", "tmp", "part", "endsWith", "slice", "push", "_getKeyResolver", "obj", "k", "resolveObjectKey", "resolver", "_capitalize", "str", "charAt", "toUpperCase", "defined", "value", "isFunction", "setsEqual", "a", "b", "size", "item", "has", "_isClickEvent", "e", "type", "PI", "Math", "TAU", "PITAU", "INFINITY", "Number", "POSITIVE_INFINITY", "RAD_PER_DEG", "HALF_PI", "QUARTER_PI", "TWO_THIRDS_PI", "log10", "sign", "almostEquals", "epsilon", "abs", "niceNum", "range", "roundedRange", "round", "niceRange", "pow", "floor", "fraction", "niceFraction", "_factorize", "result", "sqrt", "i", "sort", "pop", "isNonPrimitive", "n", "Symbol", "toPrimitive", "isNumber", "isNaN", "parseFloat", "isFinite", "almostWhole", "rounded", "_setMinAndMaxByKey", "array", "target", "property", "ilen", "length", "min", "max", "toRadians", "degrees", "toDegrees", "radians", "_decimalPlaces", "isFiniteNumber", "p", "getAngleFromPoint", "centrePoint", "anglePoint", "distanceFromXCenter", "distanceFromYCenter", "radialDistanceFromCenter", "angle", "atan2", "distance", "distanceBetweenPoints", "pt1", "pt2", "_angleDiff", "_normalizeAngle", "_angleBetween", "start", "end", "sameAngleIsFullCircle", "s", "angleToStart", "angleToEnd", "startToAngle", "endToAngle", "_limitValue", "_int16Range", "_isBetween", "_lookup", "table", "cmp", "index", "hi", "lo", "mid", "_lookupByKey", "last", "ti", "_rlookupByKey", "_filterBetween", "values", "arrayEvents", "listenArrayEvents", "listener", "_chartjs", "listeners", "Object", "defineProperty", "configurable", "enumerable", "forEach", "method", "base", "args", "res", "apply", "object", "unlistenArrayEvents", "stub", "indexOf", "splice", "_arrayUnique", "items", "set", "Set", "Array", "from", "requestAnimFrame", "window", "callback", "requestAnimationFrame", "throttled", "fn", "thisArg", "argsToUse", "ticking", "args", "call", "apply", "debounce", "delay", "timeout", "clearTimeout", "setTimeout", "_toLeftRightCenter", "align", "_alignStartEnd", "start", "end", "_textX", "left", "right", "rtl", "check", "_getStartAndCountOfVisiblePoints", "meta", "points", "animationsDisabled", "pointCount", "length", "count", "_sorted", "iScale", "vScale", "_parsed", "spanGaps", "dataset", "options", "axis", "min", "max", "minDefined", "maxDefined", "getUserBounds", "Math", "_lookupByKey", "lo", "getPixelForValue", "distanceToDefinedLo", "slice", "reverse", "findIndex", "point", "isNullOrUndef", "_limitValue", "hi", "distanceToDefinedHi", "_scaleRangesChanged", "xScale", "yScale", "_scaleRanges", "newRanges", "xmin", "xmax", "ymin", "ymax", "changed", "Object", "assign", "atEdge", "t", "elasticIn", "s", "p", "pow", "sin", "TAU", "elasticOut", "effects", "linear", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInSine", "cos", "HALF_PI", "easeOutSine", "easeInOutSine", "PI", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "sqrt", "easeOutCirc", "easeInOutCirc", "easeInElastic", "easeOutElastic", "easeInOutElastic", "easeInBack", "easeOutBack", "easeInOutBack", "easeInBounce", "easeOutBounce", "m", "d", "easeInOutBounce", "isPatternOrGradient", "value", "type", "toString", "color", "Color", "getHoverColor", "saturate", "darken", "hexString", "numbers", "colors", "applyAnimationsDefaults", "defaults", "set", "undefined", "duration", "easing", "from", "loop", "to", "describe", "_fallback", "_indexable", "_scriptable", "name", "properties", "active", "animation", "resize", "show", "animations", "visible", "hide", "v", "applyLayoutsDefaults", "autoPadding", "padding", "top", "bottom", "intlCache", "Map", "getNumberFormat", "locale", "cacheKey", "JSON", "stringify", "formatter", "get", "Intl", "NumberFormat", "formatNumber", "num", "format", "formatters", "values", "isArray", "numeric", "tickValue", "index", "ticks", "chart", "notation", "delta", "maxTick", "abs", "calculateDelta", "logDelta", "log10", "numDecimal", "isNaN", "floor", "minimumFractionDigits", "maximumFractionDigits", "logarithmic", "remain", "significand", "includes", "applyScaleDefaults", "display", "offset", "beginAtZero", "bounds", "clip", "grace", "grid", "lineWidth", "drawOnChartArea", "drawTicks", "tickLength", "tickWidth", "_ctx", "tickColor", "border", "dash", "dashOffset", "width", "title", "text", "minRotation", "maxRotation", "mirror", "textStrokeWidth", "textStrokeColor", "autoSkip", "autoSkipPadding", "labelOffset", "Ticks", "minor", "major", "crossAlign", "showLabelBackdrop", "backdropColor", "backdropPadding", "route", "startsWith", "overrides", "create", "descriptors", "getScope", "node", "key", "keys", "split", "i", "n", "k", "root", "scope", "merge", "Defaults", "constructor", "_descriptors", "_appliers", "backgroundColor", "borderColor", "datasets", "devicePixelRatio", "context", "platform", "getDevicePixelRatio", "elements", "events", "font", "family", "size", "style", "lineHeight", "weight", "hover", "hoverBackgroundColor", "ctx", "hoverBorderColor", "hoverColor", "indexAxis", "interaction", "mode", "intersect", "includeInvisible", "maintainAspectRatio", "onHover", "onClick", "parsing", "plugins", "responsive", "scale", "scales", "showLine", "drawActiveElementsOnTop", "override", "targetScope", "targetName", "scopeObject", "targetScopeObject", "privateName", "defineProperties", "writable", "enumerable", "local", "target", "isObject", "valueOrDefault", "appliers", "forEach", "toFontString", "_measureText", "data", "gc", "longest", "string", "textWidth", "measureText", "push", "_longestText", "arrayOfThings", "cache", "garbageCollect", "save", "ilen", "j", "jlen", "thing", "nestedThing", "restore", "gcLen", "splice", "_alignPixel", "pixel", "currentDevicePixelRatio", "halfWidth", "round", "clearCanvas", "canvas", "getContext", "resetTransform", "clearRect", "height", "drawPoint", "x", "y", "drawPointLegend", "w", "xOffset", "yOffset", "cornerRadius", "xOffsetW", "yOffsetW", "pointStyle", "rotation", "radius", "rad", "RAD_PER_DEG", "translate", "rotate", "drawImage", "beginPath", "ellipse", "arc", "closePath", "moveTo", "TWO_THIRDS_PI", "lineTo", "QUARTER_PI", "SQRT1_2", "rect", "fill", "borderWidth", "stroke", "_isPointInArea", "area", "margin", "clipArea", "unclipArea", "_steppedLineTo", "previous", "flip", "midpoint", "_bezierCurveTo", "bezierCurveTo", "cp1x", "cp2x", "cp1y", "cp2y", "setRenderOpts", "opts", "translation", "fillStyle", "textAlign", "textBaseline", "decorateText", "line", "strikethrough", "underline", "metrics", "actualBoundingBoxLeft", "actualBoundingBoxRight", "actualBoundingBoxAscent", "actualBoundingBoxDescent", "yDecoration", "strokeStyle", "decorationWidth", "drawBackdrop", "oldColor", "fillRect", "renderText", "lines", "strokeWidth", "strokeColor", "backdrop", "strokeText", "maxWidth", "fillText", "Number", "addRoundedRectPath", "h", "topLeft", "bottomLeft", "bottomRight", "topRight", "LINE_HEIGHT", "FONT_STYLE", "toLineHeight", "matches", "match", "numberOrZero", "_readValueToProps", "props", "ret", "objProps", "read", "prop", "toTRBL", "toTRBLCorners", "toPadding", "obj", "toFont", "fallback", "parseInt", "console", "warn", "resolve", "inputs", "info", "cacheable", "_addGrace", "minmax", "change", "toDimension", "keepZero", "add", "createContext", "parentContext", "_createResolver", "scopes", "prefixes", "rootScopes", "getTarget", "finalRootScopes", "_resolve", "Symbol", "toStringTag", "_cacheable", "_scopes", "_rootScopes", "_getTarget", "Proxy", "deleteProperty", "_keys", "_cached", "_resolveWithPrefixes", "getOwnPropertyDescriptor", "Reflect", "getPrototypeOf", "has", "getKeysFromAllScopes", "ownKeys", "storage", "_storage", "_attachContext", "proxy", "subProxy", "descriptorDefaults", "_proxy", "_context", "_subProxy", "_stack", "Set", "setContext", "receiver", "_resolveWithContext", "allKeys", "configurable", "scriptable", "indexable", "_allKeys", "isScriptable", "isFunction", "isIndexable", "readKey", "prefix", "_capitalize", "needsSubResolver", "prototype", "hasOwnProperty", "_resolveScriptable", "_resolveArray", "getValue", "Error", "Array", "join", "delete", "createSubResolver", "arr", "filter", "item", "resolver", "resolveFallback", "parent", "resolveObjectKey", "addScopes", "parentScopes", "parentFallback", "allScopes", "addScopesFromKey", "subGetTarget", "resolveKeysFromAllScopes", "_parseObjectDataRadialScale", "_parsing", "parsed", "r", "parse", "EPSILON", "getPoint", "skip", "getValueAxis", "splineCurve", "firstPoint", "middlePoint", "afterPoint", "current", "next", "d01", "distanceBetweenPoints", "d12", "s01", "s12", "fa", "fb", "monotoneAdjust", "deltaK", "mK", "pointsLen", "alphaK", "betaK", "tauK", "squaredMagnitude", "pointCurrent", "pointAfter", "almostEquals", "monotoneCompute", "valueAxis", "pointBefore", "iPixel", "vPixel", "splineCurveMonotone", "slopeDelta", "sign", "capControlPoint", "pt", "capBezierPoints", "inArea", "inAreaPrev", "inAreaNext", "_updateBezierControlPoints", "controlPoints", "cubicInterpolationMode", "prev", "tension", "_isDomSupported", "document", "_getParentNode", "domNode", "parentNode", "host", "parseMaxStyle", "styleValue", "parentProperty", "valueInPixels", "indexOf", "getComputedStyle", "element", "ownerDocument", "defaultView", "getStyle", "el", "property", "getPropertyValue", "positions", "getPositionedStyle", "styles", "suffix", "result", "pos", "parseFloat", "useOffsetPos", "shadowRoot", "getCanvasPosition", "e", "touches", "source", "offsetX", "offsetY", "box", "getBoundingClientRect", "clientX", "clientY", "getRelativePosition", "event", "borderBox", "boxSizing", "paddings", "borders", "getContainerSize", "maxHeight", "container", "clientWidth", "clientHeight", "containerStyle", "containerBorder", "containerPadding", "INFINITY", "round1", "getMaximumSize", "bbWidth", "bbHeight", "aspectRatio", "margins", "containerSize", "maintainHeight", "retinaScale", "forceRatio", "forceStyle", "pixelRatio", "deviceHeight", "deviceWidth", "setTransform", "supportsEventListenerOptions", "passiveSupported", "passive", "addEventListener", "removeEventListener", "readUsedSize", "_pointInLine", "p1", "p2", "_steppedInterpolation", "_bezierInterpolation", "cp1", "cp2", "a", "b", "c", "getRightToLeftAdapter", "rectX", "setWidth", "xPlus", "leftForLtr", "itemWidth", "getLeftToRightAdapter", "_itemWidth", "getRtlAdapter", "overrideTextDirection", "direction", "original", "getPropertyPriority", "setProperty", "prevTextDirection", "restoreTextDirection", "propertyFn", "between", "_angleBetween", "compare", "_angleDiff", "normalize", "_normalizeAngle", "_isBetween", "normalizeSegment", "getSegment", "segment", "startBound", "endBound", "_boundSegment", "inside", "subStart", "prevValue", "startIsBefore", "endIsBefore", "shouldStart", "shouldStop", "_boundSegments", "segments", "sub", "findStartAndEnd", "solidSegments", "last", "cur", "stop", "_computeSegments", "segmentOptions", "_loop", "splitByStyles", "completeLoop", "_fullLoop", "doSplitByStyles", "chartContext", "_chart", "baseStyle", "readStyle", "_datasetIndex", "datasetIndex", "prevStyle", "addStyle", "l", "st", "dir", "p0", "p0DataIndex", "p1DataIndex", "styleChanged", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "replacer", "getSizeForArea", "chartArea", "field", "getDatasetArea", "getDatasetClipArea", "_clip", "disabled", "Animator", "constructor", "_request", "_charts", "Map", "_running", "_lastDate", "undefined", "_notify", "chart", "anims", "date", "type", "callbacks", "listeners", "numSteps", "duration", "forEach", "fn", "initial", "currentStep", "Math", "min", "start", "_refresh", "requestAnimFrame", "call", "window", "_update", "Date", "now", "remaining", "running", "items", "length", "i", "draw", "item", "_active", "_total", "tick", "pop", "_getAnims", "charts", "get", "complete", "progress", "set", "listen", "event", "cb", "push", "add", "has", "reduce", "acc", "cur", "max", "_duration", "stop", "cancel", "remove", "delete", "transparent", "interpolators", "boolean", "from", "to", "factor", "color", "c0", "helpersColor", "c1", "valid", "mix", "hexString", "number", "Animation", "cfg", "target", "prop", "currentValue", "resolve", "_fn", "_easing", "effects", "easing", "linear", "_start", "floor", "delay", "_loop", "loop", "_target", "_prop", "_from", "_to", "_promises", "active", "update", "elapsed", "remain", "wait", "promises", "Promise", "res", "rej", "resolved", "method", "Animations", "config", "_chart", "_properties", "configure", "isObject", "animationOptions", "Object", "keys", "defaults", "animation", "animatedProps", "getOwnPropertyNames", "key", "option", "isArray", "properties", "_animateOptions", "values", "newOptions", "options", "resolveTargetOptions", "animations", "_createAnimations", "$shared", "awaitAll", "$animations", "then", "props", "charAt", "value", "size", "assign", "animator", "anim", "all", "scaleClip", "scale", "allowedOverflow", "opts", "reverse", "end", "defaultClip", "xScale", "yScale", "x", "y", "top", "right", "bottom", "left", "toClip", "t", "r", "b", "l", "disabled", "getSortedDatasetIndices", "filterVisible", "metasets", "_getSortedDatasetMetas", "ilen", "index", "applyStack", "stack", "dsIndex", "singleMode", "mode", "datasetIndex", "otherValue", "found", "isFinite", "sign", "convertObjectDataToArray", "data", "meta", "iScale", "vScale", "iAxisKey", "axis", "vAxisKey", "adata", "Array", "isStacked", "stacked", "getStackKey", "indexScale", "valueScale", "id", "getUserBounds", "minDefined", "maxDefined", "Number", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "getOrCreateStack", "stacks", "stackKey", "indexValue", "subStack", "getLastIndexInStack", "positive", "getMatchingVisibleMetas", "updateStacks", "controller", "parsed", "_cachedMeta", "_stacks", "iAxis", "vAxis", "itemStacks", "_top", "_bottom", "visualValues", "_visualValues", "getFirstScaleId", "scales", "filter", "shift", "createDatasetContext", "parent", "createContext", "dataset", "createDataContext", "element", "dataIndex", "raw", "clearStacks", "_parsed", "isDirectUpdateMode", "cloneIfNotShared", "cached", "shared", "createStack", "canStack", "hidden", "_stacked", "DatasetController", "_ctx", "ctx", "_cachedDataOpts", "getMeta", "_type", "_parsing", "_data", "_objectData", "_sharedOptions", "_drawStart", "_drawCount", "enableOptionSharing", "supportsDecimation", "$context", "_syncList", "datasetElementType", "dataElementType", "initialize", "linkScales", "addElements", "fill", "isPluginEnabled", "console", "warn", "updateIndex", "getDataset", "chooseId", "xid", "xAxisID", "valueOrDefault", "yid", "yAxisID", "rid", "rAxisID", "indexAxis", "iid", "iAxisID", "vid", "vAxisID", "getScaleForId", "rScale", "datasets", "getDatasetMeta", "scaleID", "_getOtherScale", "reset", "_destroy", "unlistenArrayEvents", "_dataCheck", "isExtensible", "listenArrayEvents", "buildOrUpdateElements", "resetNewElements", "stackChanged", "oldStacked", "_resyncElements", "scopeKeys", "datasetScopeKeys", "scopes", "getOptionScopes", "createResolver", "getContext", "parsing", "parse", "count", "sorted", "_sorted", "prev", "parseArrayData", "parseObjectData", "parsePrimitiveData", "isNotInOrderComparedToPrev", "labels", "getLabels", "singleScale", "xAxisKey", "yAxisKey", "resolveObjectKey", "getParsed", "getDataElement", "updateRangeFromParsed", "range", "parsedValue", "NaN", "getMinMax", "otherScale", "otherMin", "otherMax", "_skip", "getAllParsedValues", "getMaxOverflow", "getLabelAndValue", "label", "getLabelForValue", "_clip", "clip", "elements", "area", "chartArea", "drawActiveElementsOnTop", "getStyle", "resolveDatasetElementOptions", "resolveDataElementOptions", "context", "_resolveElementOptions", "elementType", "cache", "cacheKey", "sharing", "defined", "datasetElementScopeKeys", "prefixes", "names", "resolveNamedOptions", "freeze", "_resolveAnimations", "transition", "datasetAnimationScopeKeys", "_cacheable", "getSharedOptions", "includeOptions", "sharedOptions", "_animationsDisabled", "_getSharedOptions", "firstOpts", "previouslySharedOptions", "updateSharedOptions", "updateElement", "_setStyle", "removeHoverStyle", "setHoverStyle", "_removeDatasetHoverStyle", "_setDatasetHoverStyle", "arg1", "arg2", "numMeta", "numData", "_insertElements", "_removeElements", "move", "arr", "updateElements", "removed", "splice", "_sync", "args", "_dataChanges", "_onDataPush", "arguments", "_onDataPop", "_onDataShift", "_onDataSplice", "newCount", "_onDataUnshift", "getAllScaleValues", "_cache", "$bar", "visibleMetas", "concat", "_arrayUnique", "sort", "a", "computeMinSampleSize", "_length", "curr", "updateMinAndPrev", "abs", "getPixelForValue", "ticks", "getPixelForTick", "computeFitCategoryTraits", "ruler", "stackCount", "thickness", "barThickness", "ratio", "isNullOrUndef", "categoryPercentage", "barPercentage", "chunk", "pixels", "computeFlexCategoryTraits", "next", "percent", "parseFloatBar", "entry", "startValue", "endValue", "barStart", "barEnd", "_custom", "parseValue", "parseArrayOrPrimitive", "isFloatBar", "custom", "barSign", "actualBase", "isHorizontal", "borderProps", "horizontal", "base", "setBorderSkipped", "edge", "borderSkipped", "enableBorderRadius", "parseEdge", "swap", "startEnd", "orig", "v1", "v2", "v", "setInflateAmount", "inflateAmount", "BarController", "obj", "bars", "getBasePixel", "_getRuler", "vpixels", "head", "_calculateBarValuePixels", "ipixels", "_calculateBarIndexPixels", "center", "height", "width", "_getStacks", "last", "grouped", "currentParsed", "iScaleValue", "skipNull", "find", "val", "isNaN", "indexOf", "_getStackCount", "_getStackIndex", "name", "_startPixel", "_endPixel", "baseValue", "minBarLength", "floating", "getDataVisibility", "startPixel", "getPixelForDecimal", "endPixel", "getValueForPixel", "halfGrid", "getLineWidthForValue", "maxBarThickness", "Infinity", "stackIndex", "rects", "numbers", "overrides", "_index_", "offset", "grid", "_value_", "beginAtZero", "BubbleController", "radius", "points", "point", "iPixel", "vPixel", "skip", "getRatioAndOffset", "rotation", "circumference", "cutout", "ratioX", "ratioY", "offsetX", "offsetY", "TAU", "startAngle", "endAngle", "startX", "cos", "startY", "sin", "endX", "endY", "calcMax", "angle", "_angleBetween", "calcMin", "maxX", "maxY", "HALF_PI", "minX", "PI", "minY", "DoughnutController", "innerRadius", "outerRadius", "getter", "_getRotation", "toRadians", "_getCircumference", "_getRotationExtents", "isDatasetVisible", "arcs", "spacing", "getMaxBorderWidth", "getMaxOffset", "maxSize", "toPercentage", "chartWeight", "_getRingWeight", "maxWidth", "maxHeight", "maxRadius", "toDimension", "radiusLength", "_getVisibleDatasetWeightTotal", "total", "calculateTotal", "_getRingWeightOffset", "_circumference", "animateRotate", "calculateCircumference", "animationOpts", "centerX", "centerY", "animateScale", "arc", "metaData", "formatNumber", "locale", "borderAlign", "borderWidth", "hoverBorderWidth", "hoverOffset", "ringWeightOffset", "weight", "descriptors", "_scriptable", "_indexable", "startsWith", "aspectRatio", "plugins", "legend", "generateLabels", "pointStyle", "map", "style", "text", "fillStyle", "backgroundColor", "strokeStyle", "borderColor", "fontColor", "lineWidth", "onClick", "e", "legendItem", "toggleDataVisibility", "LineController", "line", "_dataset", "animationsDisabled", "_getStartAndCountOfVisiblePoints", "_scaleRangesChanged", "_datasetIndex", "_decimated", "showLine", "segment", "animated", "spanGaps", "maxGapLength", "isNumber", "directUpdate", "pointsCount", "prevParsed", "nullData", "border", "firstPoint", "lastPoint", "updateControlPoints", "PolarAreaController", "_parseObjectDataRadialScale", "bind", "_updateRadius", "minSize", "cutoutPercentage", "getVisibleDatasetCount", "xCenter", "yCenter", "datasetStartAngle", "getIndexAngle", "defaultAngle", "countVisibleElements", "_computeAngle", "getDistanceFromCenterForValue", "angleLines", "display", "circular", "pointLabels", "PieController", "RadarController", "_fullLoop", "pointPosition", "getPointPositionForValue", "ScatterController", "registry", "getElement", "interaction", "abstract", "Error", "DateAdapterBase", "override", "members", "prototype", "init", "formats", "format", "diff", "startOf", "endOf", "_date", "binarySearch", "metaset", "intersect", "lookupMethod", "_reversePixels", "_rlookupByKey", "_lookupByKey", "result", "distanceToDefinedLo", "slice", "lo", "findIndex", "distanceToDefinedHi", "hi", "el", "getRange", "evaluateInteractionItems", "position", "handler", "getSortedVisibleDatasetMetas", "j", "getDistanceMetricForAxis", "useX", "useY", "pt1", "pt2", "deltaX", "deltaY", "sqrt", "pow", "getIntersectItems", "useFinalPosition", "includeInvisible", "isPointInArea", "evaluationFunc", "_isPointInArea", "inRange", "getNearestRadialItems", "getProps", "getAngleFromPoint", "getNearestCartesianItems", "distanceMetric", "minDistance", "getCenterPoint", "pointInArea", "distance", "getNearestItems", "getAxisItems", "rangeMethod", "intersectsItem", "modes", "getRelativePosition", "nearest", "STATIC_POSITIONS", "filterByPosition", "array", "pos", "filterDynamicPositionByAxis", "box", "sortByWeight", "v0", "wrapBoxes", "boxes", "layoutBoxes", "stackWeight", "buildStacks", "layouts", "wrap", "includes", "_stack", "placed", "setLayoutDims", "params", "vBoxMaxWidth", "hBoxMaxHeight", "layout", "fullSize", "availableWidth", "availableHeight", "buildLayoutBoxes", "centerHorizontal", "centerVertical", "leftAndTop", "rightAndBottom", "vertical", "getCombinedMax", "maxPadding", "updateMaxPadding", "boxPadding", "updateDims", "getPadding", "newWidth", "outerWidth", "newHeight", "outerHeight", "widthChanged", "w", "heightChanged", "h", "same", "other", "handleMaxPadding", "updatePos", "change", "getMargins", "marginForPositions", "positions", "margin", "fitBoxes", "refitBoxes", "refit", "changed", "setBoxDims", "placeBoxes", "userPadding", "padding", "addBox", "_layers", "z", "removeBox", "layoutItem", "minPadding", "toPadding", "verticalBoxes", "horizontalBoxes", "each", "beforeLayout", "visibleVerticalBoxCount", "BasePlatform", "acquireContext", "canvas", "releaseContext", "addEventListener", "listener", "removeEventListener", "getDevicePixelRatio", "getMaximumSize", "isAttached", "updateConfig", "BasicPlatform", "EXPANDO_KEY", "EVENT_TYPES", "touchstart", "touchmove", "touchend", "pointerenter", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointerout", "isNullOrEmpty", "initCanvas", "renderHeight", "getAttribute", "renderWidth", "boxSizing", "displayWidth", "readUsedSize", "displayHeight", "eventListenerOptions", "supportsEventListenerOptions", "passive", "addListener", "node", "removeListener", "fromNativeEvent", "native", "nodeListContains", "nodeList", "contains", "createAttachObserver", "observer", "MutationObserver", "entries", "trigger", "addedNodes", "removedNodes", "observe", "document", "childList", "subtree", "createDetachObserver", "drpListeningCharts", "oldDevicePixelRatio", "onWindowResize", "dpr", "devicePixelRatio", "resize", "currentDevicePixelRatio", "listenDevicePixelRatioChanges", "unlistenDevicePixelRatioChanges", "createResizeObserver", "container", "_getParentNode", "throttled", "clientWidth", "ResizeObserver", "contentRect", "releaseObserver", "disconnect", "createProxyAndListen", "proxy", "DomPlatform", "removeAttribute", "setAttribute", "proxies", "$proxies", "handlers", "attach", "detach", "isConnected", "_detectPlatform", "_isDomSupported", "OffscreenCanvas", "Element", "tooltipPosition", "hasValue", "final", "ret", "defaultRoutes", "autoSkip", "tickOpts", "determinedMaxTicks", "determineMaxTicks", "ticksLimit", "maxTicksLimit", "majorIndices", "major", "enabled", "getMajorIndices", "numMajorIndices", "first", "newTicks", "skipMajors", "calculateSpacing", "avgMajorSpacing", "round", "tickLength", "_tickSize", "maxScale", "maxChart", "_maxLength", "evenMajorSpacing", "getEvenSpacing", "factors", "_factorize", "ceil", "majorStart", "majorEnd", "len", "reverseAlign", "align", "offsetFromEdge", "getTicksLimit", "ticksLength", "sample", "numItems", "increment", "getPixelForGridLine", "offsetGridLines", "validIndex", "epsilon", "lineValue", "garbageCollect", "caches", "gc", "gcLen", "getTickMarkLength", "drawTicks", "getTitleHeight", "fallback", "font", "toFont", "lines", "lineHeight", "createScaleContext", "createTickContext", "titleAlign", "_toLeftRightCenter", "titleArgs", "titleX", "titleY", "_alignStartEnd", "positionAxisID", "Scale", "_margins", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "labelRotation", "_range", "_gridLineItems", "_labelItems", "_labelSizes", "_longestTextCache", "_userMax", "_userMin", "_suggestedMax", "_suggestedMin", "_ticksLength", "_borderValue", "_dataLimitsCached", "setContext", "suggestedMin", "suggestedMax", "finiteOrDefault", "metas", "getTicks", "xLabels", "yLabels", "getLabelItems", "_computeLabelItems", "beforeUpdate", "margins", "grace", "sampleSize", "beforeSetDimensions", "setDimensions", "afterSetDimensions", "beforeDataLimits", "determineDataLimits", "afterDataLimits", "_addGrace", "beforeBuildTicks", "buildTicks", "afterBuildTicks", "samplingEnabled", "_convertTicksToLabels", "beforeCalculateLabelRotation", "calculateLabelRotation", "afterCalculateLabelRotation", "source", "afterAutoSkip", "beforeFit", "fit", "afterFit", "afterUpdate", "reversePixels", "_alignToPixels", "alignToPixels", "_callHooks", "notifyPlugins", "beforeTickToLabelConversion", "generateTickLabels", "callback", "afterTickToLabelConversion", "numTicks", "minRotation", "maxRotation", "tickWidth", "maxLabelDiagonal", "_isVisible", "labelSizes", "_getLabelSizes", "maxLabelWidth", "widest", "maxLabelHeight", "highest", "_limitValue", "title", "toDegrees", "asin", "titleOpts", "gridOpts", "titleHeight", "tickPadding", "angleRadians", "labelHeight", "mirror", "labelWidth", "_calculatePadding", "_handleMargins", "isRotated", "labelsBelowTicks", "offsetLeft", "offsetRight", "isFullSize", "_computeLabelSizes", "widths", "heights", "widestLabelSize", "highestLabelSize", "jlen", "tickFont", "fontString", "nestedLabel", "_resolveTickFontOptions", "string", "_measureText", "valueAt", "idx", "pixel", "decimal", "_int16Range", "_alignPixel", "getDecimalForPixel", "getBaseValue", "optionTicks", "rot", "autoSkipPadding", "_computeGridLineItems", "tl", "borderOpts", "axisWidth", "axisHalfWidth", "alignBorderValue", "borderValue", "alignedLineValue", "tx1", "ty1", "tx2", "ty2", "x1", "y1", "x2", "y2", "limit", "step", "optsAtIndex", "optsAtIndexBorder", "lineColor", "borderDash", "dash", "borderDashOffset", "dashOffset", "tickColor", "tickBorderDash", "tickBorderDashOffset", "crossAlign", "tickAndPadding", "hTickAndPadding", "textAlign", "lineCount", "textOffset", "textBaseline", "_getXAxisLabelAlignment", "_getYAxisLabelAlignment", "labelOffset", "halfCount", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "tickTextAlign", "showLabelBackdrop", "backdrop", "labelPadding", "backdropPadding", "backdropColor", "translation", "_computeLabelArea", "drawBackground", "save", "fillRect", "restore", "drawGrid", "drawLine", "p1", "p2", "setLineDash", "lineDashOffset", "beginPath", "moveTo", "lineTo", "stroke", "drawOnChartArea", "drawBorder", "lastLineWidth", "drawLabels", "clipArea", "renderTextOptions", "renderText", "unclipArea", "drawTitle", "tz", "gz", "bz", "axisID", "_maxDigits", "fontSize", "TypedRegistry", "scope", "create", "isForType", "isPrototypeOf", "register", "proto", "getPrototypeOf", "parentScope", "isIChartComponent", "registerDefaults", "unregister", "itemDefaults", "merge", "routeDefaults", "describe", "routes", "property", "propertyParts", "split", "sourceName", "sourceScope", "join", "parts", "targetName", "targetScope", "route", "Registry", "controllers", "_typedRegistries", "_each", "addControllers", "addPlugins", "addScales", "getController", "_get", "getPlugin", "getScale", "removeControllers", "removeElements", "removePlugins", "removeScales", "typedRegistry", "arg", "reg", "_getRegistryForType", "_exec", "itemReg", "component", "camelMethod", "_capitalize", "PluginService", "_init", "notify", "hook", "_createDescriptors", "_descriptors", "descriptor", "plugin", "callCallback", "cancelable", "invalidate", "_oldCache", "_notifyStateChanges", "allPlugins", "createDescriptors", "previousDescriptors", "some", "localIds", "local", "getOpts", "pluginOpts", "pluginScopeKeys", "scriptable", "indexable", "allKeys", "getIndexAxis", "datasetDefaults", "datasetOptions", "getAxisFromDefaultScaleID", "getDefaultScaleIDFromAxis", "idMatchesAxis", "axisFromPosition", "determineAxis", "scaleOptions", "toLowerCase", "getAxisFromDataset", "retrieveAxisFromDatasets", "boundDs", "d", "mergeScaleConfig", "chartDefaults", "configScales", "chartIndexAxis", "scaleConf", "error", "_proxy", "defaultId", "defaultScaleOptions", "mergeIf", "defaultID", "initOptions", "initData", "initConfig", "keyCache", "keysCached", "Set", "cachedKeys", "generate", "addIfFound", "Config", "_config", "_scopeCache", "_resolverCache", "platform", "clearCache", "clear", "datasetType", "additionalOptionScopes", "_cachedScopes", "mainScope", "resetCache", "keyLists", "chartOptionScopes", "resolver", "subPrefixes", "getResolver", "needContext", "isFunction", "subResolver", "_attachContext", "descriptorDefaults", "resolverCache", "_createResolver", "p", "hasFunction", "isScriptable", "isIndexable", "KNOWN_POSITIONS", "positionIsHorizontal", "compare2Level", "l1", "l2", "onAnimationsComplete", "onComplete", "onAnimationProgress", "onProgress", "getCanvas", "getElementById", "instances", "getChart", "c", "moveNumericKeys", "intKey", "determineLastEvent", "lastEvent", "inChartArea", "isClick", "Chart", "invalidatePlugins", "userConfig", "initialCanvas", "existingChart", "uid", "_options", "_aspectRatio", "_metasets", "_lastEvent", "_listeners", "_responsiveListeners", "_sortedMetasets", "_plugins", "_hiddenIndices", "attached", "_doResize", "debounce", "resizeDelay", "_initialize", "maintainAspectRatio", "responsive", "retinaScale", "bindEvents", "clearCanvas", "_resize", "_resizeBeforeDraw", "newSize", "newRatio", "onResize", "render", "ensureScalesHaveIDs", "scalesOptions", "axisOptions", "buildOrUpdateScales", "scaleOpts", "updated", "isRadial", "dposition", "dtype", "scaleType", "scaleClass", "hasUpdated", "_updateMetasets", "_destroyDatasetMeta", "_removeUnreferencedMetasets", "buildOrUpdateControllers", "newControllers", "order", "visible", "ControllerClass", "_resetElements", "animsDisabled", "_updateScales", "_checkEventBindings", "_updateHiddenIndices", "_minPadding", "autoPadding", "_updateLayout", "_updateDatasets", "_eventHandler", "_updateHoverStyles", "existingEvents", "newEvents", "events", "setsEqual", "unbindEvents", "changes", "_getUniformDataChanges", "datasetCount", "makeSet", "changeSet", "noArea", "_idx", "_updateDataset", "layers", "_drawDatasets", "_drawDataset", "getDatasetClipArea", "getElementsAtEventForMode", "Interaction", "setDatasetVisibility", "_updateVisibility", "hide", "show", "_stop", "destroy", "toBase64Image", "toDataURL", "bindUserEvents", "bindResponsiveEvents", "_add", "_remove", "detached", "updateHoverStyle", "prefix", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "_elementsEqual", "pluginId", "replay", "hoverOptions", "hover", "deactivated", "activated", "eventFilter", "_handleEvent", "_getActiveElements", "_isClickEvent", "onHover", "version", "clipArc", "pixelMargin", "angleMargin", "closePath", "toRadiusCorners", "_readValueToProps", "parseBorderRadius", "angleDelta", "o", "borderRadius", "halfThickness", "innerLimit", "computeOuterLimit", "outerArcLimit", "outerStart", "outerEnd", "innerStart", "innerEnd", "rThetaToXY", "theta", "pathArc", "innerR", "spacingOffset", "alpha", "noSpacingInnerRadius", "noSpacingOuterRadius", "avNogSpacingRadius", "adjustedAngle", "beta", "angleOffset", "outerStartAdjustedRadius", "outerEndAdjustedRadius", "outerStartAdjustedAngle", "outerEndAdjustedAngle", "innerStartAdjustedRadius", "innerEndAdjustedRadius", "innerStartAdjustedAngle", "innerEndAdjustedAngle", "outerMidAdjustedAngle", "pCenter", "p4", "innerMidAdjustedAngle", "p8", "outerStartX", "outerStartY", "outerEndX", "outerEndY", "drawArc", "fullCircles", "borderJoinStyle", "inner", "lineJoin", "ArcElement", "chartX", "chartY", "rAdjust", "nonZeroBetween", "betweenAngles", "withinRadius", "_isBetween", "halfAngle", "halfRadius", "translate", "fix", "radiusOffset", "setStyle", "lineCap", "borderCapStyle", "previous", "getLineMethod", "stepped", "_steppedLineTo", "tension", "cubicInterpolationMode", "_bezierCurveTo", "pathVars", "paramsStart", "paramsEnd", "segmentStart", "segmentEnd", "outside", "pathSegment", "lineMethod", "fastPathSegment", "avgX", "countX", "prevX", "lastY", "pointIndex", "drawX", "truncX", "_getSegmentMethod", "useFastPath", "_getInterpolationMethod", "_steppedInterpolation", "_bezierInterpolation", "_pointInLine", "strokePathWithCache", "path", "_path", "Path2D", "strokePathDirect", "segments", "segmentMethod", "usePath2D", "LineElement", "_points", "_segments", "_pointsUpdated", "_updateBezierControlPoints", "_computeSegments", "interpolate", "_boundSegments", "_interpolate", "interpolated", "capBezierPoints", "hitRadius", "PointElement", "mouseX", "mouseY", "inXRange", "inYRange", "hoverRadius", "drawPoint", "getBarBounds", "bar", "half", "skipOrLimit", "parseBorderWidth", "maxW", "maxH", "toTRBL", "toTRBLCorners", "maxR", "enableBorder", "topLeft", "topRight", "bottomLeft", "bottomRight", "boundingRects", "bounds", "outer", "skipX", "skipY", "skipBoth", "hasRadius", "addNormalRectPath", "rect", "inflateRect", "amount", "refRect", "BarElement", "addRectPath", "addRoundedRectPath", "BORDER_COLORS", "BACKGROUND_COLORS", "replace", "getBorderColor", "getBackgroundColor", "colorizeDefaultDataset", "colorizeDoughnutDataset", "colorizePolarAreaDataset", "getColorizer", "containsColorsDefinitions", "k", "containsColorsDefinition", "containsDefaultColorsDefenitions", "forceOverride", "_args", "chartOptions", "containsColorDefenition", "colorizer", "lttbDecimation", "samples", "decimated", "bucketWidth", "sampledIndex", "endIndex", "maxAreaPoint", "maxArea", "nextA", "avgY", "avgRangeStart", "avgRangeEnd", "avgRangeLength", "rangeOffs", "rangeTo", "pointAx", "pointAy", "minMaxDecimation", "minIndex", "maxIndex", "startIndex", "xMin", "xMax", "dx", "lastIndex", "intermediateIndex1", "intermediateIndex2", "cleanDecimatedDataset", "defineProperty", "configurable", "enumerable", "writable", "cleanDecimatedData", "getStartAndCountOfVisiblePointsSimplified", "pointCount", "algorithm", "beforeElementsUpdate", "xAxis", "threshold", "tpoints", "_findSegmentEnd", "_getBounds", "targetSegments", "tgt", "subBounds", "fillSources", "_boundSegment", "fillSource", "_getEdge", "_normalizeAngle", "_pointsFromSegments", "boundary", "linePoints", "_createBoundaryLine", "_shouldApplyFill", "_resolveTarget", "sources", "propagate", "visited", "_decodeFill", "parseFillOption", "parseFloat", "decodeTargetIndex", "firstCh", "_getTargetPixel", "_getTargetValue", "fillOption", "_buildStackLine", "sourcePoints", "linesBelow", "getLinesBelow", "addPointsBelow", "below", "unshift", "sourcePoint", "postponed", "findPoint", "pointValue", "firstValue", "lastValue", "simpleArc", "_getTarget", "getLineByIndex", "computeBoundary", "computeCircularBoundary", "computeLinearBoundary", "_drawfill", "lineOpts", "above", "doFill", "clipVertical", "clipY", "lineLoop", "src", "notShape", "clipBounds", "interpolatedLineTo", "targetLoop", "interpolatedPoint", "afterDatasetsUpdate", "$filler", "beforeDraw", "drawTime", "beforeDatasetsDraw", "beforeDatasetDraw", "getBoxSize", "labelOpts", "boxHeight", "boxWidth", "usePointStyle", "pointStyleWidth", "itemHeight", "itemsEqual", "Legend", "_added", "legendHitBoxes", "_hoveredItem", "doughnutMode", "legendItems", "columnSizes", "lineWidths", "buildLabels", "labelFont", "_computeTitleHeight", "_fitRows", "_fitCols", "hitboxes", "totalHeight", "row", "itemWidth", "measureText", "_itemHeight", "heightLimit", "totalWidth", "currentColWidth", "currentColHeight", "col", "calculateItemSize", "adjustHitBoxes", "rtl", "rtlHelper", "getRtlAdapter", "hitbox", "leftForLtr", "_draw", "defaultColor", "halfFontSize", "cursor", "drawLegendBox", "lineDash", "drawOptions", "SQRT2", "xPlus", "drawPointLegend", "yBoxTop", "xBoxLeft", "fillText", "strikethrough", "overrideTextDirection", "textDirection", "textWidth", "setWidth", "realX", "_textX", "fontLineHeight", "calculateLegendItemHeight", "restoreTextDirection", "titleFont", "titlePadding", "topPaddingPlusHalfFontSize", "_getLegendItemAt", "hitBox", "lh", "handleEvent", "isListened", "hoveredItem", "sameItem", "onLeave", "calculateItemWidth", "calculateItemHeight", "legendItemText", "_element", "afterEvent", "ci", "useBorderRadius", "Title", "_padding", "textSize", "_drawArgs", "fontOpts", "createTitle", "titleBlock", "WeakMap", "positioners", "average", "xSet", "xAverage", "eventPosition", "nearestElement", "distanceBetweenPoints", "tp", "pushOrConcat", "toPush", "apply", "splitNewlines", "str", "String", "createTooltipItem", "formattedValue", "getTooltipSize", "tooltip", "body", "footer", "bodyFont", "footerFont", "titleLineCount", "footerLineCount", "bodyLineItemCount", "combinedBodyLength", "bodyItem", "before", "after", "beforeBody", "afterBody", "titleSpacing", "titleMarginBottom", "bodyLineHeight", "displayColors", "bodySpacing", "footerMarginTop", "footerSpacing", "widthPadding", "maxLineWidth", "determineYAlign", "doesNotFitWithAlign", "xAlign", "caret", "caretSize", "caretPadding", "determineXAlign", "yAlign", "chartWidth", "determineAlignment", "alignX", "alignY", "paddingAndSize", "getBackgroundPoint", "alignment", "cornerRadius", "getAlignedX", "getBeforeAfterBodyLines", "createTooltipContext", "tooltipItems", "overrideCallbacks", "defaultCallbacks", "beforeTitle", "noop", "labelCount", "afterTitle", "beforeLabel", "tooltipItem", "labelColor", "labelTextColor", "bodyColor", "labelPointStyle", "afterLabel", "beforeFooter", "afterFooter", "invokeCallbackWithFallback", "Tooltip", "opacity", "_eventPosition", "_size", "_cachedAnimations", "_tooltipItems", "dataPoints", "caretX", "caretY", "labelColors", "labelPointStyles", "labelTextColors", "getTitle", "getBeforeBody", "getBody", "bodyItems", "scoped", "getAfterBody", "getFooter", "_createItems", "itemSort", "positionAndSize", "backgroundPoint", "external", "drawCaret", "tooltipPoint", "caretPosition", "getCaretPosition", "x3", "y3", "ptX", "ptY", "pt", "titleColor", "_drawColorBox", "colorX", "rtlColorX", "yOffSet", "colorY", "multiKeyBackground", "outerX", "innerX", "strokeRect", "drawBody", "bodyAlign", "xLinePadding", "fillLineOfText", "bodyAlignForCalculation", "textColor", "drawFooter", "footerAlign", "footerColor", "tooltipSize", "quadraticCurveTo", "_updateAnimationTarget", "animX", "animY", "_willRender", "hasTooltipContent", "globalAlpha", "positionChanged", "_positionChanged", "_ignoreReplayEvents", "afterInit", "afterDraw", "_fallback", "addIfString", "addedLabels", "findOrAddLabel", "lastIndexOf", "_getLabelForValue", "CategoryScale", "_startValue", "_valueRange", "_addedLabels", "added", "generateTicks", "generationOptions", "dataRange", "MIN_SPACING", "precision", "maxTicks", "maxDigits", "includeBounds", "unit", "maxSpaces", "rmin", "rmax", "countDefined", "minSpacing", "niceNum", "niceMin", "niceMax", "numSpaces", "almostWhole", "almostEquals", "decimalPlaces", "_decimalPlaces", "relativeLabelSize", "tickValue", "rad", "LinearScaleBase", "_endValue", "handleTickRangeOptions", "setMin", "setMax", "minSign", "maxSign", "getTickLimit", "stepSize", "computeTickLimit", "numericGeneratorOptions", "_setMinAndMaxByKey", "LinearScale", "Ticks", "formatters", "numeric", "log10Floor", "log10", "changeExponent", "m", "isMajor", "tickVal", "steps", "rangeExp", "rangeStep", "startExp", "minExp", "exp", "significand", "lastTick", "LogarithmicScale", "_zero", "logarithmic", "getTickBackdropHeight", "measureLabelSize", "_longestText", "determineLimits", "fitWithPointLabels", "limits", "valueCount", "_pointLabels", "pointLabelOpts", "additionalAngle", "centerPointLabels", "getPointLabelContext", "getPointPosition", "drawingArea", "plFont", "hLimits", "vLimits", "updateLimits", "setCenterPoint", "_pointLabelItems", "buildPointLabelItems", "createPointLabelItem", "itemOpts", "outerDistance", "extra", "pointLabelPosition", "yForAngle", "getTextAlignForAngle", "leftForTextAlign", "isNotOverlapped", "apexesInArea", "drawPointLabelBox", "backdropLeft", "backdropTop", "backdropWidth", "backdropHeight", "drawPointLabels", "pathRadiusLine", "drawRadiusLine", "gridLineOpts", "createPointLabelContext", "RadialLinearScale", "leftMovement", "rightMovement", "topMovement", "bottomMovement", "angleMultiplier", "scalingFactor", "getValueForDistanceFromCenter", "scaledDistance", "pointLabel", "distanceFromCenter", "getBasePosition", "getPointLabelPosition", "rotate", "animate", "INTERVALS", "millisecond", "common", "second", "minute", "hour", "day", "week", "month", "quarter", "year", "UNITS", "sorter", "input", "adapter", "_adapter", "parser", "isoWeekday", "_parseOpts", "determineUnitForAutoTicks", "minUnit", "capacity", "interval", "MAX_SAFE_INTEGER", "determineUnitForFormatting", "determineMajorUnit", "addTick", "time", "timestamps", "_lookup", "timestamp", "setMajorTicks", "majorUnit", "ticksFromTimestamps", "TimeScale", "_unit", "_majorUnit", "_offsets", "_normalized", "adapters", "displayFormats", "normalized", "_applyBounds", "_getLabelBounds", "getLabelTimestamps", "timeOpts", "_generate", "_filterBetween", "_getLabelCapacity", "initOffsets", "offsetAfterAutoskip", "getDecimalForValue", "minor", "weekday", "hasWeekday", "getDataTimestamps", "tooltipFormat", "datetime", "fmt", "_tickFormatFunction", "formatter", "minorFormat", "majorFormat", "offsets", "_getLabelSize", "ticksOpts", "tickLabelWidth", "cosRotation", "sinRotation", "tickFontSize", "exampleTime", "exampleLabel", "normalize", "table", "prevSource", "nextSource", "prevTarget", "nextTarget", "span", "TimeSeriesScale", "_table", "_minPos", "_tableRange", "_getTimestampsForTable", "buildLookupTable", "registerables", "import_vue", "_pushScopeId", "_popScopeId", "_createElementVNode", "_openBlock", "_createElementBlock", "amount_saved_default", "amount_saved_default"]
}
